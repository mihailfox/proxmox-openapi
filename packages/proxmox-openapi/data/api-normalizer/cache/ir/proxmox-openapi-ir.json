{
  "irVersion": "1.0.0",
  "normalizedAt": "2025-10-19T20:08:46.120Z",
  "source": {
    "snapshotChecksum": "48a68dbc1353e47c18edf6c4a5a60d52c61737ee3eb7ed01c597f8e6058c81b2",
    "scrapedAt": "2025-10-19T20:08:38.846Z",
    "sourceUrl": "https://pve.proxmox.com/pve-docs/api-viewer/",
    "documentTitle": "Proxmox VE API Documentation",
    "rawStats": {
      "rootGroupCount": 6,
      "endpointCount": 628
    }
  },
  "summary": {
    "groupCount": 412,
    "endpointCount": 628,
    "methodCount": 628
  },
  "groups": [
    {
      "id": "access",
      "path": "/access",
      "slug": "access",
      "label": "access",
      "endpoints": [
        {
          "id": "get-access",
          "operationId": "get-access",
          "path": "/access",
          "httpMethod": "GET",
          "name": "index",
          "description": "Directory index.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": false,
            "permissions": {
              "all": [
                {
                  "user": "all"
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "subdir": {
                      "type": "string"
                    }
                  }
                },
                "metadata": {
                  "links": [
                    {
                      "href": "{subdir}",
                      "rel": "child"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "children": [
        {
          "id": "access-acl",
          "path": "/access/acl",
          "slug": "access-acl",
          "label": "acl",
          "endpoints": [
            {
              "id": "get-access-acl",
              "operationId": "get-access-acl",
              "path": "/access/acl",
              "httpMethod": "GET",
              "name": "read_acl",
              "description": "Get Access Control List (ACLs).",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "description": "The returned list is restricted to objects where you have rights to modify permissions.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Access control path"
                        },
                        "propagate": {
                          "type": "boolean",
                          "description": "Allow to propagate (inherit) permissions.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "roleid": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "group",
                            "token"
                          ]
                        },
                        "ugid": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              ]
            },
            {
              "id": "put-access-acl",
              "operationId": "put-access-acl",
              "path": "/access/acl",
              "httpMethod": "PUT",
              "name": "update_acl",
              "description": "Update Access Control List (add or remove permissions).",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm-modify",
                        "{path}"
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "delete": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Remove permissions (instead of adding it).",
                      "optional": true
                    },
                    "groups": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of groups.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-groupid-list"
                      }
                    },
                    "path": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Access control path"
                    },
                    "propagate": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Allow to propagate (inherit) permissions.",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "roles": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of roles.",
                      "constraints": {
                        "format": "pve-roleid-list"
                      }
                    },
                    "tokens": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of API tokens.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-tokenid-list"
                      }
                    },
                    "users": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of users.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-userid-list"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "access-domains",
          "path": "/access/domains",
          "slug": "access-domains",
          "label": "domains",
          "endpoints": [
            {
              "id": "get-access-domains",
              "operationId": "get-access-domains",
              "path": "/access/domains",
              "httpMethod": "GET",
              "name": "index",
              "description": "Authentication domain index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "description": "Anyone can access that, because we need that list for the login box (before the user is authenticated).",
                      "user": "world"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "description": "A comment. The GUI use this text when you select a domain (Realm) on the login window.",
                          "optional": true
                        },
                        "realm": {
                          "type": "string"
                        },
                        "tfa": {
                          "type": "string",
                          "description": "Two-factor authentication provider.",
                          "optional": true,
                          "enum": [
                            "yubico",
                            "oath"
                          ]
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{realm}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-access-domains",
              "operationId": "post-access-domains",
              "path": "/access/domains",
              "httpMethod": "POST",
              "name": "create",
              "description": "Add an authentication server.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/access/realm",
                        [
                          "Realm.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acr-values": {
                      "type": "string",
                      "description": "Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.",
                      "optional": true,
                      "constraints": {
                        "pattern": "^[^\\x00-\\x1F\\x7F <>#\"]*$"
                      }
                    },
                    "autocreate": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Automatically create users if they do not exist.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "base_dn": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP base domain name",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "bind_dn": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP bind domain name",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "capath": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Path to the CA certificate store",
                      "optional": true,
                      "defaultValue": "/etc/ssl/certs"
                    },
                    "case-sensitive": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "username is case-sensitive",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "cert": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Path to the client certificate",
                      "optional": true
                    },
                    "certkey": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Path to the client certificate key",
                      "optional": true
                    },
                    "check-connection": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Check bind connection to the server.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "client-id": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "OpenID Client ID",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "client-key": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "OpenID Client Key",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "comment": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Description.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 4096
                      }
                    },
                    "default": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Use this as default realm",
                      "optional": true
                    },
                    "domain": {
                      "type": "string",
                      "description": "AD domain name",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256,
                        "pattern": "\\S+"
                      }
                    },
                    "filter": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP filter for user sync.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 2048
                      }
                    },
                    "group_classes": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The objectclasses for groups.",
                      "optional": true,
                      "defaultValue": "groupOfNames, group, univentionGroup, ipausergroup",
                      "constraints": {
                        "format": "ldap-simple-attr-list"
                      }
                    },
                    "group_dn": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP base domain name for group sync. If not set, the base_dn will be used.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "group_filter": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP filter for group sync.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 2048
                      }
                    },
                    "group_name_attr": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256,
                        "format": "ldap-simple-attr"
                      }
                    },
                    "groups-autocreate": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Automatically create groups if they do not exist.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "groups-claim": {
                      "type": "string",
                      "description": "OpenID claim used to retrieve groups with.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256,
                        "pattern": "(?^:[A-Za-z0-9\\.\\-_]+)"
                      }
                    },
                    "groups-overwrite": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "All groups will be overwritten for the user on login.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "issuer-url": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "OpenID Issuer Url",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "mode": {
                      "type": "string",
                      "description": "LDAP protocol mode.",
                      "optional": true,
                      "defaultValue": "ldap",
                      "enum": [
                        "ldap",
                        "ldaps",
                        "ldap+starttls"
                      ]
                    },
                    "password": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.",
                      "optional": true
                    },
                    "port": {
                      "type": "integer",
                      "typetext": "<integer> (1 - 65535)",
                      "description": "Server port.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1,
                        "maximum": 65535
                      }
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.",
                      "optional": true,
                      "constraints": {
                        "pattern": "(?:none|login|consent|select_account|\\S+)"
                      }
                    },
                    "query-userinfo": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Enables querying the userinfo endpoint for claims values.",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "realm": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Authentication domain ID",
                      "constraints": {
                        "maxLength": 32,
                        "format": "pve-realm"
                      }
                    },
                    "scopes": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.",
                      "optional": true,
                      "defaultValue": "email profile"
                    },
                    "secure": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Use secure LDAPS protocol. DEPRECATED: use 'mode' instead.",
                      "optional": true
                    },
                    "server1": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Server IP address (or DNS name)",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256,
                        "format": "address"
                      }
                    },
                    "server2": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Fallback Server IP address (or DNS name)",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256,
                        "format": "address"
                      }
                    },
                    "sslversion": {
                      "type": "string",
                      "description": "LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!",
                      "optional": true,
                      "enum": [
                        "tlsv1",
                        "tlsv1_1",
                        "tlsv1_2",
                        "tlsv1_3"
                      ]
                    },
                    "sync-defaults-options": {
                      "type": "string",
                      "typetext": "[enable-new=<1|0>] [,full=<1|0>] [,purge=<1|0>] [,remove-vanished=([acl];[properties];[entry])|none] [,scope=<users|groups|both>]",
                      "description": "The default options for behavior of synchronizations.",
                      "optional": true,
                      "constraints": {
                        "format": "realm-sync-options"
                      }
                    },
                    "sync_attributes": {
                      "type": "string",
                      "description": "Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.",
                      "optional": true,
                      "constraints": {
                        "pattern": "\\w+=[^,]+(,\\s*\\w+=[^,]+)*"
                      }
                    },
                    "tfa": {
                      "type": "string",
                      "typetext": "type=<TFATYPE> [,digits=<COUNT>] [,id=<ID>] [,key=<KEY>] [,step=<SECONDS>] [,url=<URL>]",
                      "description": "Use Two-factor authentication.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 128,
                        "format": "pve-tfa-config"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Realm type.",
                      "enum": [
                        "ad",
                        "ldap",
                        "openid",
                        "pam",
                        "pve"
                      ]
                    },
                    "user_attr": {
                      "type": "string",
                      "description": "LDAP user attribute name",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256,
                        "pattern": "\\S{2,}"
                      }
                    },
                    "user_classes": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The objectclasses for users.",
                      "optional": true,
                      "defaultValue": "inetorgperson, posixaccount, person, user",
                      "constraints": {
                        "format": "ldap-simple-attr-list"
                      }
                    },
                    "username-claim": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "OpenID claim used to generate the unique username.",
                      "optional": true
                    },
                    "verify": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Verify the server's SSL certificate",
                      "optional": true,
                      "defaultValue": 0
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "access-domains-realm",
              "path": "/access/domains/{realm}",
              "slug": "access-domains-realm",
              "label": "{realm}",
              "endpoints": [
                {
                  "id": "delete-access-domains-realm",
                  "operationId": "delete-access-domains-realm",
                  "path": "/access/domains/{realm}",
                  "httpMethod": "DELETE",
                  "name": "delete",
                  "description": "Delete an authentication server.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access/realm",
                            [
                              "Realm.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "realm": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Authentication domain ID",
                          "constraints": {
                            "maxLength": 32,
                            "format": "pve-realm"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-access-domains-realm",
                  "operationId": "get-access-domains-realm",
                  "path": "/access/domains/{realm}",
                  "httpMethod": "GET",
                  "name": "read",
                  "description": "Get auth server configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access/realm",
                            [
                              "Realm.Allocate",
                              "Sys.Audit"
                            ],
                            "any",
                            1
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "realm": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Authentication domain ID",
                          "constraints": {
                            "maxLength": 32,
                            "format": "pve-realm"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": []
                },
                {
                  "id": "put-access-domains-realm",
                  "operationId": "put-access-domains-realm",
                  "path": "/access/domains/{realm}",
                  "httpMethod": "PUT",
                  "name": "update",
                  "description": "Update authentication server settings.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access/realm",
                            [
                              "Realm.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "acr-values": {
                          "type": "string",
                          "description": "Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.",
                          "optional": true,
                          "constraints": {
                            "pattern": "^[^\\x00-\\x1F\\x7F <>#\"]*$"
                          }
                        },
                        "autocreate": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Automatically create users if they do not exist.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "base_dn": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP base domain name",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256
                          }
                        },
                        "bind_dn": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP bind domain name",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256
                          }
                        },
                        "capath": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Path to the CA certificate store",
                          "optional": true,
                          "defaultValue": "/etc/ssl/certs"
                        },
                        "case-sensitive": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "username is case-sensitive",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "cert": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Path to the client certificate",
                          "optional": true
                        },
                        "certkey": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Path to the client certificate key",
                          "optional": true
                        },
                        "check-connection": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Check bind connection to the server.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "client-id": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "OpenID Client ID",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256
                          }
                        },
                        "client-key": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "OpenID Client Key",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256
                          }
                        },
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "default": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Use this as default realm",
                          "optional": true
                        },
                        "delete": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A list of settings you want to delete.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096,
                            "format": "pve-configid-list"
                          }
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "domain": {
                          "type": "string",
                          "description": "AD domain name",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "pattern": "\\S+"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP filter for user sync.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 2048
                          }
                        },
                        "group_classes": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The objectclasses for groups.",
                          "optional": true,
                          "defaultValue": "groupOfNames, group, univentionGroup, ipausergroup",
                          "constraints": {
                            "format": "ldap-simple-attr-list"
                          }
                        },
                        "group_dn": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP base domain name for group sync. If not set, the base_dn will be used.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256
                          }
                        },
                        "group_filter": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP filter for group sync.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 2048
                          }
                        },
                        "group_name_attr": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "format": "ldap-simple-attr"
                          }
                        },
                        "groups-autocreate": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Automatically create groups if they do not exist.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "groups-claim": {
                          "type": "string",
                          "description": "OpenID claim used to retrieve groups with.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "pattern": "(?^:[A-Za-z0-9\\.\\-_]+)"
                          }
                        },
                        "groups-overwrite": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "All groups will be overwritten for the user on login.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "issuer-url": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "OpenID Issuer Url",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256
                          }
                        },
                        "mode": {
                          "type": "string",
                          "description": "LDAP protocol mode.",
                          "optional": true,
                          "defaultValue": "ldap",
                          "enum": [
                            "ldap",
                            "ldaps",
                            "ldap+starttls"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.",
                          "optional": true
                        },
                        "port": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 65535)",
                          "description": "Server port.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1,
                            "maximum": 65535
                          }
                        },
                        "prompt": {
                          "type": "string",
                          "description": "Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.",
                          "optional": true,
                          "constraints": {
                            "pattern": "(?:none|login|consent|select_account|\\S+)"
                          }
                        },
                        "query-userinfo": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enables querying the userinfo endpoint for claims values.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "realm": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Authentication domain ID",
                          "constraints": {
                            "maxLength": 32,
                            "format": "pve-realm"
                          }
                        },
                        "scopes": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.",
                          "optional": true,
                          "defaultValue": "email profile"
                        },
                        "secure": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Use secure LDAPS protocol. DEPRECATED: use 'mode' instead.",
                          "optional": true
                        },
                        "server1": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Server IP address (or DNS name)",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "format": "address"
                          }
                        },
                        "server2": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Fallback Server IP address (or DNS name)",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "format": "address"
                          }
                        },
                        "sslversion": {
                          "type": "string",
                          "description": "LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!",
                          "optional": true,
                          "enum": [
                            "tlsv1",
                            "tlsv1_1",
                            "tlsv1_2",
                            "tlsv1_3"
                          ]
                        },
                        "sync-defaults-options": {
                          "type": "string",
                          "typetext": "[enable-new=<1|0>] [,full=<1|0>] [,purge=<1|0>] [,remove-vanished=([acl];[properties];[entry])|none] [,scope=<users|groups|both>]",
                          "description": "The default options for behavior of synchronizations.",
                          "optional": true,
                          "constraints": {
                            "format": "realm-sync-options"
                          }
                        },
                        "sync_attributes": {
                          "type": "string",
                          "description": "Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.",
                          "optional": true,
                          "constraints": {
                            "pattern": "\\w+=[^,]+(,\\s*\\w+=[^,]+)*"
                          }
                        },
                        "tfa": {
                          "type": "string",
                          "typetext": "type=<TFATYPE> [,digits=<COUNT>] [,id=<ID>] [,key=<KEY>] [,step=<SECONDS>] [,url=<URL>]",
                          "description": "Use Two-factor authentication.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 128,
                            "format": "pve-tfa-config"
                          }
                        },
                        "user_attr": {
                          "type": "string",
                          "description": "LDAP user attribute name",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "pattern": "\\S{2,}"
                          }
                        },
                        "user_classes": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The objectclasses for users.",
                          "optional": true,
                          "defaultValue": "inetorgperson, posixaccount, person, user",
                          "constraints": {
                            "format": "ldap-simple-attr-list"
                          }
                        },
                        "verify": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Verify the server's SSL certificate",
                          "optional": true,
                          "defaultValue": 0
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "access-domains-realm-sync",
                  "path": "/access/domains/{realm}/sync",
                  "slug": "access-domains-realm-sync",
                  "label": "sync",
                  "endpoints": [
                    {
                      "id": "post-access-domains-realm-sync",
                      "operationId": "post-access-domains-realm-sync",
                      "path": "/access/domains/{realm}/sync",
                      "httpMethod": "POST",
                      "name": "sync",
                      "description": "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "'Realm.AllocateUser' on '/access/realm/<realm>' and  'User.Modify' permissions to '/access/groups/'.",
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/access/realm/{realm}",
                                  [
                                    "Realm.AllocateUser"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/access/groups",
                                  [
                                    "User.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "dry-run": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "If set, does not write anything.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "enable-new": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable newly synced users immediately.",
                              "optional": true,
                              "defaultValue": "1"
                            },
                            "full": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "DEPRECATED: use 'remove-vanished' instead. If set, uses the LDAP Directory as source of truth, deleting users or groups not returned from the sync and removing all locally modified properties of synced users. If not set, only syncs information which is present in the synced data, and does not delete or modify anything else.",
                              "optional": true
                            },
                            "purge": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "DEPRECATED: use 'remove-vanished' instead. Remove ACLs for users or groups which were removed from the config during a sync.",
                              "optional": true
                            },
                            "realm": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Authentication domain ID",
                              "constraints": {
                                "maxLength": 32,
                                "format": "pve-realm"
                              }
                            },
                            "remove-vanished": {
                              "type": "string",
                              "typetext": "([acl];[properties];[entry])|none",
                              "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                              "optional": true,
                              "defaultValue": "none",
                              "constraints": {
                                "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none"
                              }
                            },
                            "scope": {
                              "type": "string",
                              "description": "Select what to sync.",
                              "optional": true,
                              "enum": [
                                "users",
                                "groups",
                                "both"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "description": "Worker Task-UPID",
                          "schema": {
                            "type": "string",
                            "description": "Worker Task-UPID"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "access-groups",
          "path": "/access/groups",
          "slug": "access-groups",
          "label": "groups",
          "endpoints": [
            {
              "id": "get-access-groups",
              "operationId": "get-access-groups",
              "path": "/access/groups",
              "httpMethod": "GET",
              "name": "index",
              "description": "Group index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "description": "The returned list is restricted to groups where you have 'User.Modify', 'Sys.Audit'  or 'Group.Allocate' permissions on /access/groups/<group>.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "optional": true
                        },
                        "groupid": {
                          "type": "string",
                          "constraints": {
                            "format": "pve-groupid"
                          }
                        },
                        "users": {
                          "type": "string",
                          "description": "list of users which form this group",
                          "optional": true,
                          "constraints": {
                            "format": "pve-userid-list"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{groupid}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-access-groups",
              "operationId": "post-access-groups",
              "path": "/access/groups",
              "httpMethod": "POST",
              "name": "create_group",
              "description": "Create new group.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/access/groups",
                        [
                          "Group.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "comment": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true
                    },
                    "groupid": {
                      "type": "string",
                      "typetext": "<string>",
                      "constraints": {
                        "format": "pve-groupid"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "access-groups-groupid",
              "path": "/access/groups/{groupid}",
              "slug": "access-groups-groupid",
              "label": "{groupid}",
              "endpoints": [
                {
                  "id": "delete-access-groups-groupid",
                  "operationId": "delete-access-groups-groupid",
                  "path": "/access/groups/{groupid}",
                  "httpMethod": "DELETE",
                  "name": "delete_group",
                  "description": "Delete group.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access/groups",
                            [
                              "Group.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "groupid": {
                          "type": "string",
                          "typetext": "<string>",
                          "constraints": {
                            "format": "pve-groupid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-access-groups-groupid",
                  "operationId": "get-access-groups-groupid",
                  "path": "/access/groups/{groupid}",
                  "httpMethod": "GET",
                  "name": "read_group",
                  "description": "Get group configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access/groups",
                            [
                              "Sys.Audit",
                              "Group.Allocate"
                            ],
                            "any",
                            1
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "groupid": {
                          "type": "string",
                          "typetext": "<string>",
                          "constraints": {
                            "format": "pve-groupid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "optional": true
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "put-access-groups-groupid",
                  "operationId": "put-access-groups-groupid",
                  "path": "/access/groups/{groupid}",
                  "httpMethod": "PUT",
                  "name": "update_group",
                  "description": "Update group data.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access/groups",
                            [
                              "Group.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        },
                        "groupid": {
                          "type": "string",
                          "typetext": "<string>",
                          "constraints": {
                            "format": "pve-groupid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "access-openid",
          "path": "/access/openid",
          "slug": "access-openid",
          "label": "openid",
          "endpoints": [
            {
              "id": "get-access-openid",
              "operationId": "get-access-openid",
              "path": "/access/openid",
              "httpMethod": "GET",
              "name": "index",
              "description": "Directory index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subdir": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{subdir}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "access-openid-auth-url",
              "path": "/access/openid/auth-url",
              "slug": "access-openid-auth-url",
              "label": "auth-url",
              "endpoints": [
                {
                  "id": "post-access-openid-auth-url",
                  "operationId": "post-access-openid-auth-url",
                  "path": "/access/openid/auth-url",
                  "httpMethod": "POST",
                  "name": "auth_url",
                  "description": "Get the OpenId Authorization Url for the specified realm.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "user": "world"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "realm": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Authentication domain ID",
                          "constraints": {
                            "maxLength": 32,
                            "format": "pve-realm"
                          }
                        },
                        "redirect-url": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Redirection Url. The client should set this to the used server url (location.origin).",
                          "constraints": {
                            "maxLength": 255
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "Redirection URL.",
                      "schema": {
                        "type": "string",
                        "description": "Redirection URL."
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "access-openid-login",
              "path": "/access/openid/login",
              "slug": "access-openid-login",
              "label": "login",
              "endpoints": [
                {
                  "id": "post-access-openid-login",
                  "operationId": "post-access-openid-login",
                  "path": "/access/openid/login",
                  "httpMethod": "POST",
                  "name": "login",
                  "description": " Verify OpenID authorization code and create a ticket.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "user": "world"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "code": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "OpenId authorization code.",
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "redirect-url": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Redirection Url. The client should set this to the used server url (location.origin).",
                          "constraints": {
                            "maxLength": 255
                          }
                        },
                        "state": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "OpenId state.",
                          "constraints": {
                            "maxLength": 1024
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "properties": {
                          "CSRFPreventionToken": {
                            "type": "string"
                          },
                          "cap": {
                            "type": "object"
                          },
                          "clustername": {
                            "type": "string",
                            "optional": true
                          },
                          "ticket": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "access-password",
          "path": "/access/password",
          "slug": "access-password",
          "label": "password",
          "endpoints": [
            {
              "id": "put-access-password",
              "operationId": "put-access-password",
              "path": "/access/password",
              "httpMethod": "PUT",
              "name": "change_password",
              "description": "Change user password.",
              "security": {
                "allowToken": false,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "Each user is allowed to change their own password. A user can change the password of another user if they have 'Realm.AllocateUser' (on the realm of user <userid>) and 'User.Modify' permission on /access/groups/<group> on a group where user <userid> is member of. For the PAM realm, a password change does not take  effect cluster-wide, but only applies to the local node.",
                      "check": [
                        "or",
                        [
                          "userid-param",
                          "self"
                        ],
                        [
                          "and",
                          [
                            "userid-param",
                            "Realm.AllocateUser"
                          ],
                          [
                            "userid-group",
                            [
                              "User.Modify"
                            ]
                          ]
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "confirmation-password": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The current password of the user performing the change.",
                      "optional": true,
                      "constraints": {
                        "minLength": 5,
                        "maxLength": 64
                      }
                    },
                    "password": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The new password.",
                      "constraints": {
                        "minLength": 8,
                        "maxLength": 64
                      }
                    },
                    "userid": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Full User ID, in the `name@realm` format.",
                      "constraints": {
                        "maxLength": 64,
                        "format": "pve-userid"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "access-permissions",
          "path": "/access/permissions",
          "slug": "access-permissions",
          "label": "permissions",
          "endpoints": [
            {
              "id": "get-access-permissions",
              "operationId": "get-access-permissions",
              "path": "/access/permissions",
              "httpMethod": "GET",
              "name": "permissions",
              "description": "Retrieve effective permissions of given user/token.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "description": "Each user/token is allowed to dump their own permissions (or that of owned tokens). A user can dump the permissions of another user or their tokens if they have 'Sys.Audit' permission on /access.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "path": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Only dump this specific path, not the whole tree.",
                      "optional": true
                    },
                    "userid": {
                      "type": "string",
                      "description": "User ID or full API token ID",
                      "optional": true,
                      "constraints": {
                        "pattern": "(?^:^(?^:[^\\s:/]+)\\@(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)(?:!(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+))?$)"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "description": "Map of \"path\" => (Map of \"privilege\" => \"propagate boolean\").",
                  "schema": {
                    "type": "object",
                    "description": "Map of \"path\" => (Map of \"privilege\" => \"propagate boolean\")."
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "access-roles",
          "path": "/access/roles",
          "slug": "access-roles",
          "label": "roles",
          "endpoints": [
            {
              "id": "get-access-roles",
              "operationId": "get-access-roles",
              "path": "/access/roles",
              "httpMethod": "GET",
              "name": "index",
              "description": "Role index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "privs": {
                          "type": "string",
                          "optional": true,
                          "constraints": {
                            "format": "pve-priv-list"
                          }
                        },
                        "roleid": {
                          "type": "string",
                          "constraints": {
                            "format": "pve-roleid"
                          }
                        },
                        "special": {
                          "type": "boolean",
                          "optional": true,
                          "defaultValue": 0
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{roleid}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-access-roles",
              "operationId": "post-access-roles",
              "path": "/access/roles",
              "httpMethod": "POST",
              "name": "create_role",
              "description": "Create new role.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/access",
                        [
                          "Sys.Modify"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "privs": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true,
                      "constraints": {
                        "format": "pve-priv-list"
                      }
                    },
                    "roleid": {
                      "type": "string",
                      "typetext": "<string>",
                      "constraints": {
                        "format": "pve-roleid"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "access-roles-roleid",
              "path": "/access/roles/{roleid}",
              "slug": "access-roles-roleid",
              "label": "{roleid}",
              "endpoints": [
                {
                  "id": "delete-access-roles-roleid",
                  "operationId": "delete-access-roles-roleid",
                  "path": "/access/roles/{roleid}",
                  "httpMethod": "DELETE",
                  "name": "delete_role",
                  "description": "Delete role.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "roleid": {
                          "type": "string",
                          "typetext": "<string>",
                          "constraints": {
                            "format": "pve-roleid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-access-roles-roleid",
                  "operationId": "get-access-roles-roleid",
                  "path": "/access/roles/{roleid}",
                  "httpMethod": "GET",
                  "name": "read_role",
                  "description": "Get role configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "roleid": {
                          "type": "string",
                          "typetext": "<string>",
                          "constraints": {
                            "format": "pve-roleid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "Datastore.Allocate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Datastore.AllocateSpace": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Datastore.AllocateTemplate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Datastore.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Group.Allocate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Mapping.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Mapping.Modify": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Mapping.Use": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Permissions.Modify": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Pool.Allocate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Pool.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Realm.Allocate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Realm.AllocateUser": {
                            "type": "boolean",
                            "optional": true
                          },
                          "SDN.Allocate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "SDN.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "SDN.Use": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.AccessNetwork": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.Console": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.Incoming": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.Modify": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.PowerMgmt": {
                            "type": "boolean",
                            "optional": true
                          },
                          "Sys.Syslog": {
                            "type": "boolean",
                            "optional": true
                          },
                          "User.Modify": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Allocate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Backup": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Clone": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.CDROM": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.CPU": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.Cloudinit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.Disk": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.HWType": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.Memory": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.Network": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Config.Options": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Console": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.GuestAgent.Audit": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.GuestAgent.FileRead": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.GuestAgent.FileSystemMgmt": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.GuestAgent.FileWrite": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.GuestAgent.Unrestricted": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Migrate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.PowerMgmt": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Replicate": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Snapshot": {
                            "type": "boolean",
                            "optional": true
                          },
                          "VM.Snapshot.Rollback": {
                            "type": "boolean",
                            "optional": true
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "put-access-roles-roleid",
                  "operationId": "put-access-roles-roleid",
                  "path": "/access/roles/{roleid}",
                  "httpMethod": "PUT",
                  "name": "update_role",
                  "description": "Update an existing role.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/access",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "append": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "privs"
                            ]
                          }
                        },
                        "privs": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true,
                          "constraints": {
                            "format": "pve-priv-list"
                          }
                        },
                        "roleid": {
                          "type": "string",
                          "typetext": "<string>",
                          "constraints": {
                            "format": "pve-roleid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "access-tfa",
          "path": "/access/tfa",
          "slug": "access-tfa",
          "label": "tfa",
          "endpoints": [
            {
              "id": "get-access-tfa",
              "operationId": "get-access-tfa",
              "path": "/access/tfa",
              "httpMethod": "GET",
              "name": "list_tfa",
              "description": "List TFA configurations of users.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "Returns all or just the logged-in user, depending on privileges.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "description": "The list tuples of user and TFA entries.",
                  "schema": {
                    "type": "array",
                    "description": "The list tuples of user and TFA entries.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "TFA Entry.",
                            "properties": {
                              "created": {
                                "type": "integer",
                                "description": "Creation time of this entry as unix epoch."
                              },
                              "description": {
                                "type": "string",
                                "description": "User chosen description for this entry."
                              },
                              "enable": {
                                "type": "boolean",
                                "description": "Whether this TFA entry is currently enabled.",
                                "optional": true,
                                "defaultValue": 1
                              },
                              "id": {
                                "type": "string",
                                "description": "The id used to reference this entry."
                              },
                              "type": {
                                "type": "string",
                                "description": "TFA Entry Type.",
                                "enum": [
                                  "totp",
                                  "u2f",
                                  "webauthn",
                                  "recovery",
                                  "yubico"
                                ]
                              }
                            }
                          }
                        },
                        "tfa-locked-until": {
                          "type": "integer",
                          "description": "Contains a timestamp until when a user is locked out of 2nd factors.",
                          "optional": true
                        },
                        "totp-locked": {
                          "type": "boolean",
                          "description": "True if the user is currently locked out of TOTP factors.",
                          "optional": true
                        },
                        "userid": {
                          "type": "string",
                          "description": "User this entry belongs to."
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{userid}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "access-tfa-userid",
              "path": "/access/tfa/{userid}",
              "slug": "access-tfa-userid",
              "label": "{userid}",
              "endpoints": [
                {
                  "id": "get-access-tfa-userid",
                  "operationId": "get-access-tfa-userid",
                  "path": "/access/tfa/{userid}",
                  "httpMethod": "GET",
                  "name": "list_user_tfa",
                  "description": "List TFA configurations of users.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "userid-param",
                              "self"
                            ],
                            [
                              "userid-group",
                              [
                                "User.Modify",
                                "Sys.Audit"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "userid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Full User ID, in the `name@realm` format.",
                          "constraints": {
                            "maxLength": 64,
                            "format": "pve-userid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "A list of the user's TFA entries.",
                      "schema": {
                        "type": "array",
                        "description": "A list of the user's TFA entries.",
                        "items": {
                          "type": "object",
                          "description": "TFA Entry.",
                          "properties": {
                            "created": {
                              "type": "integer",
                              "description": "Creation time of this entry as unix epoch."
                            },
                            "description": {
                              "type": "string",
                              "description": "User chosen description for this entry."
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether this TFA entry is currently enabled.",
                              "optional": true,
                              "defaultValue": 1
                            },
                            "id": {
                              "type": "string",
                              "description": "The id used to reference this entry."
                            },
                            "type": {
                              "type": "string",
                              "description": "TFA Entry Type.",
                              "enum": [
                                "totp",
                                "u2f",
                                "webauthn",
                                "recovery",
                                "yubico"
                              ]
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-access-tfa-userid",
                  "operationId": "post-access-tfa-userid",
                  "path": "/access/tfa/{userid}",
                  "httpMethod": "POST",
                  "name": "add_tfa_entry",
                  "description": "Add a TFA entry for a user.",
                  "security": {
                    "allowToken": false,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "userid-param",
                              "self"
                            ],
                            [
                              "userid-group",
                              [
                                "User.Modify"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "challenge": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "When responding to a u2f challenge: the original challenge string",
                          "optional": true
                        },
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A description to distinguish multiple entries from one another",
                          "optional": true,
                          "constraints": {
                            "maxLength": 255
                          }
                        },
                        "password": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The current password of the user performing the change.",
                          "optional": true,
                          "constraints": {
                            "minLength": 5,
                            "maxLength": 64
                          }
                        },
                        "totp": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A totp URI.",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "TFA Entry Type.",
                          "enum": [
                            "totp",
                            "u2f",
                            "webauthn",
                            "recovery",
                            "yubico"
                          ]
                        },
                        "userid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Full User ID, in the `name@realm` format.",
                          "constraints": {
                            "maxLength": 64,
                            "format": "pve-userid"
                          }
                        },
                        "value": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The current value for the provided totp URI, or a Webauthn/U2F challenge response",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "challenge": {
                            "type": "string",
                            "description": "When adding u2f entries, this contains a challenge the user must respond to in order to finish the registration.",
                            "optional": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The id of a newly added TFA entry."
                          },
                          "recovery": {
                            "type": "array",
                            "description": "When adding recovery codes, this contains the list of codes to be displayed to the user",
                            "optional": true,
                            "items": {
                              "type": "string",
                              "description": "A recovery entry."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "access-tfa-userid-id",
                  "path": "/access/tfa/{userid}/{id}",
                  "slug": "access-tfa-userid-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-access-tfa-userid-id",
                      "operationId": "delete-access-tfa-userid-id",
                      "path": "/access/tfa/{userid}/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete_tfa",
                      "description": "Delete a TFA entry by ID.",
                      "security": {
                        "allowToken": false,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "userid-param",
                                  "self"
                                ],
                                [
                                  "userid-group",
                                  [
                                    "User.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A TFA entry id."
                            },
                            "password": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The current password of the user performing the change.",
                              "optional": true,
                              "constraints": {
                                "minLength": 5,
                                "maxLength": 64
                              }
                            },
                            "userid": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-access-tfa-userid-id",
                      "operationId": "get-access-tfa-userid-id",
                      "path": "/access/tfa/{userid}/{id}",
                      "httpMethod": "GET",
                      "name": "get_tfa_entry",
                      "description": "Fetch a requested TFA entry if present.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "userid-param",
                                  "self"
                                ],
                                [
                                  "userid-group",
                                  [
                                    "User.Modify",
                                    "Sys.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A TFA entry id."
                            },
                            "userid": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "description": "TFA Entry.",
                          "schema": {
                            "type": "object",
                            "description": "TFA Entry.",
                            "properties": {
                              "created": {
                                "type": "integer",
                                "description": "Creation time of this entry as unix epoch."
                              },
                              "description": {
                                "type": "string",
                                "description": "User chosen description for this entry."
                              },
                              "enable": {
                                "type": "boolean",
                                "description": "Whether this TFA entry is currently enabled.",
                                "optional": true,
                                "defaultValue": 1
                              },
                              "id": {
                                "type": "string",
                                "description": "The id used to reference this entry."
                              },
                              "type": {
                                "type": "string",
                                "description": "TFA Entry Type.",
                                "enum": [
                                  "totp",
                                  "u2f",
                                  "webauthn",
                                  "recovery",
                                  "yubico"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-access-tfa-userid-id",
                      "operationId": "put-access-tfa-userid-id",
                      "path": "/access/tfa/{userid}/{id}",
                      "httpMethod": "PUT",
                      "name": "update_tfa_entry",
                      "description": "Add a TFA entry for a user.",
                      "security": {
                        "allowToken": false,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "userid-param",
                                  "self"
                                ],
                                [
                                  "userid-group",
                                  [
                                    "User.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "description": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A description to distinguish multiple entries from one another",
                              "optional": true,
                              "constraints": {
                                "maxLength": 255
                              }
                            },
                            "enable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Whether the entry should be enabled for login.",
                              "optional": true
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A TFA entry id."
                            },
                            "password": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The current password of the user performing the change.",
                              "optional": true,
                              "constraints": {
                                "minLength": 5,
                                "maxLength": 64
                              }
                            },
                            "userid": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "access-ticket",
          "path": "/access/ticket",
          "slug": "access-ticket",
          "label": "ticket",
          "endpoints": [
            {
              "id": "get-access-ticket",
              "operationId": "get-access-ticket",
              "path": "/access/ticket",
              "httpMethod": "GET",
              "name": "get_ticket",
              "description": "Dummy. Useful for formatters which want to provide a login page.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "world"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            },
            {
              "id": "post-access-ticket",
              "operationId": "post-access-ticket",
              "path": "/access/ticket",
              "httpMethod": "POST",
              "name": "create_ticket",
              "description": "Create or verify authentication ticket.",
              "security": {
                "allowToken": false,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "You need to pass valid credientials.",
                      "user": "world"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "new-format": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "This parameter is now ignored and assumed to be 1.",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "otp": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "One-time password for Two-factor authentication.",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The secret password. This can also be a valid ticket."
                    },
                    "path": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Verify ticket, and check if user have access 'privs' on 'path'",
                      "optional": true,
                      "constraints": {
                        "maxLength": 64,
                        "requires": [
                          "privs"
                        ]
                      }
                    },
                    "privs": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Verify ticket, and check if user have access 'privs' on 'path'",
                      "optional": true,
                      "constraints": {
                        "maxLength": 64,
                        "format": "pve-priv-list",
                        "requires": [
                          "path"
                        ]
                      }
                    },
                    "realm": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "You can optionally pass the realm using this parameter. Normally the realm is simply added to the username <username>@<realm>.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 32,
                        "format": "pve-realm"
                      }
                    },
                    "tfa-challenge": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The signed TFA challenge string the user wants to respond to.",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "User name",
                      "constraints": {
                        "maxLength": 64
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "CSRFPreventionToken": {
                        "type": "string",
                        "optional": true
                      },
                      "clustername": {
                        "type": "string",
                        "optional": true
                      },
                      "ticket": {
                        "type": "string",
                        "optional": true
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "access-users",
          "path": "/access/users",
          "slug": "access-users",
          "label": "users",
          "endpoints": [
            {
              "id": "get-access-users",
              "operationId": "get-access-users",
              "path": "/access/users",
              "httpMethod": "GET",
              "name": "index",
              "description": "User index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "The returned list is restricted to users where you have 'User.Modify' or 'Sys.Audit' permissions on '/access/groups' or on a group the user belongs too. But it always includes the current (authenticated) user.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Optional filter for enable property.",
                      "optional": true
                    },
                    "full": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Include group and token information.",
                      "optional": true,
                      "defaultValue": 0
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "optional": true,
                          "constraints": {
                            "maxLength": 2048
                          }
                        },
                        "email": {
                          "type": "string",
                          "optional": true,
                          "constraints": {
                            "maxLength": 254,
                            "format": "email-opt"
                          }
                        },
                        "enable": {
                          "type": "boolean",
                          "description": "Enable the account (default). You can set this to '0' to disable the account",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "expire": {
                          "type": "integer",
                          "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "firstname": {
                          "type": "string",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024
                          }
                        },
                        "groups": {
                          "type": "string",
                          "optional": true,
                          "constraints": {
                            "format": "pve-groupid-list"
                          }
                        },
                        "keys": {
                          "type": "string",
                          "description": "Keys for two factor auth (yubico).",
                          "optional": true,
                          "constraints": {
                            "pattern": "[0-9a-zA-Z!=]{0,4096}"
                          }
                        },
                        "lastname": {
                          "type": "string",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024
                          }
                        },
                        "realm-type": {
                          "type": "string",
                          "description": "The type of the users realm",
                          "optional": true,
                          "constraints": {
                            "format": "pve-realm"
                          }
                        },
                        "tfa-locked-until": {
                          "type": "integer",
                          "description": "Contains a timestamp until when a user is locked out of 2nd factors.",
                          "optional": true
                        },
                        "tokens": {
                          "type": "array",
                          "optional": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "optional": true
                              },
                              "expire": {
                                "type": "integer",
                                "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                "optional": true,
                                "defaultValue": "same as user",
                                "constraints": {
                                  "minimum": 0
                                }
                              },
                              "privsep": {
                                "type": "boolean",
                                "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                "optional": true,
                                "defaultValue": 1
                              },
                              "tokenid": {
                                "type": "string",
                                "description": "User-specific token identifier.",
                                "constraints": {
                                  "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                                }
                              }
                            }
                          }
                        },
                        "totp-locked": {
                          "type": "boolean",
                          "description": "True if the user is currently locked out of TOTP factors.",
                          "optional": true
                        },
                        "userid": {
                          "type": "string",
                          "description": "Full User ID, in the `name@realm` format.",
                          "constraints": {
                            "maxLength": 64,
                            "format": "pve-userid"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{userid}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-access-users",
              "operationId": "post-access-users",
              "path": "/access/users",
              "httpMethod": "POST",
              "name": "create_user",
              "description": "Create new user.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "You need 'Realm.AllocateUser' on '/access/realm/<realm>' on the realm of user <userid>, and 'User.Modify' permissions to '/access/groups/<group>' for any group specified (or 'User.Modify' on '/access/groups' if you pass no groups.",
                      "check": [
                        "and",
                        [
                          "userid-param",
                          "Realm.AllocateUser"
                        ],
                        [
                          "userid-group",
                          [
                            "User.Modify"
                          ],
                          "groups_param",
                          "create"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "comment": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true,
                      "constraints": {
                        "maxLength": 2048
                      }
                    },
                    "email": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true,
                      "constraints": {
                        "maxLength": 254,
                        "format": "email-opt"
                      }
                    },
                    "enable": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Enable the account (default). You can set this to '0' to disable the account",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "expire": {
                      "type": "integer",
                      "typetext": "<integer> (0 - N)",
                      "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                      "optional": true,
                      "constraints": {
                        "minimum": 0
                      }
                    },
                    "firstname": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true,
                      "constraints": {
                        "maxLength": 1024
                      }
                    },
                    "groups": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true,
                      "constraints": {
                        "format": "pve-groupid-list"
                      }
                    },
                    "keys": {
                      "type": "string",
                      "description": "Keys for two factor auth (yubico).",
                      "optional": true,
                      "constraints": {
                        "pattern": "[0-9a-zA-Z!=]{0,4096}"
                      }
                    },
                    "lastname": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true,
                      "constraints": {
                        "maxLength": 1024
                      }
                    },
                    "password": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Initial password.",
                      "optional": true,
                      "constraints": {
                        "minLength": 8,
                        "maxLength": 64
                      }
                    },
                    "userid": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Full User ID, in the `name@realm` format.",
                      "constraints": {
                        "maxLength": 64,
                        "format": "pve-userid"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "access-users-userid",
              "path": "/access/users/{userid}",
              "slug": "access-users-userid",
              "label": "{userid}",
              "endpoints": [
                {
                  "id": "delete-access-users-userid",
                  "operationId": "delete-access-users-userid",
                  "path": "/access/users/{userid}",
                  "httpMethod": "DELETE",
                  "name": "delete_user",
                  "description": "Delete user.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "and",
                            [
                              "userid-param",
                              "Realm.AllocateUser"
                            ],
                            [
                              "userid-group",
                              [
                                "User.Modify"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "userid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Full User ID, in the `name@realm` format.",
                          "constraints": {
                            "maxLength": 64,
                            "format": "pve-userid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-access-users-userid",
                  "operationId": "get-access-users-userid",
                  "path": "/access/users/{userid}",
                  "httpMethod": "GET",
                  "name": "read_user",
                  "description": "Get user configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "userid-group",
                            [
                              "User.Modify",
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "userid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Full User ID, in the `name@realm` format.",
                          "constraints": {
                            "maxLength": 64,
                            "format": "pve-userid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "optional": true,
                            "constraints": {
                              "maxLength": 2048
                            }
                          },
                          "email": {
                            "type": "string",
                            "optional": true,
                            "constraints": {
                              "maxLength": 254,
                              "format": "email-opt"
                            }
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Enable the account (default). You can set this to '0' to disable the account",
                            "optional": true,
                            "defaultValue": 1
                          },
                          "expire": {
                            "type": "integer",
                            "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                            "optional": true,
                            "constraints": {
                              "minimum": 0
                            }
                          },
                          "firstname": {
                            "type": "string",
                            "optional": true,
                            "constraints": {
                              "maxLength": 1024
                            }
                          },
                          "groups": {
                            "type": "array",
                            "optional": true,
                            "items": {
                              "type": "string",
                              "constraints": {
                                "format": "pve-groupid"
                              }
                            }
                          },
                          "keys": {
                            "type": "string",
                            "description": "Keys for two factor auth (yubico).",
                            "optional": true,
                            "constraints": {
                              "pattern": "[0-9a-zA-Z!=]{0,4096}"
                            }
                          },
                          "lastname": {
                            "type": "string",
                            "optional": true,
                            "constraints": {
                              "maxLength": 1024
                            }
                          },
                          "tokens": {
                            "type": "object",
                            "optional": true,
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "optional": true
                                },
                                "expire": {
                                  "type": "integer",
                                  "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                  "optional": true,
                                  "defaultValue": "same as user",
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "privsep": {
                                  "type": "boolean",
                                  "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                  "optional": true,
                                  "defaultValue": 1
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "put-access-users-userid",
                  "operationId": "put-access-users-userid",
                  "path": "/access/users/{userid}",
                  "httpMethod": "PUT",
                  "name": "update_user",
                  "description": "Update user configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "userid-group",
                            [
                              "User.Modify"
                            ],
                            "groups_param",
                            "update"
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "append": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "groups"
                            ]
                          }
                        },
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true,
                          "constraints": {
                            "maxLength": 2048
                          }
                        },
                        "email": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true,
                          "constraints": {
                            "maxLength": 254,
                            "format": "email-opt"
                          }
                        },
                        "enable": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable the account (default). You can set this to '0' to disable the account",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "expire": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "firstname": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024
                          }
                        },
                        "groups": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true,
                          "constraints": {
                            "format": "pve-groupid-list"
                          }
                        },
                        "keys": {
                          "type": "string",
                          "description": "Keys for two factor auth (yubico).",
                          "optional": true,
                          "constraints": {
                            "pattern": "[0-9a-zA-Z!=]{0,4096}"
                          }
                        },
                        "lastname": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024
                          }
                        },
                        "userid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Full User ID, in the `name@realm` format.",
                          "constraints": {
                            "maxLength": 64,
                            "format": "pve-userid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "access-users-userid-tfa",
                  "path": "/access/users/{userid}/tfa",
                  "slug": "access-users-userid-tfa",
                  "label": "tfa",
                  "endpoints": [
                    {
                      "id": "get-access-users-userid-tfa",
                      "operationId": "get-access-users-userid-tfa",
                      "path": "/access/users/{userid}/tfa",
                      "httpMethod": "GET",
                      "name": "read_user_tfa_type",
                      "description": "Get user TFA types (Personal and Realm).",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "userid-param",
                                  "self"
                                ],
                                [
                                  "userid-group",
                                  [
                                    "User.Modify",
                                    "Sys.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "multiple": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Request all entries as an array.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "userid": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "realm": {
                                "type": "string",
                                "description": "The type of TFA the users realm has set, if any.",
                                "optional": true,
                                "enum": [
                                  "oath",
                                  "yubico"
                                ]
                              },
                              "types": {
                                "type": "array",
                                "description": "Array of the user configured TFA types, if any. Only available if 'multiple' was not passed.",
                                "optional": true,
                                "items": {
                                  "type": "string",
                                  "description": "A TFA type.",
                                  "enum": [
                                    "totp",
                                    "u2f",
                                    "yubico",
                                    "webauthn",
                                    "recovedry"
                                  ]
                                }
                              },
                              "user": {
                                "type": "string",
                                "description": "The type of TFA the user has set, if any. Only set if 'multiple' was not passed.",
                                "optional": true,
                                "enum": [
                                  "oath",
                                  "u2f"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "access-users-userid-token",
                  "path": "/access/users/{userid}/token",
                  "slug": "access-users-userid-token",
                  "label": "token",
                  "endpoints": [
                    {
                      "id": "get-access-users-userid-token",
                      "operationId": "get-access-users-userid-token",
                      "path": "/access/users/{userid}/token",
                      "httpMethod": "GET",
                      "name": "token_index",
                      "description": "Get user API tokens.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "userid-param",
                                  "self"
                                ],
                                [
                                  "userid-group",
                                  [
                                    "User.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "userid": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "optional": true
                                },
                                "expire": {
                                  "type": "integer",
                                  "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                  "optional": true,
                                  "defaultValue": "same as user",
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "privsep": {
                                  "type": "boolean",
                                  "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "tokenid": {
                                  "type": "string",
                                  "description": "User-specific token identifier.",
                                  "constraints": {
                                    "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                                  }
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{tokenid}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "access-users-userid-token-tokenid",
                      "path": "/access/users/{userid}/token/{tokenid}",
                      "slug": "access-users-userid-token-tokenid",
                      "label": "{tokenid}",
                      "endpoints": [
                        {
                          "id": "delete-access-users-userid-token-tokenid",
                          "operationId": "delete-access-users-userid-token-tokenid",
                          "path": "/access/users/{userid}/token/{tokenid}",
                          "httpMethod": "DELETE",
                          "name": "remove_token",
                          "description": "Remove API token for a specific user.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "userid-param",
                                      "self"
                                    ],
                                    [
                                      "userid-group",
                                      [
                                        "User.Modify"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "tokenid": {
                                  "type": "string",
                                  "description": "User-specific token identifier.",
                                  "constraints": {
                                    "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                                  }
                                },
                                "userid": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Full User ID, in the `name@realm` format.",
                                  "constraints": {
                                    "maxLength": 64,
                                    "format": "pve-userid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-access-users-userid-token-tokenid",
                          "operationId": "get-access-users-userid-token-tokenid",
                          "path": "/access/users/{userid}/token/{tokenid}",
                          "httpMethod": "GET",
                          "name": "read_token",
                          "description": "Get specific API token information.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "userid-param",
                                      "self"
                                    ],
                                    [
                                      "userid-group",
                                      [
                                        "User.Modify"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "tokenid": {
                                  "type": "string",
                                  "description": "User-specific token identifier.",
                                  "constraints": {
                                    "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                                  }
                                },
                                "userid": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Full User ID, in the `name@realm` format.",
                                  "constraints": {
                                    "maxLength": 64,
                                    "format": "pve-userid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "comment": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "expire": {
                                    "type": "integer",
                                    "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                    "optional": true,
                                    "defaultValue": "same as user",
                                    "constraints": {
                                      "minimum": 0
                                    }
                                  },
                                  "privsep": {
                                    "type": "boolean",
                                    "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                    "optional": true,
                                    "defaultValue": 1
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-access-users-userid-token-tokenid",
                          "operationId": "post-access-users-userid-token-tokenid",
                          "path": "/access/users/{userid}/token/{tokenid}",
                          "httpMethod": "POST",
                          "name": "generate_token",
                          "description": "Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "userid-param",
                                      "self"
                                    ],
                                    [
                                      "userid-group",
                                      [
                                        "User.Modify"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "optional": true
                                },
                                "expire": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                  "optional": true,
                                  "defaultValue": "same as user",
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "privsep": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "tokenid": {
                                  "type": "string",
                                  "description": "User-specific token identifier.",
                                  "constraints": {
                                    "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                                  }
                                },
                                "userid": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Full User ID, in the `name@realm` format.",
                                  "constraints": {
                                    "maxLength": 64,
                                    "format": "pve-userid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "full-tokenid": {
                                    "type": "string",
                                    "description": "The full token id.",
                                    "constraints": {
                                      "formatDescription": "<userid>!<tokenid>"
                                    }
                                  },
                                  "info": {
                                    "type": "object",
                                    "properties": {
                                      "comment": {
                                        "type": "string",
                                        "optional": true
                                      },
                                      "expire": {
                                        "type": "integer",
                                        "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                        "optional": true,
                                        "defaultValue": "same as user",
                                        "constraints": {
                                          "minimum": 0
                                        }
                                      },
                                      "privsep": {
                                        "type": "boolean",
                                        "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                        "optional": true,
                                        "defaultValue": 1
                                      }
                                    }
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "API token value used for authentication."
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-access-users-userid-token-tokenid",
                          "operationId": "put-access-users-userid-token-tokenid",
                          "path": "/access/users/{userid}/token/{tokenid}",
                          "httpMethod": "PUT",
                          "name": "update_token_info",
                          "description": "Update API token for a specific user.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "userid-param",
                                      "self"
                                    ],
                                    [
                                      "userid-group",
                                      [
                                        "User.Modify"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "optional": true
                                },
                                "expire": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                  "optional": true,
                                  "defaultValue": "same as user",
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "privsep": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "tokenid": {
                                  "type": "string",
                                  "description": "User-specific token identifier.",
                                  "constraints": {
                                    "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                                  }
                                },
                                "userid": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Full User ID, in the `name@realm` format.",
                                  "constraints": {
                                    "maxLength": 64,
                                    "format": "pve-userid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Updated token information.",
                              "schema": {
                                "type": "object",
                                "description": "Updated token information.",
                                "properties": {
                                  "comment": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "expire": {
                                    "type": "integer",
                                    "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                                    "optional": true,
                                    "defaultValue": "same as user",
                                    "constraints": {
                                      "minimum": 0
                                    }
                                  },
                                  "privsep": {
                                    "type": "boolean",
                                    "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                                    "optional": true,
                                    "defaultValue": 1
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "access-users-userid-unlock-tfa",
                  "path": "/access/users/{userid}/unlock-tfa",
                  "slug": "access-users-userid-unlock-tfa",
                  "label": "unlock-tfa",
                  "endpoints": [
                    {
                      "id": "put-access-users-userid-unlock-tfa",
                      "operationId": "put-access-users-userid-unlock-tfa",
                      "path": "/access/users/{userid}/unlock-tfa",
                      "httpMethod": "PUT",
                      "name": "unlock_tfa",
                      "description": "Unlock a user's TFA authentication.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "userid-group",
                                [
                                  "User.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "userid": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Full User ID, in the `name@realm` format.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-userid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "boolean"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "cluster",
      "path": "/cluster",
      "slug": "cluster",
      "label": "cluster",
      "endpoints": [
        {
          "id": "get-cluster",
          "operationId": "get-cluster",
          "path": "/cluster",
          "httpMethod": "GET",
          "name": "index",
          "description": "Cluster index.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": false,
            "permissions": {
              "all": [
                {
                  "user": "all"
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "metadata": {
                  "links": [
                    {
                      "href": "{name}",
                      "rel": "child"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "children": [
        {
          "id": "cluster-acme",
          "path": "/cluster/acme",
          "slug": "cluster-acme",
          "label": "acme",
          "endpoints": [
            {
              "id": "get-cluster-acme",
              "operationId": "get-cluster-acme",
              "path": "/cluster/acme",
              "httpMethod": "GET",
              "name": "index",
              "description": "ACMEAccount index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-acme-account",
              "path": "/cluster/acme/account",
              "slug": "cluster-acme-account",
              "label": "account",
              "endpoints": [
                {
                  "id": "get-cluster-acme-account",
                  "operationId": "get-cluster-acme-account",
                  "path": "/cluster/acme/account",
                  "httpMethod": "GET",
                  "name": "account_index",
                  "description": "ACMEAccount index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-acme-account",
                  "operationId": "post-cluster-acme-account",
                  "path": "/cluster/acme/account",
                  "httpMethod": "POST",
                  "name": "register_account",
                  "description": "Register a new ACME account with CA.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "contact": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Contact email addresses.",
                          "constraints": {
                            "format": "email-list"
                          }
                        },
                        "directory": {
                          "type": "string",
                          "description": "URL of ACME CA directory endpoint.",
                          "optional": true,
                          "defaultValue": "https://acme-v02.api.letsencrypt.org/directory",
                          "constraints": {
                            "pattern": "^https?://.*"
                          }
                        },
                        "eab-hmac-key": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "HMAC key for External Account Binding.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "eab-kid"
                            ]
                          }
                        },
                        "eab-kid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Key Identifier for External Account Binding.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "eab-hmac-key"
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "typetext": "<name>",
                          "description": "ACME account config file name.",
                          "optional": true,
                          "defaultValue": "default",
                          "constraints": {
                            "format": "pve-configid",
                            "formatDescription": "name"
                          }
                        },
                        "tos_url": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "URL of CA TermsOfService - setting this indicates agreement.",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-acme-account-name",
                  "path": "/cluster/acme/account/{name}",
                  "slug": "cluster-acme-account-name",
                  "label": "{name}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-acme-account-name",
                      "operationId": "delete-cluster-acme-account-name",
                      "path": "/cluster/acme/account/{name}",
                      "httpMethod": "DELETE",
                      "name": "deactivate_account",
                      "description": "Deactivate existing ACME account at CA.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "typetext": "<name>",
                              "description": "ACME account config file name.",
                              "optional": true,
                              "defaultValue": "default",
                              "constraints": {
                                "format": "pve-configid",
                                "formatDescription": "name"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-acme-account-name",
                      "operationId": "get-cluster-acme-account-name",
                      "path": "/cluster/acme/account/{name}",
                      "httpMethod": "GET",
                      "name": "get_account",
                      "description": "Return existing ACME account information.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "typetext": "<name>",
                              "description": "ACME account config file name.",
                              "optional": true,
                              "defaultValue": "default",
                              "constraints": {
                                "format": "pve-configid",
                                "formatDescription": "name"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "account": {
                                "type": "object",
                                "optional": true,
                                "metadata": {
                                  "renderer": "yaml"
                                }
                              },
                              "directory": {
                                "type": "string",
                                "description": "URL of ACME CA directory endpoint.",
                                "optional": true,
                                "constraints": {
                                  "pattern": "^https?://.*"
                                }
                              },
                              "location": {
                                "type": "string",
                                "optional": true
                              },
                              "tos": {
                                "type": "string",
                                "optional": true
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-acme-account-name",
                      "operationId": "put-cluster-acme-account-name",
                      "path": "/cluster/acme/account/{name}",
                      "httpMethod": "PUT",
                      "name": "update_account",
                      "description": "Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "contact": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Contact email addresses.",
                              "optional": true,
                              "constraints": {
                                "format": "email-list"
                              }
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<name>",
                              "description": "ACME account config file name.",
                              "optional": true,
                              "defaultValue": "default",
                              "constraints": {
                                "format": "pve-configid",
                                "formatDescription": "name"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-acme-challenge-schema",
              "path": "/cluster/acme/challenge-schema",
              "slug": "cluster-acme-challenge-schema",
              "label": "challenge-schema",
              "endpoints": [
                {
                  "id": "get-cluster-acme-challenge-schema",
                  "operationId": "get-cluster-acme-challenge-schema",
                  "path": "/cluster/acme/challenge-schema",
                  "httpMethod": "GET",
                  "name": "challengeschema",
                  "description": "Get schema of ACME challenge types.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Human readable name, falls back to id"
                            },
                            "schema": {
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-acme-directories",
              "path": "/cluster/acme/directories",
              "slug": "cluster-acme-directories",
              "label": "directories",
              "endpoints": [
                {
                  "id": "get-cluster-acme-directories",
                  "operationId": "get-cluster-acme-directories",
                  "path": "/cluster/acme/directories",
                  "httpMethod": "GET",
                  "name": "get_directories",
                  "description": "Get named known ACME directory endpoints.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string",
                              "description": "URL of ACME CA directory endpoint.",
                              "constraints": {
                                "pattern": "^https?://.*"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-acme-meta",
              "path": "/cluster/acme/meta",
              "slug": "cluster-acme-meta",
              "label": "meta",
              "endpoints": [
                {
                  "id": "get-cluster-acme-meta",
                  "operationId": "get-cluster-acme-meta",
                  "path": "/cluster/acme/meta",
                  "httpMethod": "GET",
                  "name": "get_meta",
                  "description": "Retrieve ACME Directory Meta Information",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "directory": {
                          "type": "string",
                          "description": "URL of ACME CA directory endpoint.",
                          "optional": true,
                          "defaultValue": "https://acme-v02.api.letsencrypt.org/directory",
                          "constraints": {
                            "pattern": "^https?://.*"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "caaIdentities": {
                            "type": "array",
                            "description": "Hostnames referring to the ACME servers.",
                            "optional": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "externalAccountRequired": {
                            "type": "boolean",
                            "description": "EAB Required",
                            "optional": true
                          },
                          "termsOfService": {
                            "type": "string",
                            "description": "ACME TermsOfService URL.",
                            "optional": true
                          },
                          "website": {
                            "type": "string",
                            "description": "URL to more information about the ACME server.",
                            "optional": true
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-acme-plugins",
              "path": "/cluster/acme/plugins",
              "slug": "cluster-acme-plugins",
              "label": "plugins",
              "endpoints": [
                {
                  "id": "get-cluster-acme-plugins",
                  "operationId": "get-cluster-acme-plugins",
                  "path": "/cluster/acme/plugins",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "ACME plugin index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Only list ACME plugins of a specific type",
                          "optional": true,
                          "enum": [
                            "dns",
                            "standalone"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "plugin": {
                              "type": "string",
                              "description": "Unique identifier for ACME plugin instance.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{plugin}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-acme-plugins",
                  "operationId": "post-cluster-acme-plugins",
                  "path": "/cluster/acme/plugins",
                  "httpMethod": "POST",
                  "name": "add_plugin",
                  "description": "Add ACME plugin configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "api": {
                          "type": "string",
                          "description": "API plugin name",
                          "optional": true,
                          "enum": [
                            "1984hosting",
                            "acmedns",
                            "acmeproxy",
                            "active24",
                            "ad",
                            "ali",
                            "alviy",
                            "anx",
                            "artfiles",
                            "arvan",
                            "aurora",
                            "autodns",
                            "aws",
                            "azion",
                            "azure",
                            "beget",
                            "bookmyname",
                            "bunny",
                            "cf",
                            "clouddns",
                            "cloudns",
                            "cn",
                            "conoha",
                            "constellix",
                            "cpanel",
                            "curanet",
                            "cyon",
                            "da",
                            "ddnss",
                            "desec",
                            "df",
                            "dgon",
                            "dnsexit",
                            "dnshome",
                            "dnsimple",
                            "dnsservices",
                            "doapi",
                            "domeneshop",
                            "dp",
                            "dpi",
                            "dreamhost",
                            "duckdns",
                            "durabledns",
                            "dyn",
                            "dynu",
                            "dynv6",
                            "easydns",
                            "edgecenter",
                            "edgedns",
                            "euserv",
                            "exoscale",
                            "fornex",
                            "freedns",
                            "freemyip",
                            "gandi_livedns",
                            "gcloud",
                            "gcore",
                            "gd",
                            "geoscaling",
                            "googledomains",
                            "he",
                            "he_ddns",
                            "hetzner",
                            "hexonet",
                            "hostingde",
                            "huaweicloud",
                            "infoblox",
                            "infomaniak",
                            "internetbs",
                            "inwx",
                            "ionos",
                            "ionos_cloud",
                            "ipv64",
                            "ispconfig",
                            "jd",
                            "joker",
                            "kappernet",
                            "kas",
                            "kinghost",
                            "knot",
                            "la",
                            "leaseweb",
                            "lexicon",
                            "limacity",
                            "linode",
                            "linode_v4",
                            "loopia",
                            "lua",
                            "maradns",
                            "me",
                            "miab",
                            "mijnhost",
                            "misaka",
                            "myapi",
                            "mydevil",
                            "mydnsjp",
                            "mythic_beasts",
                            "namecheap",
                            "namecom",
                            "namesilo",
                            "nanelo",
                            "nederhost",
                            "neodigit",
                            "netcup",
                            "netlify",
                            "nic",
                            "njalla",
                            "nm",
                            "nsd",
                            "nsone",
                            "nsupdate",
                            "nw",
                            "oci",
                            "omglol",
                            "one",
                            "online",
                            "openprovider",
                            "openstack",
                            "opnsense",
                            "ovh",
                            "pdns",
                            "pleskxml",
                            "pointhq",
                            "porkbun",
                            "rackcorp",
                            "rackspace",
                            "rage4",
                            "rcode0",
                            "regru",
                            "scaleway",
                            "schlundtech",
                            "selectel",
                            "selfhost",
                            "servercow",
                            "simply",
                            "technitium",
                            "tele3",
                            "tencent",
                            "timeweb",
                            "transip",
                            "udr",
                            "ultra",
                            "unoeuro",
                            "variomedia",
                            "veesp",
                            "vercel",
                            "vscale",
                            "vultr",
                            "websupport",
                            "west_cn",
                            "world4you",
                            "yandex360",
                            "yc",
                            "zilore",
                            "zone",
                            "zoneedit",
                            "zonomi"
                          ]
                        },
                        "data": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "DNS plugin data. (base64 encoded)",
                          "optional": true
                        },
                        "disable": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Flag to disable the config.",
                          "optional": true
                        },
                        "id": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "ACME Plugin ID name",
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "nodes": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "List of cluster node names.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node-list"
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "ACME challenge type.",
                          "enum": [
                            "dns",
                            "standalone"
                          ]
                        },
                        "validation-delay": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 172800)",
                          "description": "Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records.",
                          "optional": true,
                          "defaultValue": 30,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 172800
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-acme-plugins-id",
                  "path": "/cluster/acme/plugins/{id}",
                  "slug": "cluster-acme-plugins-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-acme-plugins-id",
                      "operationId": "delete-cluster-acme-plugins-id",
                      "path": "/cluster/acme/plugins/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete_plugin",
                      "description": "Delete ACME plugin configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Unique identifier for ACME plugin instance.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-acme-plugins-id",
                      "operationId": "get-cluster-acme-plugins-id",
                      "path": "/cluster/acme/plugins/{id}",
                      "httpMethod": "GET",
                      "name": "get_plugin_config",
                      "description": "Get ACME plugin configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Unique identifier for ACME plugin instance.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-acme-plugins-id",
                      "operationId": "put-cluster-acme-plugins-id",
                      "path": "/cluster/acme/plugins/{id}",
                      "httpMethod": "PUT",
                      "name": "update_plugin",
                      "description": "Update ACME plugin configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "api": {
                              "type": "string",
                              "description": "API plugin name",
                              "optional": true,
                              "enum": [
                                "1984hosting",
                                "acmedns",
                                "acmeproxy",
                                "active24",
                                "ad",
                                "ali",
                                "alviy",
                                "anx",
                                "artfiles",
                                "arvan",
                                "aurora",
                                "autodns",
                                "aws",
                                "azion",
                                "azure",
                                "beget",
                                "bookmyname",
                                "bunny",
                                "cf",
                                "clouddns",
                                "cloudns",
                                "cn",
                                "conoha",
                                "constellix",
                                "cpanel",
                                "curanet",
                                "cyon",
                                "da",
                                "ddnss",
                                "desec",
                                "df",
                                "dgon",
                                "dnsexit",
                                "dnshome",
                                "dnsimple",
                                "dnsservices",
                                "doapi",
                                "domeneshop",
                                "dp",
                                "dpi",
                                "dreamhost",
                                "duckdns",
                                "durabledns",
                                "dyn",
                                "dynu",
                                "dynv6",
                                "easydns",
                                "edgecenter",
                                "edgedns",
                                "euserv",
                                "exoscale",
                                "fornex",
                                "freedns",
                                "freemyip",
                                "gandi_livedns",
                                "gcloud",
                                "gcore",
                                "gd",
                                "geoscaling",
                                "googledomains",
                                "he",
                                "he_ddns",
                                "hetzner",
                                "hexonet",
                                "hostingde",
                                "huaweicloud",
                                "infoblox",
                                "infomaniak",
                                "internetbs",
                                "inwx",
                                "ionos",
                                "ionos_cloud",
                                "ipv64",
                                "ispconfig",
                                "jd",
                                "joker",
                                "kappernet",
                                "kas",
                                "kinghost",
                                "knot",
                                "la",
                                "leaseweb",
                                "lexicon",
                                "limacity",
                                "linode",
                                "linode_v4",
                                "loopia",
                                "lua",
                                "maradns",
                                "me",
                                "miab",
                                "mijnhost",
                                "misaka",
                                "myapi",
                                "mydevil",
                                "mydnsjp",
                                "mythic_beasts",
                                "namecheap",
                                "namecom",
                                "namesilo",
                                "nanelo",
                                "nederhost",
                                "neodigit",
                                "netcup",
                                "netlify",
                                "nic",
                                "njalla",
                                "nm",
                                "nsd",
                                "nsone",
                                "nsupdate",
                                "nw",
                                "oci",
                                "omglol",
                                "one",
                                "online",
                                "openprovider",
                                "openstack",
                                "opnsense",
                                "ovh",
                                "pdns",
                                "pleskxml",
                                "pointhq",
                                "porkbun",
                                "rackcorp",
                                "rackspace",
                                "rage4",
                                "rcode0",
                                "regru",
                                "scaleway",
                                "schlundtech",
                                "selectel",
                                "selfhost",
                                "servercow",
                                "simply",
                                "technitium",
                                "tele3",
                                "tencent",
                                "timeweb",
                                "transip",
                                "udr",
                                "ultra",
                                "unoeuro",
                                "variomedia",
                                "veesp",
                                "vercel",
                                "vscale",
                                "vultr",
                                "websupport",
                                "west_cn",
                                "world4you",
                                "yandex360",
                                "yc",
                                "zilore",
                                "zone",
                                "zoneedit",
                                "zonomi"
                              ]
                            },
                            "data": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "DNS plugin data. (base64 encoded)",
                              "optional": true
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Flag to disable the config.",
                              "optional": true
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "ACME Plugin ID name",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "nodes": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "List of cluster node names.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-node-list"
                              }
                            },
                            "validation-delay": {
                              "type": "integer",
                              "typetext": "<integer> (0 - 172800)",
                              "description": "Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records.",
                              "optional": true,
                              "defaultValue": 30,
                              "constraints": {
                                "minimum": 0,
                                "maximum": 172800
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-acme-tos",
              "path": "/cluster/acme/tos",
              "slug": "cluster-acme-tos",
              "label": "tos",
              "endpoints": [
                {
                  "id": "get-cluster-acme-tos",
                  "operationId": "get-cluster-acme-tos",
                  "path": "/cluster/acme/tos",
                  "httpMethod": "GET",
                  "name": "get_tos",
                  "description": "Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "directory": {
                          "type": "string",
                          "description": "URL of ACME CA directory endpoint.",
                          "optional": true,
                          "defaultValue": "https://acme-v02.api.letsencrypt.org/directory",
                          "constraints": {
                            "pattern": "^https?://.*"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "ACME TermsOfService URL.",
                      "schema": {
                        "type": "string",
                        "description": "ACME TermsOfService URL.",
                        "optional": true
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "cluster-backup",
          "path": "/cluster/backup",
          "slug": "cluster-backup",
          "label": "backup",
          "endpoints": [
            {
              "id": "get-cluster-backup",
              "operationId": "get-cluster-backup",
              "path": "/cluster/backup",
              "httpMethod": "GET",
              "name": "index",
              "description": "List vzdump backup schedule.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The job ID.",
                          "constraints": {
                            "maxLength": 50,
                            "pattern": "\\S+"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{id}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-cluster-backup",
              "operationId": "post-cluster-backup",
              "path": "/cluster/backup",
              "httpMethod": "POST",
              "name": "create_job",
              "description": "Create new vzdump backup job.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "The 'tmpdir', 'dumpdir' and 'script' parameters are additionally restricted to the 'root@pam' user.",
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Modify"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "all": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Backup all known guest systems on this host.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "bwlimit": {
                      "type": "integer",
                      "typetext": "<integer> (0 - N)",
                      "description": "Limit I/O bandwidth (in KiB/s).",
                      "optional": true,
                      "defaultValue": 0,
                      "constraints": {
                        "minimum": 0
                      }
                    },
                    "comment": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Description for the Job.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 512
                      }
                    },
                    "compress": {
                      "type": "string",
                      "description": "Compress dump file.",
                      "optional": true,
                      "defaultValue": "0",
                      "enum": [
                        "0",
                        "1",
                        "gzip",
                        "lzo",
                        "zstd"
                      ]
                    },
                    "dow": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Day of week selection.",
                      "optional": true,
                      "defaultValue": "mon,tue,wed,thu,fri,sat,sun",
                      "constraints": {
                        "format": "pve-day-of-week-list",
                        "requires": [
                          "starttime"
                        ]
                      }
                    },
                    "dumpdir": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Store resulting files to specified directory.",
                      "optional": true
                    },
                    "enabled": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Enable or disable the job.",
                      "optional": true,
                      "defaultValue": "1"
                    },
                    "exclude": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Exclude specified guest systems (assumes --all)",
                      "optional": true,
                      "constraints": {
                        "format": "pve-vmid-list"
                      }
                    },
                    "exclude-path": {
                      "type": "array",
                      "typetext": "<array>",
                      "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                      "optional": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "fleecing": {
                      "type": "string",
                      "typetext": "[[enabled=]<1|0>] [,storage=<storage ID>]",
                      "description": "Options for backup fleecing (VM only).",
                      "optional": true,
                      "constraints": {
                        "format": "backup-fleecing"
                      }
                    },
                    "id": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Job ID (will be autogenerated).",
                      "optional": true,
                      "constraints": {
                        "format": "pve-configid"
                      }
                    },
                    "ionice": {
                      "type": "integer",
                      "typetext": "<integer> (0 - 8)",
                      "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                      "optional": true,
                      "defaultValue": 7,
                      "constraints": {
                        "minimum": 0,
                        "maximum": 8
                      }
                    },
                    "lockwait": {
                      "type": "integer",
                      "typetext": "<integer> (0 - N)",
                      "description": "Maximal time to wait for the global lock (minutes).",
                      "optional": true,
                      "defaultValue": 180,
                      "constraints": {
                        "minimum": 0
                      }
                    },
                    "mailnotification": {
                      "type": "string",
                      "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                      "optional": true,
                      "defaultValue": "always",
                      "enum": [
                        "always",
                        "failure"
                      ]
                    },
                    "mailto": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                      "optional": true,
                      "constraints": {
                        "format": "email-or-username-list"
                      }
                    },
                    "maxfiles": {
                      "type": "integer",
                      "typetext": "<integer> (1 - N)",
                      "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1
                      }
                    },
                    "mode": {
                      "type": "string",
                      "description": "Backup mode.",
                      "optional": true,
                      "defaultValue": "snapshot",
                      "enum": [
                        "snapshot",
                        "suspend",
                        "stop"
                      ]
                    },
                    "node": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Only run if executed on this node.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-node"
                      }
                    },
                    "notes-template": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 1024,
                        "requires": [
                          "storage"
                        ]
                      }
                    },
                    "notification-mode": {
                      "type": "string",
                      "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                      "optional": true,
                      "defaultValue": "auto",
                      "enum": [
                        "auto",
                        "legacy-sendmail",
                        "notification-system"
                      ]
                    },
                    "pbs-change-detection-mode": {
                      "type": "string",
                      "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                      "optional": true,
                      "enum": [
                        "legacy",
                        "data",
                        "metadata"
                      ]
                    },
                    "performance": {
                      "type": "string",
                      "typetext": "[max-workers=<integer>] [,pbs-entries-max=<integer>]",
                      "description": "Other performance-related settings.",
                      "optional": true,
                      "constraints": {
                        "format": "backup-performance"
                      }
                    },
                    "pigz": {
                      "type": "integer",
                      "typetext": "<integer>",
                      "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "pool": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Backup all known guest systems included in the specified pool.",
                      "optional": true
                    },
                    "protected": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "If true, mark backup(s) as protected.",
                      "optional": true,
                      "constraints": {
                        "requires": [
                          "storage"
                        ]
                      }
                    },
                    "prune-backups": {
                      "type": "string",
                      "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                      "description": "Use these retention options instead of those from the storage configuration.",
                      "optional": true,
                      "defaultValue": "keep-all=1",
                      "constraints": {
                        "format": "prune-backups"
                      }
                    },
                    "quiet": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Be quiet.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "remove": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Prune older backups according to 'prune-backups'.",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "repeat-missed": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "If true, the job will be run as soon as possible if it was missed while the scheduler was not running.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "schedule": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 128,
                        "format": "pve-calendar-event"
                      }
                    },
                    "script": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Use specified hook script.",
                      "optional": true
                    },
                    "starttime": {
                      "type": "string",
                      "typetext": "HH:MM",
                      "description": "Job Start time.",
                      "optional": true,
                      "constraints": {
                        "pattern": "\\d{1,2}:\\d{1,2}"
                      }
                    },
                    "stdexcludes": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Exclude temporary files and logs.",
                      "optional": true,
                      "defaultValue": 1
                    },
                    "stop": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Stop running backup jobs on this host.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "stopwait": {
                      "type": "integer",
                      "typetext": "<integer> (0 - N)",
                      "description": "Maximal time to wait until a guest system is stopped (minutes).",
                      "optional": true,
                      "defaultValue": 10,
                      "constraints": {
                        "minimum": 0
                      }
                    },
                    "storage": {
                      "type": "string",
                      "typetext": "<storage ID>",
                      "description": "Store resulting file to this storage.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-id",
                        "formatDescription": "storage ID"
                      }
                    },
                    "tmpdir": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Store temporary files to specified directory.",
                      "optional": true
                    },
                    "vmid": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The ID of the guest system you want to backup.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-vmid-list"
                      }
                    },
                    "zstd": {
                      "type": "integer",
                      "typetext": "<integer>",
                      "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                      "optional": true,
                      "defaultValue": 1
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-backup-id",
              "path": "/cluster/backup/{id}",
              "slug": "cluster-backup-id",
              "label": "{id}",
              "endpoints": [
                {
                  "id": "delete-cluster-backup-id",
                  "operationId": "delete-cluster-backup-id",
                  "path": "/cluster/backup/{id}",
                  "httpMethod": "DELETE",
                  "name": "delete_job",
                  "description": "Delete vzdump backup job definition.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The job ID.",
                          "constraints": {
                            "maxLength": 50,
                            "pattern": "\\S+"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-cluster-backup-id",
                  "operationId": "get-cluster-backup-id",
                  "path": "/cluster/backup/{id}",
                  "httpMethod": "GET",
                  "name": "read_job",
                  "description": "Read vzdump backup job definition.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The job ID.",
                          "constraints": {
                            "maxLength": 50,
                            "pattern": "\\S+"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object"
                      }
                    }
                  ]
                },
                {
                  "id": "put-cluster-backup-id",
                  "operationId": "put-cluster-backup-id",
                  "path": "/cluster/backup/{id}",
                  "httpMethod": "PUT",
                  "name": "update_job",
                  "description": "Update vzdump backup job definition.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "The 'tmpdir', 'dumpdir' and 'script' parameters are additionally restricted to the 'root@pam' user.",
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Backup all known guest systems on this host.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "bwlimit": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Limit I/O bandwidth (in KiB/s).",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description for the Job.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 512
                          }
                        },
                        "compress": {
                          "type": "string",
                          "description": "Compress dump file.",
                          "optional": true,
                          "defaultValue": "0",
                          "enum": [
                            "0",
                            "1",
                            "gzip",
                            "lzo",
                            "zstd"
                          ]
                        },
                        "delete": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A list of settings you want to delete.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-configid-list"
                          }
                        },
                        "dow": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Day of week selection.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-day-of-week-list",
                            "requires": [
                              "starttime"
                            ]
                          }
                        },
                        "dumpdir": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Store resulting files to specified directory.",
                          "optional": true
                        },
                        "enabled": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable or disable the job.",
                          "optional": true,
                          "defaultValue": "1"
                        },
                        "exclude": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Exclude specified guest systems (assumes --all)",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        },
                        "exclude-path": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                          "optional": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "fleecing": {
                          "type": "string",
                          "typetext": "[[enabled=]<1|0>] [,storage=<storage ID>]",
                          "description": "Options for backup fleecing (VM only).",
                          "optional": true,
                          "constraints": {
                            "format": "backup-fleecing"
                          }
                        },
                        "id": {
                          "type": "string",
                          "description": "The job ID.",
                          "constraints": {
                            "maxLength": 50,
                            "pattern": "\\S+"
                          }
                        },
                        "ionice": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 8)",
                          "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                          "optional": true,
                          "defaultValue": 7,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 8
                          }
                        },
                        "lockwait": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Maximal time to wait for the global lock (minutes).",
                          "optional": true,
                          "defaultValue": 180,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "mailnotification": {
                          "type": "string",
                          "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                          "optional": true,
                          "defaultValue": "always",
                          "enum": [
                            "always",
                            "failure"
                          ]
                        },
                        "mailto": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                          "optional": true,
                          "constraints": {
                            "format": "email-or-username-list"
                          }
                        },
                        "maxfiles": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "mode": {
                          "type": "string",
                          "description": "Backup mode.",
                          "optional": true,
                          "defaultValue": "snapshot",
                          "enum": [
                            "snapshot",
                            "suspend",
                            "stop"
                          ]
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only run if executed on this node.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "notes-template": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024,
                            "requires": [
                              "storage"
                            ]
                          }
                        },
                        "notification-mode": {
                          "type": "string",
                          "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                          "optional": true,
                          "defaultValue": "auto",
                          "enum": [
                            "auto",
                            "legacy-sendmail",
                            "notification-system"
                          ]
                        },
                        "pbs-change-detection-mode": {
                          "type": "string",
                          "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                          "optional": true,
                          "enum": [
                            "legacy",
                            "data",
                            "metadata"
                          ]
                        },
                        "performance": {
                          "type": "string",
                          "typetext": "[max-workers=<integer>] [,pbs-entries-max=<integer>]",
                          "description": "Other performance-related settings.",
                          "optional": true,
                          "constraints": {
                            "format": "backup-performance"
                          }
                        },
                        "pigz": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "pool": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Backup all known guest systems included in the specified pool.",
                          "optional": true
                        },
                        "protected": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "If true, mark backup(s) as protected.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "storage"
                            ]
                          }
                        },
                        "prune-backups": {
                          "type": "string",
                          "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                          "description": "Use these retention options instead of those from the storage configuration.",
                          "optional": true,
                          "defaultValue": "keep-all=1",
                          "constraints": {
                            "format": "prune-backups"
                          }
                        },
                        "quiet": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Be quiet.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "remove": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Prune older backups according to 'prune-backups'.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "repeat-missed": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "If true, the job will be run as soon as possible if it was missed while the scheduler was not running.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "schedule": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 128,
                            "format": "pve-calendar-event"
                          }
                        },
                        "script": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Use specified hook script.",
                          "optional": true
                        },
                        "starttime": {
                          "type": "string",
                          "typetext": "HH:MM",
                          "description": "Job Start time.",
                          "optional": true,
                          "constraints": {
                            "pattern": "\\d{1,2}:\\d{1,2}"
                          }
                        },
                        "stdexcludes": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Exclude temporary files and logs.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "stop": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Stop running backup jobs on this host.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "stopwait": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Maximal time to wait until a guest system is stopped (minutes).",
                          "optional": true,
                          "defaultValue": 10,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "Store resulting file to this storage.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "tmpdir": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Store temporary files to specified directory.",
                          "optional": true
                        },
                        "vmid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The ID of the guest system you want to backup.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        },
                        "zstd": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                          "optional": true,
                          "defaultValue": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-backup-id-included-volumes",
                  "path": "/cluster/backup/{id}/included_volumes",
                  "slug": "cluster-backup-id-included-volumes",
                  "label": "included_volumes",
                  "endpoints": [
                    {
                      "id": "get-cluster-backup-id-included-volumes",
                      "operationId": "get-cluster-backup-id-included-volumes",
                      "path": "/cluster/backup/{id}/included_volumes",
                      "httpMethod": "GET",
                      "name": "get_volume_backup_included",
                      "description": "Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The job ID.",
                              "constraints": {
                                "maxLength": 50,
                                "pattern": "\\S+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "description": "Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest.",
                          "schema": {
                            "type": "object",
                            "description": "Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest.",
                            "properties": {
                              "children": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "children": {
                                      "type": "array",
                                      "description": "The volumes of the guest with the information if they will be included in backups.",
                                      "optional": true,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Configuration key of the volume."
                                          },
                                          "included": {
                                            "type": "boolean",
                                            "description": "Whether the volume is included in the backup or not."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the volume."
                                          },
                                          "reason": {
                                            "type": "string",
                                            "description": "The reason why the volume is included (or excluded)."
                                          }
                                        }
                                      }
                                    },
                                    "id": {
                                      "type": "integer",
                                      "description": "VMID of the guest."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the guest",
                                      "optional": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of the guest, VM, CT or unknown for removed but not purged guests.",
                                      "enum": [
                                        "qemu",
                                        "lxc",
                                        "unknown"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-backup-info",
          "path": "/cluster/backup-info",
          "slug": "cluster-backup-info",
          "label": "backup-info",
          "endpoints": [
            {
              "id": "get-cluster-backup-info",
              "operationId": "get-cluster-backup-info",
              "path": "/cluster/backup-info",
              "httpMethod": "GET",
              "name": "index",
              "description": "Index for backup info related endpoints",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "description": "Directory index.",
                  "schema": {
                    "type": "array",
                    "description": "Directory index.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subdir": {
                          "type": "string",
                          "description": "API sub-directory endpoint"
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{subdir}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-backup-info-not-backed-up",
              "path": "/cluster/backup-info/not-backed-up",
              "slug": "cluster-backup-info-not-backed-up",
              "label": "not-backed-up",
              "endpoints": [
                {
                  "id": "get-cluster-backup-info-not-backed-up",
                  "operationId": "get-cluster-backup-info-not-backed-up",
                  "path": "/cluster/backup-info/not-backed-up",
                  "httpMethod": "GET",
                  "name": "get_guests_not_in_backup",
                  "description": "Shows all guests which are not covered by any backup job.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "Contains the guest objects.",
                      "schema": {
                        "type": "array",
                        "description": "Contains the guest objects.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the guest",
                              "optional": true
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the guest.",
                              "enum": [
                                "qemu",
                                "lxc"
                              ]
                            },
                            "vmid": {
                              "type": "integer",
                              "description": "VMID of the guest."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "cluster-ceph",
          "path": "/cluster/ceph",
          "slug": "cluster-ceph",
          "label": "ceph",
          "endpoints": [
            {
              "id": "get-cluster-ceph",
              "operationId": "get-cluster-ceph",
              "path": "/cluster/ceph",
              "httpMethod": "GET",
              "name": "cephindex",
              "description": "Cluster ceph index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-ceph-flags",
              "path": "/cluster/ceph/flags",
              "slug": "cluster-ceph-flags",
              "label": "flags",
              "endpoints": [
                {
                  "id": "get-cluster-ceph-flags",
                  "operationId": "get-cluster-ceph-flags",
                  "path": "/cluster/ceph/flags",
                  "httpMethod": "GET",
                  "name": "get_all_flags",
                  "description": "get the status of all ceph flags",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "Flag description."
                            },
                            "name": {
                              "type": "string",
                              "description": "Flag name.",
                              "enum": [
                                "nobackfill",
                                "nodeep-scrub",
                                "nodown",
                                "noin",
                                "noout",
                                "norebalance",
                                "norecover",
                                "noscrub",
                                "notieragent",
                                "noup",
                                "pause"
                              ]
                            },
                            "value": {
                              "type": "boolean",
                              "description": "Flag value."
                            }
                          },
                          "additionalProperties": true
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "put-cluster-ceph-flags",
                  "operationId": "put-cluster-ceph-flags",
                  "path": "/cluster/ceph/flags",
                  "httpMethod": "PUT",
                  "name": "set_flags",
                  "description": "Set/Unset multiple ceph flags at once.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "nobackfill": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Backfilling of PGs is suspended.",
                          "optional": true
                        },
                        "nodeep-scrub": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Deep Scrubbing is disabled.",
                          "optional": true
                        },
                        "nodown": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "OSD failure reports are being ignored, such that the monitors will not mark OSDs down.",
                          "optional": true
                        },
                        "noin": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "OSDs that were previously marked out will not be marked back in when they start.",
                          "optional": true
                        },
                        "noout": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "OSDs will not automatically be marked out after the configured interval.",
                          "optional": true
                        },
                        "norebalance": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Rebalancing of PGs is suspended.",
                          "optional": true
                        },
                        "norecover": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Recovery of PGs is suspended.",
                          "optional": true
                        },
                        "noscrub": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Scrubbing is disabled.",
                          "optional": true
                        },
                        "notieragent": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Cache tiering activity is suspended.",
                          "optional": true
                        },
                        "noup": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "OSDs are not allowed to start.",
                          "optional": true
                        },
                        "pause": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Pauses read and writes.",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-ceph-flags-flag",
                  "path": "/cluster/ceph/flags/{flag}",
                  "slug": "cluster-ceph-flags-flag",
                  "label": "{flag}",
                  "endpoints": [
                    {
                      "id": "get-cluster-ceph-flags-flag",
                      "operationId": "get-cluster-ceph-flags-flag",
                      "path": "/cluster/ceph/flags/{flag}",
                      "httpMethod": "GET",
                      "name": "get_flag",
                      "description": "Get the status of a specific ceph flag.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "flag": {
                              "type": "string",
                              "description": "The name of the flag name to get.",
                              "enum": [
                                "nobackfill",
                                "nodeep-scrub",
                                "nodown",
                                "noin",
                                "noout",
                                "norebalance",
                                "norecover",
                                "noscrub",
                                "notieragent",
                                "noup",
                                "pause"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "boolean"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-ceph-flags-flag",
                      "operationId": "put-cluster-ceph-flags-flag",
                      "path": "/cluster/ceph/flags/{flag}",
                      "httpMethod": "PUT",
                      "name": "update_flag",
                      "description": "Set or clear (unset) a specific ceph flag",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "flag": {
                              "type": "string",
                              "description": "The ceph flag to update",
                              "enum": [
                                "nobackfill",
                                "nodeep-scrub",
                                "nodown",
                                "noin",
                                "noout",
                                "norebalance",
                                "norecover",
                                "noscrub",
                                "notieragent",
                                "noup",
                                "pause"
                              ]
                            },
                            "value": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "The new value of the flag"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-ceph-metadata",
              "path": "/cluster/ceph/metadata",
              "slug": "cluster-ceph-metadata",
              "label": "metadata",
              "endpoints": [
                {
                  "id": "get-cluster-ceph-metadata",
                  "operationId": "get-cluster-ceph-metadata",
                  "path": "/cluster/ceph/metadata",
                  "httpMethod": "GET",
                  "name": "metadata",
                  "description": "Get ceph metadata.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit",
                              "Datastore.Audit"
                            ],
                            "any",
                            1
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "scope": {
                          "type": "string",
                          "optional": true,
                          "defaultValue": "all",
                          "enum": [
                            "all",
                            "versions"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "Items for each type of service containing objects for each instance.",
                      "schema": {
                        "type": "object",
                        "description": "Items for each type of service containing objects for each instance.",
                        "properties": {
                          "mds": {
                            "type": "object",
                            "description": "Metadata servers configured in the cluster and their properties.",
                            "properties": {
                              "{id}": {
                                "type": "object",
                                "description": "Useful properties are listed, but not the full list.",
                                "properties": {
                                  "addr": {
                                    "type": "string",
                                    "description": "Bind addresses and ports."
                                  },
                                  "ceph_release": {
                                    "type": "string",
                                    "description": "Ceph release codename currently used."
                                  },
                                  "ceph_version": {
                                    "type": "string",
                                    "description": "Version info currently used by the service."
                                  },
                                  "ceph_version_short": {
                                    "type": "string",
                                    "description": "Short version (numerical) info currently used by the service."
                                  },
                                  "hostname": {
                                    "type": "string",
                                    "description": "Hostname on which the service is running."
                                  },
                                  "mem_swap_kb": {
                                    "type": "integer",
                                    "description": "Memory of the service currently in swap."
                                  },
                                  "mem_total_kb": {
                                    "type": "integer",
                                    "description": "Memory consumption of the service."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the service instance."
                                  }
                                }
                              }
                            }
                          },
                          "mgr": {
                            "type": "object",
                            "description": "Managers configured in the cluster and their properties.",
                            "properties": {
                              "{id}": {
                                "type": "object",
                                "description": "Useful properties are listed, but not the full list.",
                                "properties": {
                                  "addr": {
                                    "type": "string",
                                    "description": "Bind address"
                                  },
                                  "ceph_release": {
                                    "type": "string",
                                    "description": "Ceph release codename currently used."
                                  },
                                  "ceph_version": {
                                    "type": "string",
                                    "description": "Version info currently used by the service."
                                  },
                                  "ceph_version_short": {
                                    "type": "string",
                                    "description": "Short version (numerical) info currently used by the service."
                                  },
                                  "hostname": {
                                    "type": "string",
                                    "description": "Hostname on which the service is running."
                                  },
                                  "mem_swap_kb": {
                                    "type": "integer",
                                    "description": "Memory of the service currently in swap."
                                  },
                                  "mem_total_kb": {
                                    "type": "integer",
                                    "description": "Memory consumption of the service."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the service instance."
                                  }
                                }
                              }
                            }
                          },
                          "mon": {
                            "type": "object",
                            "description": "Monitors configured in the cluster and their properties.",
                            "properties": {
                              "{id}": {
                                "type": "object",
                                "description": "Useful properties are listed, but not the full list.",
                                "properties": {
                                  "addrs": {
                                    "type": "string",
                                    "description": "Bind addresses and ports."
                                  },
                                  "ceph_release": {
                                    "type": "string",
                                    "description": "Ceph release codename currently used."
                                  },
                                  "ceph_version": {
                                    "type": "string",
                                    "description": "Version info currently used by the service."
                                  },
                                  "ceph_version_short": {
                                    "type": "string",
                                    "description": "Short version (numerical) info currently used by the service."
                                  },
                                  "hostname": {
                                    "type": "string",
                                    "description": "Hostname on which the service is running."
                                  },
                                  "mem_swap_kb": {
                                    "type": "integer",
                                    "description": "Memory of the service currently in swap."
                                  },
                                  "mem_total_kb": {
                                    "type": "integer",
                                    "description": "Memory consumption of the service."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the service instance."
                                  }
                                }
                              }
                            }
                          },
                          "node": {
                            "type": "object",
                            "description": "Ceph version installed on the nodes.",
                            "properties": {
                              "{node}": {
                                "type": "object",
                                "properties": {
                                  "buildcommit": {
                                    "type": "string",
                                    "description": "GIT commit used for the build."
                                  },
                                  "version": {
                                    "type": "object",
                                    "description": "Version info.",
                                    "properties": {
                                      "parts": {
                                        "type": "array",
                                        "description": "major, minor & patch"
                                      },
                                      "str": {
                                        "type": "string",
                                        "description": "Version as single string."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "osd": {
                            "type": "array",
                            "description": "OSDs configured in the cluster and their properties.",
                            "properties": {
                              "{id}": {
                                "type": "object",
                                "description": "Useful properties are listed, but not the full list.",
                                "properties": {
                                  "back_addr": {
                                    "type": "string",
                                    "description": "Bind addresses and ports for backend inter OSD traffic."
                                  },
                                  "ceph_release": {
                                    "type": "string",
                                    "description": "Ceph release codename currently used."
                                  },
                                  "ceph_version": {
                                    "type": "string",
                                    "description": "Version info currently used by the service."
                                  },
                                  "ceph_version_short": {
                                    "type": "string",
                                    "description": "Short version (numerical) info currently used by the service."
                                  },
                                  "device_id": {
                                    "type": "string",
                                    "description": "Devices used by the OSD."
                                  },
                                  "front_addr": {
                                    "type": "string",
                                    "description": "Bind addresses and ports for frontend traffic to OSDs."
                                  },
                                  "hostname": {
                                    "type": "string",
                                    "description": "Hostname on which the service is running."
                                  },
                                  "id": {
                                    "type": "integer",
                                    "description": "OSD ID."
                                  },
                                  "mem_swap_kb": {
                                    "type": "integer",
                                    "description": "Memory of the service currently in swap."
                                  },
                                  "mem_total_kb": {
                                    "type": "integer",
                                    "description": "Memory consumption of the service."
                                  },
                                  "osd_data": {
                                    "type": "string",
                                    "description": "Path to the OSD data directory."
                                  },
                                  "osd_objectstore": {
                                    "type": "string",
                                    "description": "OSD objectstore type."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-ceph-status",
              "path": "/cluster/ceph/status",
              "slug": "cluster-ceph-status",
              "label": "status",
              "endpoints": [
                {
                  "id": "get-cluster-ceph-status",
                  "operationId": "get-cluster-ceph-status",
                  "path": "/cluster/ceph/status",
                  "httpMethod": "GET",
                  "name": "status",
                  "description": "Get ceph status.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit",
                              "Datastore.Audit"
                            ],
                            "any",
                            1
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object"
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "cluster-config",
          "path": "/cluster/config",
          "slug": "cluster-config",
          "label": "config",
          "endpoints": [
            {
              "id": "get-cluster-config",
              "operationId": "get-cluster-config",
              "path": "/cluster/config",
              "httpMethod": "GET",
              "name": "index",
              "description": "Directory index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-cluster-config",
              "operationId": "post-cluster-config",
              "path": "/cluster/config",
              "httpMethod": "POST",
              "name": "create",
              "description": "Generate new cluster configuration. If no links given, default to local IP address as link0.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "clustername": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The name of the cluster.",
                      "constraints": {
                        "maxLength": 15,
                        "format": "pve-node"
                      }
                    },
                    "link[n]": {
                      "type": "string",
                      "typetext": "[address=]<IP> [,priority=<integer>]",
                      "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                      "optional": true
                    },
                    "nodeid": {
                      "type": "integer",
                      "typetext": "<integer> (1 - N)",
                      "description": "Node id for this node.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1
                      }
                    },
                    "votes": {
                      "type": "integer",
                      "typetext": "<integer> (1 - N)",
                      "description": "Number of votes for this node.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "string"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-config-apiversion",
              "path": "/cluster/config/apiversion",
              "slug": "cluster-config-apiversion",
              "label": "apiversion",
              "endpoints": [
                {
                  "id": "get-cluster-config-apiversion",
                  "operationId": "get-cluster-config-apiversion",
                  "path": "/cluster/config/apiversion",
                  "httpMethod": "GET",
                  "name": "join_api_version",
                  "description": "Return the version of the cluster join API available on this node.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "Cluster Join API version, currently 1",
                      "schema": {
                        "type": "integer",
                        "description": "Cluster Join API version, currently 1",
                        "constraints": {
                          "minimum": 0
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-config-join",
              "path": "/cluster/config/join",
              "slug": "cluster-config-join",
              "label": "join",
              "endpoints": [
                {
                  "id": "get-cluster-config-join",
                  "operationId": "get-cluster-config-join",
                  "path": "/cluster/config/join",
                  "httpMethod": "GET",
                  "name": "join_info",
                  "description": "Get information needed to join this cluster over the connected node.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The node for which the joinee gets the nodeinfo. ",
                          "optional": true,
                          "defaultValue": "current connected node",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "config_digest": {
                            "type": "string"
                          },
                          "nodelist": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "nodeid": {
                                  "type": "integer",
                                  "description": "Node id for this node.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "pve_addr": {
                                  "type": "string",
                                  "constraints": {
                                    "format": "ip"
                                  }
                                },
                                "pve_fp": {
                                  "type": "string",
                                  "description": "Certificate SHA 256 fingerprint.",
                                  "constraints": {
                                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                                  }
                                },
                                "quorum_votes": {
                                  "type": "integer",
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "ring0_addr": {
                                  "type": "string",
                                  "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                                  "optional": true
                                }
                              },
                              "additionalProperties": true
                            }
                          },
                          "preferred_node": {
                            "type": "string",
                            "description": "The cluster node name.",
                            "constraints": {
                              "format": "pve-node"
                            }
                          },
                          "totem": {
                            "type": "object"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-config-join",
                  "operationId": "post-cluster-config-join",
                  "path": "/cluster/config/join",
                  "httpMethod": "POST",
                  "name": "join",
                  "description": "Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "fingerprint": {
                          "type": "string",
                          "description": "Certificate SHA 256 fingerprint.",
                          "constraints": {
                            "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                          }
                        },
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Do not throw error if node already exists.",
                          "optional": true
                        },
                        "hostname": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Hostname (or IP) of an existing cluster member."
                        },
                        "link[n]": {
                          "type": "string",
                          "typetext": "[address=]<IP> [,priority=<integer>]",
                          "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                          "optional": true
                        },
                        "nodeid": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "Node id for this node.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "password": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Superuser (root) password of peer node.",
                          "constraints": {
                            "maxLength": 128
                          }
                        },
                        "votes": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Number of votes for this node",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-config-nodes",
              "path": "/cluster/config/nodes",
              "slug": "cluster-config-nodes",
              "label": "nodes",
              "endpoints": [
                {
                  "id": "get-cluster-config-nodes",
                  "operationId": "get-cluster-config-nodes",
                  "path": "/cluster/config/nodes",
                  "httpMethod": "GET",
                  "name": "nodes",
                  "description": "Corosync node list.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "node": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{node}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-config-nodes-node",
                  "path": "/cluster/config/nodes/{node}",
                  "slug": "cluster-config-nodes-node",
                  "label": "{node}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-config-nodes-node",
                      "operationId": "delete-cluster-config-nodes-node",
                      "path": "/cluster/config/nodes/{node}",
                      "httpMethod": "DELETE",
                      "name": "delnode",
                      "description": "Removes a node from the cluster configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-config-nodes-node",
                      "operationId": "post-cluster-config-nodes-node",
                      "path": "/cluster/config/nodes/{node}",
                      "httpMethod": "POST",
                      "name": "addnode",
                      "description": "Adds a node to the cluster configuration. This call is for internal use.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "apiversion": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "The JOIN_API_VERSION of the new node.",
                              "optional": true
                            },
                            "force": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Do not throw error if node already exists.",
                              "optional": true
                            },
                            "link[n]": {
                              "type": "string",
                              "typetext": "[address=]<IP> [,priority=<integer>]",
                              "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                              "optional": true
                            },
                            "new_node_ip": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IP Address of node to add. Used as fallback if no links are given.",
                              "optional": true,
                              "constraints": {
                                "format": "ip"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "nodeid": {
                              "type": "integer",
                              "typetext": "<integer> (1 - N)",
                              "description": "Node id for this node.",
                              "optional": true,
                              "constraints": {
                                "minimum": 1
                              }
                            },
                            "votes": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Number of votes for this node",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "corosync_authkey": {
                                "type": "string"
                              },
                              "corosync_conf": {
                                "type": "string"
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-config-qdevice",
              "path": "/cluster/config/qdevice",
              "slug": "cluster-config-qdevice",
              "label": "qdevice",
              "endpoints": [
                {
                  "id": "get-cluster-config-qdevice",
                  "operationId": "get-cluster-config-qdevice",
                  "path": "/cluster/config/qdevice",
                  "httpMethod": "GET",
                  "name": "status",
                  "description": "Get QDevice status",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-config-totem",
              "path": "/cluster/config/totem",
              "slug": "cluster-config-totem",
              "label": "totem",
              "endpoints": [
                {
                  "id": "get-cluster-config-totem",
                  "operationId": "get-cluster-config-totem",
                  "path": "/cluster/config/totem",
                  "httpMethod": "GET",
                  "name": "totem",
                  "description": "Get corosync totem protocol settings.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object"
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "cluster-firewall",
          "path": "/cluster/firewall",
          "slug": "cluster-firewall",
          "label": "firewall",
          "endpoints": [
            {
              "id": "get-cluster-firewall",
              "operationId": "get-cluster-firewall",
              "path": "/cluster/firewall",
              "httpMethod": "GET",
              "name": "index",
              "description": "Directory index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-firewall-aliases",
              "path": "/cluster/firewall/aliases",
              "slug": "cluster-firewall-aliases",
              "label": "aliases",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-aliases",
                  "operationId": "get-cluster-firewall-aliases",
                  "path": "/cluster/firewall/aliases",
                  "httpMethod": "GET",
                  "name": "get_aliases",
                  "description": "List aliases",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cidr": {
                              "type": "string"
                            },
                            "comment": {
                              "type": "string",
                              "optional": true
                            },
                            "digest": {
                              "type": "string",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": false,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-firewall-aliases",
                  "operationId": "post-cluster-firewall-aliases",
                  "path": "/cluster/firewall/aliases",
                  "httpMethod": "POST",
                  "name": "create_alias",
                  "description": "Create IP or Network Alias.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "cidr": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Network/IP specification in CIDR format.",
                          "constraints": {
                            "format": "IPorCIDR"
                          }
                        },
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        },
                        "name": {
                          "type": "string",
                          "description": "Alias name.",
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 64,
                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-firewall-aliases-name",
                  "path": "/cluster/firewall/aliases/{name}",
                  "slug": "cluster-firewall-aliases-name",
                  "label": "{name}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-firewall-aliases-name",
                      "operationId": "delete-cluster-firewall-aliases-name",
                      "path": "/cluster/firewall/aliases/{name}",
                      "httpMethod": "DELETE",
                      "name": "remove_alias",
                      "description": "Remove IP or Network alias.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "Alias name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-firewall-aliases-name",
                      "operationId": "get-cluster-firewall-aliases-name",
                      "path": "/cluster/firewall/aliases/{name}",
                      "httpMethod": "GET",
                      "name": "read_alias",
                      "description": "Read alias.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Alias name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-firewall-aliases-name",
                      "operationId": "put-cluster-firewall-aliases-name",
                      "path": "/cluster/firewall/aliases/{name}",
                      "httpMethod": "PUT",
                      "name": "update_alias",
                      "description": "Update IP or Network alias.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "cidr": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network/IP specification in CIDR format.",
                              "constraints": {
                                "format": "IPorCIDR"
                              }
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "Alias name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            },
                            "rename": {
                              "type": "string",
                              "description": "Rename an existing alias.",
                              "optional": true,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-firewall-groups",
              "path": "/cluster/firewall/groups",
              "slug": "cluster-firewall-groups",
              "label": "groups",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-groups",
                  "operationId": "get-cluster-firewall-groups",
                  "path": "/cluster/firewall/groups",
                  "httpMethod": "GET",
                  "name": "list_security_groups",
                  "description": "List security groups.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "optional": true
                            },
                            "digest": {
                              "type": "string",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": false,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "group": {
                              "type": "string",
                              "description": "Security Group name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 18,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{group}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-firewall-groups",
                  "operationId": "post-cluster-firewall-groups",
                  "path": "/cluster/firewall/groups",
                  "httpMethod": "POST",
                  "name": "create_security_group",
                  "description": "Create new security group.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "group": {
                          "type": "string",
                          "description": "Security Group name.",
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 18,
                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                          }
                        },
                        "rename": {
                          "type": "string",
                          "description": "Rename/update an existing security group. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing group.",
                          "optional": true,
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 18,
                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-firewall-groups-group",
                  "path": "/cluster/firewall/groups/{group}",
                  "slug": "cluster-firewall-groups-group",
                  "label": "{group}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-firewall-groups-group",
                      "operationId": "delete-cluster-firewall-groups-group",
                      "path": "/cluster/firewall/groups/{group}",
                      "httpMethod": "DELETE",
                      "name": "delete_security_group",
                      "description": "Delete security group.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "group": {
                              "type": "string",
                              "description": "Security Group name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 18,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-firewall-groups-group",
                      "operationId": "get-cluster-firewall-groups-group",
                      "path": "/cluster/firewall/groups/{group}",
                      "httpMethod": "GET",
                      "name": "get_rules",
                      "description": "List rules.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "group": {
                              "type": "string",
                              "description": "Security Group name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 18,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pos": {
                                  "type": "integer"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{pos}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-firewall-groups-group",
                      "operationId": "post-cluster-firewall-groups-group",
                      "path": "/cluster/firewall/groups/{group}",
                      "httpMethod": "POST",
                      "name": "create_rule",
                      "description": "Create new rule.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "action": {
                              "type": "string",
                              "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                              "optional": false,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Descriptive comment.",
                              "optional": true
                            },
                            "dest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512,
                                "format": "pve-fw-addr-spec"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "dport": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-dport-spec"
                              }
                            },
                            "enable": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Flag to enable/disable a rule.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "group": {
                              "type": "string",
                              "description": "Security Group name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 18,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            },
                            "icmp-type": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-icmp-type-spec"
                              }
                            },
                            "iface": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                              "optional": true,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "log": {
                              "type": "string",
                              "description": "Log level for firewall rule.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "macro": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Use predefined standard macro.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 128
                              }
                            },
                            "pos": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Update rule at position <pos>.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "proto": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-protocol-spec"
                              }
                            },
                            "source": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512,
                                "format": "pve-fw-addr-spec"
                              }
                            },
                            "sport": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-sport-spec"
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "Rule type.",
                              "optional": false,
                              "enum": [
                                "in",
                                "out",
                                "forward",
                                "group"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-firewall-groups-group-pos",
                      "path": "/cluster/firewall/groups/{group}/{pos}",
                      "slug": "cluster-firewall-groups-group-pos",
                      "label": "{pos}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-firewall-groups-group-pos",
                          "operationId": "delete-cluster-firewall-groups-group-pos",
                          "path": "/cluster/firewall/groups/{group}/{pos}",
                          "httpMethod": "DELETE",
                          "name": "delete_rule",
                          "description": "Delete rule.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "group": {
                                  "type": "string",
                                  "description": "Security Group name.",
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 18,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                },
                                "pos": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Update rule at position <pos>.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-firewall-groups-group-pos",
                          "operationId": "get-cluster-firewall-groups-group-pos",
                          "path": "/cluster/firewall/groups/{group}/{pos}",
                          "httpMethod": "GET",
                          "name": "get_rule",
                          "description": "Get single rule data.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "group": {
                                  "type": "string",
                                  "description": "Security Group name.",
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 18,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                },
                                "pos": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Update rule at position <pos>.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "string"
                                  },
                                  "comment": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "dest": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "dport": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "enable": {
                                    "type": "integer",
                                    "optional": true
                                  },
                                  "icmp-type": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "iface": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "ipversion": {
                                    "type": "integer",
                                    "optional": true
                                  },
                                  "log": {
                                    "type": "string",
                                    "description": "Log level for firewall rule",
                                    "optional": true,
                                    "enum": [
                                      "emerg",
                                      "alert",
                                      "crit",
                                      "err",
                                      "warning",
                                      "notice",
                                      "info",
                                      "debug",
                                      "nolog"
                                    ]
                                  },
                                  "macro": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "pos": {
                                    "type": "integer"
                                  },
                                  "proto": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "source": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "sport": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-firewall-groups-group-pos",
                          "operationId": "put-cluster-firewall-groups-group-pos",
                          "path": "/cluster/firewall/groups/{group}/{pos}",
                          "httpMethod": "PUT",
                          "name": "update_rule",
                          "description": "Modify rule data.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "action": {
                                  "type": "string",
                                  "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                  "optional": true,
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 20,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                },
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Descriptive comment.",
                                  "optional": true
                                },
                                "delete": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "dest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 512,
                                    "format": "pve-fw-addr-spec"
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "dport": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-dport-spec"
                                  }
                                },
                                "enable": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Flag to enable/disable a rule.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "group": {
                                  "type": "string",
                                  "description": "Security Group name.",
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 18,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                },
                                "icmp-type": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-icmp-type-spec"
                                  }
                                },
                                "iface": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                  "optional": true,
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 20,
                                    "format": "pve-iface"
                                  }
                                },
                                "log": {
                                  "type": "string",
                                  "description": "Log level for firewall rule.",
                                  "optional": true,
                                  "enum": [
                                    "emerg",
                                    "alert",
                                    "crit",
                                    "err",
                                    "warning",
                                    "notice",
                                    "info",
                                    "debug",
                                    "nolog"
                                  ]
                                },
                                "macro": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Use predefined standard macro.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 128
                                  }
                                },
                                "moveto": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "pos": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Update rule at position <pos>.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "proto": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-protocol-spec"
                                  }
                                },
                                "source": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 512,
                                    "format": "pve-fw-addr-spec"
                                  }
                                },
                                "sport": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-sport-spec"
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Rule type.",
                                  "optional": true,
                                  "enum": [
                                    "in",
                                    "out",
                                    "forward",
                                    "group"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-firewall-ipset",
              "path": "/cluster/firewall/ipset",
              "slug": "cluster-firewall-ipset",
              "label": "ipset",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-ipset",
                  "operationId": "get-cluster-firewall-ipset",
                  "path": "/cluster/firewall/ipset",
                  "httpMethod": "GET",
                  "name": "ipset_index",
                  "description": "List IPSets",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "optional": true
                            },
                            "digest": {
                              "type": "string",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": false,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "IP set name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-firewall-ipset",
                  "operationId": "post-cluster-firewall-ipset",
                  "path": "/cluster/firewall/ipset",
                  "httpMethod": "POST",
                  "name": "create_ipset",
                  "description": "Create new IPSet",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "IP set name.",
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 64,
                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                          }
                        },
                        "rename": {
                          "type": "string",
                          "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                          "optional": true,
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 64,
                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-firewall-ipset-name",
                  "path": "/cluster/firewall/ipset/{name}",
                  "slug": "cluster-firewall-ipset-name",
                  "label": "{name}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-firewall-ipset-name",
                      "operationId": "delete-cluster-firewall-ipset-name",
                      "path": "/cluster/firewall/ipset/{name}",
                      "httpMethod": "DELETE",
                      "name": "delete_ipset",
                      "description": "Delete IPSet",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "force": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Delete all members of the IPSet, if there are any.",
                              "optional": true
                            },
                            "name": {
                              "type": "string",
                              "description": "IP set name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-firewall-ipset-name",
                      "operationId": "get-cluster-firewall-ipset-name",
                      "path": "/cluster/firewall/ipset/{name}",
                      "httpMethod": "GET",
                      "name": "get_ipset",
                      "description": "List IPSet content",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "IP set name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cidr": {
                                  "type": "string"
                                },
                                "comment": {
                                  "type": "string",
                                  "optional": true
                                },
                                "digest": {
                                  "type": "string",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": false,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "nomatch": {
                                  "type": "boolean",
                                  "optional": true
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{cidr}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-firewall-ipset-name",
                      "operationId": "post-cluster-firewall-ipset-name",
                      "path": "/cluster/firewall/ipset/{name}",
                      "httpMethod": "POST",
                      "name": "create_ip",
                      "description": "Add IP or Network to IPSet.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "cidr": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network/IP specification in CIDR format.",
                              "constraints": {
                                "format": "IPorCIDRorAlias"
                              }
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            },
                            "name": {
                              "type": "string",
                              "description": "IP set name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 64,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            },
                            "nomatch": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-firewall-ipset-name-cidr",
                      "path": "/cluster/firewall/ipset/{name}/{cidr}",
                      "slug": "cluster-firewall-ipset-name-cidr",
                      "label": "{cidr}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-firewall-ipset-name-cidr",
                          "operationId": "delete-cluster-firewall-ipset-name-cidr",
                          "path": "/cluster/firewall/ipset/{name}/{cidr}",
                          "httpMethod": "DELETE",
                          "name": "remove_ip",
                          "description": "Remove IP or Network from IPSet.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cidr": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Network/IP specification in CIDR format.",
                                  "constraints": {
                                    "format": "IPorCIDRorAlias"
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "IP set name.",
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 64,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-firewall-ipset-name-cidr",
                          "operationId": "get-cluster-firewall-ipset-name-cidr",
                          "path": "/cluster/firewall/ipset/{name}/{cidr}",
                          "httpMethod": "GET",
                          "name": "read_ip",
                          "description": "Read IP or Network settings from IPSet.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cidr": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Network/IP specification in CIDR format.",
                                  "constraints": {
                                    "format": "IPorCIDRorAlias"
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "IP set name.",
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 64,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object"
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-firewall-ipset-name-cidr",
                          "operationId": "put-cluster-firewall-ipset-name-cidr",
                          "path": "/cluster/firewall/ipset/{name}/{cidr}",
                          "httpMethod": "PUT",
                          "name": "update_ip",
                          "description": "Update IP or Network settings",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cidr": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Network/IP specification in CIDR format.",
                                  "constraints": {
                                    "format": "IPorCIDRorAlias"
                                  }
                                },
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "optional": true
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "IP set name.",
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 64,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                },
                                "nomatch": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-firewall-macros",
              "path": "/cluster/firewall/macros",
              "slug": "cluster-firewall-macros",
              "label": "macros",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-macros",
                  "operationId": "get-cluster-firewall-macros",
                  "path": "/cluster/firewall/macros",
                  "httpMethod": "GET",
                  "name": "get_macros",
                  "description": "List available macros",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "descr": {
                              "type": "string",
                              "description": "More verbose description (if available)."
                            },
                            "macro": {
                              "type": "string",
                              "description": "Macro name."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-firewall-options",
              "path": "/cluster/firewall/options",
              "slug": "cluster-firewall-options",
              "label": "options",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-options",
                  "operationId": "get-cluster-firewall-options",
                  "path": "/cluster/firewall/options",
                  "httpMethod": "GET",
                  "name": "get_options",
                  "description": "Get Firewall options.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "ebtables": {
                            "type": "boolean",
                            "description": "Enable ebtables rules cluster wide.",
                            "optional": true,
                            "defaultValue": 1
                          },
                          "enable": {
                            "type": "integer",
                            "description": "Enable or disable the firewall cluster wide.",
                            "optional": true,
                            "constraints": {
                              "minimum": 0
                            }
                          },
                          "log_ratelimit": {
                            "type": "string",
                            "description": "Log ratelimiting settings",
                            "optional": true
                          },
                          "policy_forward": {
                            "type": "string",
                            "description": "Forward policy.",
                            "optional": true,
                            "enum": [
                              "ACCEPT",
                              "DROP"
                            ]
                          },
                          "policy_in": {
                            "type": "string",
                            "description": "Input policy.",
                            "optional": true,
                            "enum": [
                              "ACCEPT",
                              "REJECT",
                              "DROP"
                            ]
                          },
                          "policy_out": {
                            "type": "string",
                            "description": "Output policy.",
                            "optional": true,
                            "enum": [
                              "ACCEPT",
                              "REJECT",
                              "DROP"
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "put-cluster-firewall-options",
                  "operationId": "put-cluster-firewall-options",
                  "path": "/cluster/firewall/options",
                  "httpMethod": "PUT",
                  "name": "set_options",
                  "description": "Set Firewall options.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "delete": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A list of settings you want to delete.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-configid-list"
                          }
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "ebtables": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable ebtables rules cluster wide.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "enable": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Enable or disable the firewall cluster wide.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "log_ratelimit": {
                          "type": "string",
                          "typetext": "[enable=]<1|0> [,burst=<integer>] [,rate=<rate>]",
                          "description": "Log ratelimiting settings",
                          "optional": true
                        },
                        "policy_forward": {
                          "type": "string",
                          "description": "Forward policy.",
                          "optional": true,
                          "enum": [
                            "ACCEPT",
                            "DROP"
                          ]
                        },
                        "policy_in": {
                          "type": "string",
                          "description": "Input policy.",
                          "optional": true,
                          "enum": [
                            "ACCEPT",
                            "REJECT",
                            "DROP"
                          ]
                        },
                        "policy_out": {
                          "type": "string",
                          "description": "Output policy.",
                          "optional": true,
                          "enum": [
                            "ACCEPT",
                            "REJECT",
                            "DROP"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-firewall-refs",
              "path": "/cluster/firewall/refs",
              "slug": "cluster-firewall-refs",
              "label": "refs",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-refs",
                  "operationId": "get-cluster-firewall-refs",
                  "path": "/cluster/firewall/refs",
                  "httpMethod": "GET",
                  "name": "refs",
                  "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Only list references of specified type.",
                          "optional": true,
                          "enum": [
                            "alias",
                            "ipset"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "optional": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "ref": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "alias",
                                "ipset"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-firewall-rules",
              "path": "/cluster/firewall/rules",
              "slug": "cluster-firewall-rules",
              "label": "rules",
              "endpoints": [
                {
                  "id": "get-cluster-firewall-rules",
                  "operationId": "get-cluster-firewall-rules",
                  "path": "/cluster/firewall/rules",
                  "httpMethod": "GET",
                  "name": "get_rules",
                  "description": "List rules.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pos": {
                              "type": "integer"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{pos}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-firewall-rules",
                  "operationId": "post-cluster-firewall-rules",
                  "path": "/cluster/firewall/rules",
                  "httpMethod": "POST",
                  "name": "create_rule",
                  "description": "Create new rule.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                          "optional": false,
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 20,
                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                          }
                        },
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Descriptive comment.",
                          "optional": true
                        },
                        "dest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 512,
                            "format": "pve-fw-addr-spec"
                          }
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "dport": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-fw-dport-spec"
                          }
                        },
                        "enable": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Flag to enable/disable a rule.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "icmp-type": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-fw-icmp-type-spec"
                          }
                        },
                        "iface": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                          "optional": true,
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 20,
                            "format": "pve-iface"
                          }
                        },
                        "log": {
                          "type": "string",
                          "description": "Log level for firewall rule.",
                          "optional": true,
                          "enum": [
                            "emerg",
                            "alert",
                            "crit",
                            "err",
                            "warning",
                            "notice",
                            "info",
                            "debug",
                            "nolog"
                          ]
                        },
                        "macro": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Use predefined standard macro.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 128
                          }
                        },
                        "pos": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Update rule at position <pos>.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "proto": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-fw-protocol-spec"
                          }
                        },
                        "source": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 512,
                            "format": "pve-fw-addr-spec"
                          }
                        },
                        "sport": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-fw-sport-spec"
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "Rule type.",
                          "optional": false,
                          "enum": [
                            "in",
                            "out",
                            "forward",
                            "group"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-firewall-rules-pos",
                  "path": "/cluster/firewall/rules/{pos}",
                  "slug": "cluster-firewall-rules-pos",
                  "label": "{pos}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-firewall-rules-pos",
                      "operationId": "delete-cluster-firewall-rules-pos",
                      "path": "/cluster/firewall/rules/{pos}",
                      "httpMethod": "DELETE",
                      "name": "delete_rule",
                      "description": "Delete rule.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "pos": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Update rule at position <pos>.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-firewall-rules-pos",
                      "operationId": "get-cluster-firewall-rules-pos",
                      "path": "/cluster/firewall/rules/{pos}",
                      "httpMethod": "GET",
                      "name": "get_rule",
                      "description": "Get single rule data.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "pos": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Update rule at position <pos>.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string"
                              },
                              "comment": {
                                "type": "string",
                                "optional": true
                              },
                              "dest": {
                                "type": "string",
                                "optional": true
                              },
                              "dport": {
                                "type": "string",
                                "optional": true
                              },
                              "enable": {
                                "type": "integer",
                                "optional": true
                              },
                              "icmp-type": {
                                "type": "string",
                                "optional": true
                              },
                              "iface": {
                                "type": "string",
                                "optional": true
                              },
                              "ipversion": {
                                "type": "integer",
                                "optional": true
                              },
                              "log": {
                                "type": "string",
                                "description": "Log level for firewall rule",
                                "optional": true,
                                "enum": [
                                  "emerg",
                                  "alert",
                                  "crit",
                                  "err",
                                  "warning",
                                  "notice",
                                  "info",
                                  "debug",
                                  "nolog"
                                ]
                              },
                              "macro": {
                                "type": "string",
                                "optional": true
                              },
                              "pos": {
                                "type": "integer"
                              },
                              "proto": {
                                "type": "string",
                                "optional": true
                              },
                              "source": {
                                "type": "string",
                                "optional": true
                              },
                              "sport": {
                                "type": "string",
                                "optional": true
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-firewall-rules-pos",
                      "operationId": "put-cluster-firewall-rules-pos",
                      "path": "/cluster/firewall/rules/{pos}",
                      "httpMethod": "PUT",
                      "name": "update_rule",
                      "description": "Modify rule data.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "action": {
                              "type": "string",
                              "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                              "optional": true,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Descriptive comment.",
                              "optional": true
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-configid-list"
                              }
                            },
                            "dest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512,
                                "format": "pve-fw-addr-spec"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "dport": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-dport-spec"
                              }
                            },
                            "enable": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Flag to enable/disable a rule.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "icmp-type": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-icmp-type-spec"
                              }
                            },
                            "iface": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                              "optional": true,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "log": {
                              "type": "string",
                              "description": "Log level for firewall rule.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "macro": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Use predefined standard macro.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 128
                              }
                            },
                            "moveto": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "pos": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Update rule at position <pos>.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "proto": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-protocol-spec"
                              }
                            },
                            "source": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512,
                                "format": "pve-fw-addr-spec"
                              }
                            },
                            "sport": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-sport-spec"
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "Rule type.",
                              "optional": true,
                              "enum": [
                                "in",
                                "out",
                                "forward",
                                "group"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-ha",
          "path": "/cluster/ha",
          "slug": "cluster-ha",
          "label": "ha",
          "endpoints": [
            {
              "id": "get-cluster-ha",
              "operationId": "get-cluster-ha",
              "path": "/cluster/ha",
              "httpMethod": "GET",
              "name": "index",
              "description": "Directory index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{id}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-ha-groups",
              "path": "/cluster/ha/groups",
              "slug": "cluster-ha-groups",
              "label": "groups",
              "endpoints": [
                {
                  "id": "get-cluster-ha-groups",
                  "operationId": "get-cluster-ha-groups",
                  "path": "/cluster/ha/groups",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Get HA groups. (deprecated in favor of HA rules)",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "group": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{group}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-ha-groups",
                  "operationId": "post-cluster-ha-groups",
                  "path": "/cluster/ha/groups",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new HA group. (deprecated in favor of HA rules)",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "group": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The HA group identifier.",
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "nodes": {
                          "type": "string",
                          "typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                          "description": "List of cluster node names with optional priority.",
                          "verboseDescription": "List of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                          "optional": false,
                          "constraints": {
                            "format": "pve-ha-group-node-list"
                          }
                        },
                        "nofailback": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "The CRM tries to run services on the node with the highest priority. If a node with higher priority comes online, the CRM migrates the service to that node. Enabling nofailback prevents that behavior.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "restricted": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Resources bound to restricted groups may only run on nodes defined by the group.",
                          "verboseDescription": "Resources bound to restricted groups may only run on nodes defined by the group. The resource will be placed in the stopped state if no group node member is online. Resources on unrestricted groups may run on any cluster node if all group members are offline, but they will migrate back as soon as a group member comes online. One can implement a 'preferred node' behavior using an unrestricted group with only one member.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "type": {
                          "type": "string",
                          "description": "Group type.",
                          "optional": true,
                          "enum": [
                            "group"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-ha-groups-group",
                  "path": "/cluster/ha/groups/{group}",
                  "slug": "cluster-ha-groups-group",
                  "label": "{group}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-ha-groups-group",
                      "operationId": "delete-cluster-ha-groups-group",
                      "path": "/cluster/ha/groups/{group}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete ha group configuration. (deprecated in favor of HA rules)",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Console"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "group": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The HA group identifier.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-ha-groups-group",
                      "operationId": "get-cluster-ha-groups-group",
                      "path": "/cluster/ha/groups/{group}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read ha group configuration. (deprecated in favor of HA rules)",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "group": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The HA group identifier.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": []
                    },
                    {
                      "id": "put-cluster-ha-groups-group",
                      "operationId": "put-cluster-ha-groups-group",
                      "path": "/cluster/ha/groups/{group}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update ha group configuration. (deprecated in favor of HA rules)",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Console"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096
                              }
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "group": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The HA group identifier.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "nodes": {
                              "type": "string",
                              "typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                              "description": "List of cluster node names with optional priority.",
                              "verboseDescription": "List of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-ha-group-node-list"
                              }
                            },
                            "nofailback": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "The CRM tries to run services on the node with the highest priority. If a node with higher priority comes online, the CRM migrates the service to that node. Enabling nofailback prevents that behavior.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "restricted": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Resources bound to restricted groups may only run on nodes defined by the group.",
                              "verboseDescription": "Resources bound to restricted groups may only run on nodes defined by the group. The resource will be placed in the stopped state if no group node member is online. Resources on unrestricted groups may run on any cluster node if all group members are offline, but they will migrate back as soon as a group member comes online. One can implement a 'preferred node' behavior using an unrestricted group with only one member.",
                              "optional": true,
                              "defaultValue": 0
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-ha-resources",
              "path": "/cluster/ha/resources",
              "slug": "cluster-ha-resources",
              "label": "resources",
              "endpoints": [
                {
                  "id": "get-cluster-ha-resources",
                  "operationId": "get-cluster-ha-resources",
                  "path": "/cluster/ha/resources",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "List HA resources.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Only list resources of specific type",
                          "optional": true,
                          "enum": [
                            "ct",
                            "vm"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "sid": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{sid}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-ha-resources",
                  "operationId": "post-cluster-ha-resources",
                  "path": "/cluster/ha/resources",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new HA resource.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "failback": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Automatically migrate HA resource to the node with the highest priority according to their node affinity  rules, if a node with a higher priority than the current node comes online.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "group": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The HA group identifier.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "max_relocate": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Maximal number of service relocate tries when a service failes to start.",
                          "optional": true,
                          "defaultValue": 1,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "max_restart": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Maximal number of tries to restart the service on a node after its start failed.",
                          "optional": true,
                          "defaultValue": 1,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "sid": {
                          "type": "string",
                          "typetext": "<type>:<name>",
                          "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                          "constraints": {
                            "format": "pve-ha-resource-or-vm-id"
                          }
                        },
                        "state": {
                          "type": "string",
                          "description": "Requested resource state.",
                          "verboseDescription": "Requested resource state. The CRM reads this state and acts accordingly.\nPlease note that `enabled` is just an alias for `started`.\n\n`started`;;\n\nThe CRM tries to start the resource. Service state is\nset to `started` after successful start. On node failures, or when start\nfails, it tries to recover the resource.  If everything fails, service\nstate it set to `error`.\n\n`stopped`;;\n\nThe CRM tries to keep the resource in `stopped` state, but it\nstill tries to relocate the resources on node failures.\n\n`disabled`;;\n\nThe CRM tries to put the resource in `stopped` state, but does not try\nto relocate the resources on node failures. The main purpose of this\nstate is error recovery, because it is the only way to move a resource out\nof the `error` state.\n\n`ignored`;;\n\nThe resource gets removed from the manager status and so the CRM and the LRM do\nnot touch the resource anymore. All {pve} API calls affecting this resource\nwill be executed, directly bypassing the HA stack. CRM commands will be thrown\naway while there source is in this state. The resource will not get relocated\non node failures.\n\n",
                          "optional": true,
                          "defaultValue": "started",
                          "enum": [
                            "started",
                            "stopped",
                            "enabled",
                            "disabled",
                            "ignored"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "description": "Resource type.",
                          "optional": true,
                          "enum": [
                            "ct",
                            "vm"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-ha-resources-sid",
                  "path": "/cluster/ha/resources/{sid}",
                  "slug": "cluster-ha-resources-sid",
                  "label": "{sid}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-ha-resources-sid",
                      "operationId": "delete-cluster-ha-resources-sid",
                      "path": "/cluster/ha/resources/{sid}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete resource configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Console"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "sid": {
                              "type": "string",
                              "typetext": "<type>:<name>",
                              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                              "constraints": {
                                "format": "pve-ha-resource-or-vm-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-ha-resources-sid",
                      "operationId": "get-cluster-ha-resources-sid",
                      "path": "/cluster/ha/resources/{sid}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read resource configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "sid": {
                              "type": "string",
                              "typetext": "<type>:<name>",
                              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                              "constraints": {
                                "format": "pve-ha-resource-or-vm-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "description": "Description.",
                                "optional": true
                              },
                              "digest": {
                                "type": "string",
                                "description": "Can be used to prevent concurrent modifications."
                              },
                              "failback": {
                                "type": "boolean",
                                "description": "The HA resource is automatically migrated to the node with the highest priority according to their node affinity rule, if a node with a higher priority than the current node comes online.",
                                "optional": true,
                                "defaultValue": 1
                              },
                              "group": {
                                "type": "string",
                                "description": "The HA group identifier.",
                                "optional": true,
                                "constraints": {
                                  "format": "pve-configid"
                                }
                              },
                              "max_relocate": {
                                "type": "integer",
                                "description": "Maximal number of service relocate tries when a service failes to start.",
                                "optional": true
                              },
                              "max_restart": {
                                "type": "integer",
                                "description": "Maximal number of tries to restart the service on a node after its start failed.",
                                "optional": true
                              },
                              "sid": {
                                "type": "string",
                                "typetext": "<type>:<name>",
                                "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                                "constraints": {
                                  "format": "pve-ha-resource-or-vm-id"
                                }
                              },
                              "state": {
                                "type": "string",
                                "description": "Requested resource state.",
                                "optional": true,
                                "enum": [
                                  "started",
                                  "stopped",
                                  "enabled",
                                  "disabled",
                                  "ignored"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resources."
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-ha-resources-sid",
                      "operationId": "put-cluster-ha-resources-sid",
                      "path": "/cluster/ha/resources/{sid}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update resource configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Console"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096
                              }
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "failback": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Automatically migrate HA resource to the node with the highest priority according to their node affinity  rules, if a node with a higher priority than the current node comes online.",
                              "optional": true,
                              "defaultValue": 1
                            },
                            "group": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The HA group identifier.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "max_relocate": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Maximal number of service relocate tries when a service failes to start.",
                              "optional": true,
                              "defaultValue": 1,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "max_restart": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Maximal number of tries to restart the service on a node after its start failed.",
                              "optional": true,
                              "defaultValue": 1,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "sid": {
                              "type": "string",
                              "typetext": "<type>:<name>",
                              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                              "constraints": {
                                "format": "pve-ha-resource-or-vm-id"
                              }
                            },
                            "state": {
                              "type": "string",
                              "description": "Requested resource state.",
                              "verboseDescription": "Requested resource state. The CRM reads this state and acts accordingly.\nPlease note that `enabled` is just an alias for `started`.\n\n`started`;;\n\nThe CRM tries to start the resource. Service state is\nset to `started` after successful start. On node failures, or when start\nfails, it tries to recover the resource.  If everything fails, service\nstate it set to `error`.\n\n`stopped`;;\n\nThe CRM tries to keep the resource in `stopped` state, but it\nstill tries to relocate the resources on node failures.\n\n`disabled`;;\n\nThe CRM tries to put the resource in `stopped` state, but does not try\nto relocate the resources on node failures. The main purpose of this\nstate is error recovery, because it is the only way to move a resource out\nof the `error` state.\n\n`ignored`;;\n\nThe resource gets removed from the manager status and so the CRM and the LRM do\nnot touch the resource anymore. All {pve} API calls affecting this resource\nwill be executed, directly bypassing the HA stack. CRM commands will be thrown\naway while there source is in this state. The resource will not get relocated\non node failures.\n\n",
                              "optional": true,
                              "defaultValue": "started",
                              "enum": [
                                "started",
                                "stopped",
                                "enabled",
                                "disabled",
                                "ignored"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-ha-resources-sid-migrate",
                      "path": "/cluster/ha/resources/{sid}/migrate",
                      "slug": "cluster-ha-resources-sid-migrate",
                      "label": "migrate",
                      "endpoints": [
                        {
                          "id": "post-cluster-ha-resources-sid-migrate",
                          "operationId": "post-cluster-ha-resources-sid-migrate",
                          "path": "/cluster/ha/resources/{sid}/migrate",
                          "httpMethod": "POST",
                          "name": "migrate",
                          "description": "Request resource migration (online) to another node.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "sid": {
                                  "type": "string",
                                  "typetext": "<type>:<name>",
                                  "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                                  "constraints": {
                                    "format": "pve-ha-resource-or-vm-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "blocking-resources": {
                                    "type": "array",
                                    "description": "HA resources, which are blocking the given HA resource from being migrated to the requested target node.",
                                    "optional": true,
                                    "items": {
                                      "type": "object",
                                      "description": "A blocking HA resource",
                                      "properties": {
                                        "cause": {
                                          "type": "string",
                                          "description": "The reason why the HA resource is blocking the migration.",
                                          "enum": [
                                            "resource-affinity"
                                          ]
                                        },
                                        "sid": {
                                          "type": "string",
                                          "description": "The blocking HA resource id"
                                        }
                                      }
                                    }
                                  },
                                  "comigrated-resources": {
                                    "type": "array",
                                    "description": "HA resources, which are migrated to the same requested target node as the given HA resource, because these are in positive affinity with the HA resource.",
                                    "optional": true
                                  },
                                  "requested-node": {
                                    "type": "string",
                                    "description": "Node, which was requested to be migrated to.",
                                    "optional": false
                                  },
                                  "sid": {
                                    "type": "string",
                                    "description": "HA resource, which is requested to be migrated.",
                                    "optional": false
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "cluster-ha-resources-sid-relocate",
                      "path": "/cluster/ha/resources/{sid}/relocate",
                      "slug": "cluster-ha-resources-sid-relocate",
                      "label": "relocate",
                      "endpoints": [
                        {
                          "id": "post-cluster-ha-resources-sid-relocate",
                          "operationId": "post-cluster-ha-resources-sid-relocate",
                          "path": "/cluster/ha/resources/{sid}/relocate",
                          "httpMethod": "POST",
                          "name": "relocate",
                          "description": "Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "sid": {
                                  "type": "string",
                                  "typetext": "<type>:<name>",
                                  "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                                  "constraints": {
                                    "format": "pve-ha-resource-or-vm-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "blocking-resources": {
                                    "type": "array",
                                    "description": "HA resources, which are blocking the given HA resource from being relocated to the requested target node.",
                                    "optional": true,
                                    "items": {
                                      "type": "object",
                                      "description": "A blocking HA resource",
                                      "properties": {
                                        "cause": {
                                          "type": "string",
                                          "description": "The reason why the HA resource is blocking the relocation.",
                                          "enum": [
                                            "resource-affinity"
                                          ]
                                        },
                                        "sid": {
                                          "type": "string",
                                          "description": "The blocking HA resource id"
                                        }
                                      }
                                    }
                                  },
                                  "comigrated-resources": {
                                    "type": "array",
                                    "description": "HA resources, which are relocated to the same requested target node as the given HA resource, because these are in positive affinity with the HA resource.",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "description": "A comigrated HA resource"
                                    }
                                  },
                                  "requested-node": {
                                    "type": "string",
                                    "description": "Node, which was requested to be relocated to.",
                                    "optional": false
                                  },
                                  "sid": {
                                    "type": "string",
                                    "description": "HA resource, which is requested to be relocated.",
                                    "optional": false
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-ha-rules",
              "path": "/cluster/ha/rules",
              "slug": "cluster-ha-rules",
              "label": "rules",
              "endpoints": [
                {
                  "id": "get-cluster-ha-rules",
                  "operationId": "get-cluster-ha-rules",
                  "path": "/cluster/ha/rules",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Get HA rules.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "resource": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Limit the returned list to rules affecting the specified resource.",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Limit the returned list to the specified rule type.",
                          "optional": true,
                          "enum": [
                            "node-affinity",
                            "resource-affinity"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rule": {
                              "type": "string"
                            }
                          },
                          "metadata": {
                            "links": [
                              {
                                "href": "{rule}",
                                "rel": "child"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-ha-rules",
                  "operationId": "post-cluster-ha-rules",
                  "path": "/cluster/ha/rules",
                  "httpMethod": "POST",
                  "name": "create_rule",
                  "description": "Create HA rule.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "affinity": {
                          "type": "string",
                          "description": "Describes whether the HA resources are supposed to be kept on the same node ('positive'), or are supposed to be kept on separate nodes ('negative').",
                          "optional": true,
                          "enum": [
                            "positive",
                            "negative"
                          ],
                          "metadata": {
                            "instanceTypes": [
                              "resource-affinity"
                            ]
                          }
                        },
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "HA rule description.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "disable": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Whether the HA rule is disabled.",
                          "optional": true
                        },
                        "nodes": {
                          "type": "string",
                          "typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                          "description": "List of cluster node names with optional priority.",
                          "verboseDescription": "List of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-ha-group-node-list"
                          },
                          "metadata": {
                            "instanceTypes": [
                              "node-affinity"
                            ]
                          }
                        },
                        "resources": {
                          "type": "string",
                          "typetext": "<type>:<name>{,<type>:<name>}*",
                          "description": "List of HA resource IDs. This consists of a list of resource types followed by a resource specific name separated with a colon (example: vm:100,ct:101).",
                          "optional": false,
                          "constraints": {
                            "format": "pve-ha-resource-id-list"
                          }
                        },
                        "rule": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "HA rule identifier.",
                          "optional": false,
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "strict": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Describes whether the node affinity rule is strict or non-strict.",
                          "verboseDescription": "Describes whether the node affinity rule is strict or non-strict.\n\nA non-strict node affinity rule makes resources prefer to be on the defined nodes.\nIf none of the defined nodes are available, the resource may run on any other node.\n\nA strict node affinity rule makes resources be restricted to the defined nodes. If\nnone of the defined nodes are available, the resource will be stopped.\n",
                          "optional": true,
                          "defaultValue": 0,
                          "metadata": {
                            "instanceTypes": [
                              "node-affinity"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "HA rule type.",
                          "enum": [
                            "node-affinity",
                            "resource-affinity"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-ha-rules-rule",
                  "path": "/cluster/ha/rules/{rule}",
                  "slug": "cluster-ha-rules-rule",
                  "label": "{rule}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-ha-rules-rule",
                      "operationId": "delete-cluster-ha-rules-rule",
                      "path": "/cluster/ha/rules/{rule}",
                      "httpMethod": "DELETE",
                      "name": "delete_rule",
                      "description": "Delete HA rule.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Console"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "rule": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "HA rule identifier.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-ha-rules-rule",
                      "operationId": "get-cluster-ha-rules-rule",
                      "path": "/cluster/ha/rules/{rule}",
                      "httpMethod": "GET",
                      "name": "read_rule",
                      "description": "Read HA rule.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "rule": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "HA rule identifier.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "rule": {
                                "type": "string",
                                "description": "HA rule identifier.",
                                "constraints": {
                                  "format": "pve-configid"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "HA rule type.",
                                "enum": [
                                  "node-affinity",
                                  "resource-affinity"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-ha-rules-rule",
                      "operationId": "put-cluster-ha-rules-rule",
                      "path": "/cluster/ha/rules/{rule}",
                      "httpMethod": "PUT",
                      "name": "update_rule",
                      "description": "Update HA rule.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Console"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "affinity": {
                              "type": "string",
                              "description": "Describes whether the HA resources are supposed to be kept on the same node ('positive'), or are supposed to be kept on separate nodes ('negative').",
                              "optional": true,
                              "enum": [
                                "positive",
                                "negative"
                              ],
                              "metadata": {
                                "instanceTypes": [
                                  "resource-affinity"
                                ]
                              }
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "HA rule description.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096
                              }
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Whether the HA rule is disabled.",
                              "optional": true
                            },
                            "nodes": {
                              "type": "string",
                              "typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                              "description": "List of cluster node names with optional priority.",
                              "verboseDescription": "List of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-ha-group-node-list"
                              },
                              "metadata": {
                                "instanceTypes": [
                                  "node-affinity"
                                ]
                              }
                            },
                            "resources": {
                              "type": "string",
                              "typetext": "<type>:<name>{,<type>:<name>}*",
                              "description": "List of HA resource IDs. This consists of a list of resource types followed by a resource specific name separated with a colon (example: vm:100,ct:101).",
                              "optional": true,
                              "constraints": {
                                "format": "pve-ha-resource-id-list"
                              }
                            },
                            "rule": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "HA rule identifier.",
                              "optional": false,
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "strict": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Describes whether the node affinity rule is strict or non-strict.",
                              "verboseDescription": "Describes whether the node affinity rule is strict or non-strict.\n\nA non-strict node affinity rule makes resources prefer to be on the defined nodes.\nIf none of the defined nodes are available, the resource may run on any other node.\n\nA strict node affinity rule makes resources be restricted to the defined nodes. If\nnone of the defined nodes are available, the resource will be stopped.\n",
                              "optional": true,
                              "defaultValue": 0,
                              "metadata": {
                                "instanceTypes": [
                                  "node-affinity"
                                ]
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "HA rule type.",
                              "enum": [
                                "node-affinity",
                                "resource-affinity"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-ha-status",
              "path": "/cluster/ha/status",
              "slug": "cluster-ha-status",
              "label": "status",
              "endpoints": [
                {
                  "id": "get-cluster-ha-status",
                  "operationId": "get-cluster-ha-status",
                  "path": "/cluster/ha/status",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Directory index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-ha-status-current",
                  "path": "/cluster/ha/status/current",
                  "slug": "cluster-ha-status-current",
                  "label": "current",
                  "endpoints": [
                    {
                      "id": "get-cluster-ha-status-current",
                      "operationId": "get-cluster-ha-status-current",
                      "path": "/cluster/ha/status/current",
                      "httpMethod": "GET",
                      "name": "status",
                      "description": "Get HA manger status.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "crm_state": {
                                  "type": "string",
                                  "description": "For type 'service'. Service state as seen by the CRM.",
                                  "optional": true
                                },
                                "failback": {
                                  "type": "boolean",
                                  "description": "The HA resource is automatically migrated to the node with the highest priority according to their node affinity rule, if a node with a higher priority than the current node comes online.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Status entry ID (quorum, master, lrm:<node>, service:<sid>)."
                                },
                                "max_relocate": {
                                  "type": "integer",
                                  "description": "For type 'service'.",
                                  "optional": true
                                },
                                "max_restart": {
                                  "type": "integer",
                                  "description": "For type 'service'.",
                                  "optional": true
                                },
                                "node": {
                                  "type": "string",
                                  "description": "Node associated to status entry."
                                },
                                "quorate": {
                                  "type": "boolean",
                                  "description": "For type 'quorum'. Whether the cluster is quorate or not.",
                                  "optional": true
                                },
                                "request_state": {
                                  "type": "string",
                                  "description": "For type 'service'. Requested service state.",
                                  "optional": true
                                },
                                "sid": {
                                  "type": "string",
                                  "description": "For type 'service'. Service ID.",
                                  "optional": true
                                },
                                "state": {
                                  "type": "string",
                                  "description": "For type 'service'. Verbose service state.",
                                  "optional": true
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status of the entry (value depends on type)."
                                },
                                "timestamp": {
                                  "type": "integer",
                                  "description": "For type 'lrm','master'. Timestamp of the status information.",
                                  "optional": true
                                },
                                "type": {
                                  "description": "Type of status entry.",
                                  "enum": [
                                    "quorum",
                                    "master",
                                    "lrm",
                                    "service"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "cluster-ha-status-manager-status",
                  "path": "/cluster/ha/status/manager_status",
                  "slug": "cluster-ha-status-manager-status",
                  "label": "manager_status",
                  "endpoints": [
                    {
                      "id": "get-cluster-ha-status-manager-status",
                      "operationId": "get-cluster-ha-status-manager-status",
                      "path": "/cluster/ha/status/manager_status",
                      "httpMethod": "GET",
                      "name": "manager_status",
                      "description": "Get full HA manger status, including LRM status.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-jobs",
          "path": "/cluster/jobs",
          "slug": "cluster-jobs",
          "label": "jobs",
          "endpoints": [
            {
              "id": "get-cluster-jobs",
              "operationId": "get-cluster-jobs",
              "path": "/cluster/jobs",
              "httpMethod": "GET",
              "name": "index",
              "description": "Index for jobs related endpoints.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "description": "Directory index.",
                  "schema": {
                    "type": "array",
                    "description": "Directory index.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "subdir": {
                          "type": "string",
                          "description": "API sub-directory endpoint"
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{subdir}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-jobs-realm-sync",
              "path": "/cluster/jobs/realm-sync",
              "slug": "cluster-jobs-realm-sync",
              "label": "realm-sync",
              "endpoints": [
                {
                  "id": "get-cluster-jobs-realm-sync",
                  "operationId": "get-cluster-jobs-realm-sync",
                  "path": "/cluster/jobs/realm-sync",
                  "httpMethod": "GET",
                  "name": "syncjob_index",
                  "description": "List configured realm-sync-jobs.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "description": "A comment for the job.",
                              "optional": true
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "If the job is enabled or not."
                            },
                            "id": {
                              "type": "string",
                              "description": "The ID of the entry."
                            },
                            "last-run": {
                              "type": "integer",
                              "description": "Last execution time of the job in seconds since the beginning of the UNIX epoch",
                              "optional": true
                            },
                            "next-run": {
                              "type": "integer",
                              "description": "Next planned execution time of the job in seconds since the beginning of the UNIX epoch.",
                              "optional": true
                            },
                            "realm": {
                              "type": "string",
                              "description": "Authentication domain ID",
                              "constraints": {
                                "maxLength": 32,
                                "format": "pve-realm"
                              }
                            },
                            "remove-vanished": {
                              "type": "string",
                              "typetext": "([acl];[properties];[entry])|none",
                              "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                              "optional": true,
                              "defaultValue": "none",
                              "constraints": {
                                "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "description": "The configured sync schedule."
                            },
                            "scope": {
                              "type": "string",
                              "description": "Select what to sync.",
                              "optional": true,
                              "enum": [
                                "users",
                                "groups",
                                "both"
                              ]
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-jobs-realm-sync-id",
                  "path": "/cluster/jobs/realm-sync/{id}",
                  "slug": "cluster-jobs-realm-sync-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-jobs-realm-sync-id",
                      "operationId": "delete-cluster-jobs-realm-sync-id",
                      "path": "/cluster/jobs/realm-sync/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete_job",
                      "description": "Delete realm-sync job definition.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-jobs-realm-sync-id",
                      "operationId": "get-cluster-jobs-realm-sync-id",
                      "path": "/cluster/jobs/realm-sync/{id}",
                      "httpMethod": "GET",
                      "name": "read_job",
                      "description": "Read realm-sync job definition.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-jobs-realm-sync-id",
                      "operationId": "post-cluster-jobs-realm-sync-id",
                      "path": "/cluster/jobs/realm-sync/{id}",
                      "httpMethod": "POST",
                      "name": "create_job",
                      "description": "Create new realm-sync job.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "'Realm.AllocateUser' on '/access/realm/<realm>' and 'User.Modify' permissions to '/access/groups/'.",
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/access/realm/{realm}",
                                  [
                                    "Realm.AllocateUser"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/access/groups",
                                  [
                                    "User.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description for the Job.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512
                              }
                            },
                            "enable-new": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable newly synced users immediately.",
                              "optional": true,
                              "defaultValue": "1"
                            },
                            "enabled": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Determines if the job is enabled.",
                              "optional": true,
                              "defaultValue": 1
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the job.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-configid"
                              }
                            },
                            "realm": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Authentication domain ID",
                              "optional": true,
                              "constraints": {
                                "maxLength": 32,
                                "format": "pve-realm"
                              }
                            },
                            "remove-vanished": {
                              "type": "string",
                              "typetext": "([acl];[properties];[entry])|none",
                              "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                              "optional": true,
                              "defaultValue": "none",
                              "constraints": {
                                "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                              "constraints": {
                                "maxLength": 128,
                                "format": "pve-calendar-event"
                              }
                            },
                            "scope": {
                              "type": "string",
                              "description": "Select what to sync.",
                              "optional": true,
                              "enum": [
                                "users",
                                "groups",
                                "both"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-jobs-realm-sync-id",
                      "operationId": "put-cluster-jobs-realm-sync-id",
                      "path": "/cluster/jobs/realm-sync/{id}",
                      "httpMethod": "PUT",
                      "name": "update_job",
                      "description": "Update realm-sync job definition.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "'Realm.AllocateUser' on '/access/realm/<realm>' and 'User.Modify' permissions to '/access/groups/'.",
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/access/realm/{realm}",
                                  [
                                    "Realm.AllocateUser"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/access/groups",
                                  [
                                    "User.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description for the Job.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512
                              }
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "enable-new": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable newly synced users immediately.",
                              "optional": true,
                              "defaultValue": "1"
                            },
                            "enabled": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Determines if the job is enabled.",
                              "optional": true,
                              "defaultValue": 1
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the job.",
                              "constraints": {
                                "maxLength": 64,
                                "format": "pve-configid"
                              }
                            },
                            "remove-vanished": {
                              "type": "string",
                              "typetext": "([acl];[properties];[entry])|none",
                              "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                              "optional": true,
                              "defaultValue": "none",
                              "constraints": {
                                "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                              "constraints": {
                                "maxLength": 128,
                                "format": "pve-calendar-event"
                              }
                            },
                            "scope": {
                              "type": "string",
                              "description": "Select what to sync.",
                              "optional": true,
                              "enum": [
                                "users",
                                "groups",
                                "both"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-jobs-schedule-analyze",
              "path": "/cluster/jobs/schedule-analyze",
              "slug": "cluster-jobs-schedule-analyze",
              "label": "schedule-analyze",
              "endpoints": [
                {
                  "id": "get-cluster-jobs-schedule-analyze",
                  "operationId": "get-cluster-jobs-schedule-analyze",
                  "path": "/cluster/jobs/schedule-analyze",
                  "httpMethod": "GET",
                  "name": "schedule-analyze",
                  "description": "Returns a list of future schedule runtimes.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "iterations": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 100)",
                          "description": "Number of event-iteration to simulate and return.",
                          "optional": true,
                          "defaultValue": 10,
                          "constraints": {
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "schedule": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Job schedule. The format is a subset of `systemd` calendar events.",
                          "constraints": {
                            "maxLength": 128,
                            "format": "pve-calendar-event"
                          }
                        },
                        "starttime": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "UNIX timestamp to start the calculation from. Defaults to the current time.",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "An array of the next <iterations> events since <starttime>.",
                      "schema": {
                        "type": "array",
                        "description": "An array of the next <iterations> events since <starttime>.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "integer",
                              "description": "UNIX timestamp for the run."
                            },
                            "utc": {
                              "type": "string",
                              "description": "UTC timestamp for the run."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "cluster-log",
          "path": "/cluster/log",
          "slug": "cluster-log",
          "label": "log",
          "endpoints": [
            {
              "id": "get-cluster-log",
              "operationId": "get-cluster-log",
              "path": "/cluster/log",
              "httpMethod": "GET",
              "name": "log",
              "description": "Read cluster log",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "max": {
                      "type": "integer",
                      "typetext": "<integer> (1 - N)",
                      "description": "Maximum number of entries.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "cluster-mapping",
          "path": "/cluster/mapping",
          "slug": "cluster-mapping",
          "label": "mapping",
          "endpoints": [
            {
              "id": "get-cluster-mapping",
              "operationId": "get-cluster-mapping",
              "path": "/cluster/mapping",
              "httpMethod": "GET",
              "name": "index",
              "description": "List resource types.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-mapping-dir",
              "path": "/cluster/mapping/dir",
              "slug": "cluster-mapping-dir",
              "label": "dir",
              "endpoints": [
                {
                  "id": "get-cluster-mapping-dir",
                  "operationId": "get-cluster-mapping-dir",
                  "path": "/cluster/mapping/dir",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "List directory mapping",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only lists entries where you have 'Mapping.Modify', 'Mapping.Use' or 'Mapping.Audit' permissions on '/mapping/dir/<id>'.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "check-node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the directory to the response.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "checks": {
                              "type": "array",
                              "description": "A list of checks, only present if 'check-node' is set.",
                              "optional": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "description": "The message of the error"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "description": "The severity of the error",
                                    "enum": [
                                      "warning",
                                      "error"
                                    ]
                                  }
                                }
                              }
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the logical mapping."
                            },
                            "id": {
                              "type": "string",
                              "description": "The logical ID of the mapping."
                            },
                            "map": {
                              "type": "array",
                              "description": "The entries of the mapping.",
                              "items": {
                                "type": "string",
                                "description": "A mapping for a node."
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-mapping-dir",
                  "operationId": "post-cluster-mapping-dir",
                  "path": "/cluster/mapping/dir",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new directory mapping.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/mapping/dir",
                            [
                              "Mapping.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description of the directory mapping",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "id": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The ID of the directory mapping",
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "map": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "A list of maps for the cluster nodes.",
                          "optional": false,
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-mapping-dir-id",
                  "path": "/cluster/mapping/dir/{id}",
                  "slug": "cluster-mapping-dir-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-mapping-dir-id",
                      "operationId": "delete-cluster-mapping-dir-id",
                      "path": "/cluster/mapping/dir/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Remove directory mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/dir",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-mapping-dir-id",
                      "operationId": "get-cluster-mapping-dir-id",
                      "path": "/cluster/mapping/dir/{id}",
                      "httpMethod": "GET",
                      "name": "get",
                      "description": "Get directory mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/mapping/dir/{id}",
                                  [
                                    "Mapping.Use"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/dir/{id}",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/dir/{id}",
                                  [
                                    "Mapping.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-mapping-dir-id",
                      "operationId": "put-cluster-mapping-dir-id",
                      "path": "/cluster/mapping/dir/{id}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update a directory mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/dir/{id}",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "description": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description of the directory mapping",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the directory mapping",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "map": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "A list of maps for the cluster nodes.",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-mapping-pci",
              "path": "/cluster/mapping/pci",
              "slug": "cluster-mapping-pci",
              "label": "pci",
              "endpoints": [
                {
                  "id": "get-cluster-mapping-pci",
                  "operationId": "get-cluster-mapping-pci",
                  "path": "/cluster/mapping/pci",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "List PCI Hardware Mapping",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only lists entries where you have 'Mapping.Modify', 'Mapping.Use' or 'Mapping.Audit' permissions on '/mapping/pci/<id>'.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "check-node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the devices to the response.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "checks": {
                              "type": "array",
                              "description": "A list of checks, only present if 'check_node' is set.",
                              "optional": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "description": "The message of the error"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "description": "The severity of the error",
                                    "enum": [
                                      "warning",
                                      "error"
                                    ]
                                  }
                                }
                              }
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the logical mapping."
                            },
                            "id": {
                              "type": "string",
                              "description": "The logical ID of the mapping."
                            },
                            "map": {
                              "type": "array",
                              "description": "The entries of the mapping.",
                              "items": {
                                "type": "string",
                                "description": "A mapping for a node."
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-mapping-pci",
                  "operationId": "post-cluster-mapping-pci",
                  "path": "/cluster/mapping/pci",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new hardware mapping.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/mapping/pci",
                            [
                              "Mapping.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description of the logical PCI device.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "id": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The ID of the logical PCI mapping.",
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "live-migration-capable": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Marks the device(s) as being able to be live-migrated (Experimental). This needs hardware and driver support to work.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "map": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "A list of maps for the cluster nodes.",
                          "optional": false,
                          "items": {
                            "type": "string"
                          }
                        },
                        "mdev": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Marks the device(s) as being capable of providing mediated devices.",
                          "optional": true,
                          "defaultValue": 0
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-mapping-pci-id",
                  "path": "/cluster/mapping/pci/{id}",
                  "slug": "cluster-mapping-pci-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-mapping-pci-id",
                      "operationId": "delete-cluster-mapping-pci-id",
                      "path": "/cluster/mapping/pci/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Remove Hardware Mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/pci",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-mapping-pci-id",
                      "operationId": "get-cluster-mapping-pci-id",
                      "path": "/cluster/mapping/pci/{id}",
                      "httpMethod": "GET",
                      "name": "get",
                      "description": "Get PCI Mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/mapping/pci/{id}",
                                  [
                                    "Mapping.Use"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/pci/{id}",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/pci/{id}",
                                  [
                                    "Mapping.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-mapping-pci-id",
                      "operationId": "put-cluster-mapping-pci-id",
                      "path": "/cluster/mapping/pci/{id}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update a hardware mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/pci/{id}",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "description": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description of the logical PCI device.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the logical PCI mapping.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "live-migration-capable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Marks the device(s) as being able to be live-migrated (Experimental). This needs hardware and driver support to work.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "map": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "A list of maps for the cluster nodes.",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "mdev": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Marks the device(s) as being capable of providing mediated devices.",
                              "optional": true,
                              "defaultValue": 0
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-mapping-usb",
              "path": "/cluster/mapping/usb",
              "slug": "cluster-mapping-usb",
              "label": "usb",
              "endpoints": [
                {
                  "id": "get-cluster-mapping-usb",
                  "operationId": "get-cluster-mapping-usb",
                  "path": "/cluster/mapping/usb",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "List USB Hardware Mappings",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only lists entries where you have 'Mapping.Modify', 'Mapping.Use' or 'Mapping.Audit' permissions on '/mapping/usb/<id>'.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "check-node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "If given, checks the configurations on the given node for correctness, and adds relevant errors to the devices.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "A description of the logical mapping."
                            },
                            "error": {
                              "description": "A list of errors when 'check_node' is given.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "description": "The message of the error"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "description": "The severity of the error"
                                  }
                                }
                              }
                            },
                            "id": {
                              "type": "string",
                              "description": "The logical ID of the mapping."
                            },
                            "map": {
                              "type": "array",
                              "description": "The entries of the mapping.",
                              "items": {
                                "type": "string",
                                "description": "A mapping for a node."
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-mapping-usb",
                  "operationId": "post-cluster-mapping-usb",
                  "path": "/cluster/mapping/usb",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new hardware mapping.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/mapping/usb",
                            [
                              "Mapping.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description of the logical USB device.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "id": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The ID of the logical USB mapping.",
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "map": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "A list of maps for the cluster nodes.",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-mapping-usb-id",
                  "path": "/cluster/mapping/usb/{id}",
                  "slug": "cluster-mapping-usb-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-mapping-usb-id",
                      "operationId": "delete-cluster-mapping-usb-id",
                      "path": "/cluster/mapping/usb/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Remove Hardware Mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/usb",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-mapping-usb-id",
                      "operationId": "get-cluster-mapping-usb-id",
                      "path": "/cluster/mapping/usb/{id}",
                      "httpMethod": "GET",
                      "name": "get",
                      "description": "Get USB Mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/mapping/usb/{id}",
                                  [
                                    "Mapping.Audit"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/usb/{id}",
                                  [
                                    "Mapping.Use"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/usb/{id}",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-mapping-usb-id",
                      "operationId": "put-cluster-mapping-usb-id",
                      "path": "/cluster/mapping/usb/{id}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update a hardware mapping.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/usb/{id}",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "description": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Description of the logical USB device.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the logical USB mapping.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "map": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "A list of maps for the cluster nodes.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-metrics",
          "path": "/cluster/metrics",
          "slug": "cluster-metrics",
          "label": "metrics",
          "endpoints": [
            {
              "id": "get-cluster-metrics",
              "operationId": "get-cluster-metrics",
              "path": "/cluster/metrics",
              "httpMethod": "GET",
              "name": "index",
              "description": "Metrics index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-metrics-export",
              "path": "/cluster/metrics/export",
              "slug": "cluster-metrics-export",
              "label": "export",
              "endpoints": [
                {
                  "id": "get-cluster-metrics-export",
                  "operationId": "get-cluster-metrics-export",
                  "path": "/cluster/metrics/export",
                  "httpMethod": "GET",
                  "name": "export",
                  "description": "Retrieve metrics of the cluster.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "history": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Also return historic values. Returns full available metric history unless `start-time` is also set",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "local-only": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Only return metrics for the current node instead of the whole cluster",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "start-time": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Only include metrics with a timestamp > start-time.",
                          "optional": true,
                          "defaultValue": 0
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "array",
                            "description": "Array of system metrics. Metrics are sorted by their timestamp.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier for this metric object, for instance 'node/<nodename>' or 'qemu/<vmid>'."
                                },
                                "metric": {
                                  "type": "string",
                                  "description": "Name of the metric."
                                },
                                "timestamp": {
                                  "type": "integer",
                                  "description": "Time at which this metric was observed"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of the metric.",
                                  "enum": [
                                    "gauge",
                                    "counter",
                                    "derive"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "description": "Metric value."
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-metrics-server",
              "path": "/cluster/metrics/server",
              "slug": "cluster-metrics-server",
              "label": "server",
              "endpoints": [
                {
                  "id": "get-cluster-metrics-server",
                  "operationId": "get-cluster-metrics-server",
                  "path": "/cluster/metrics/server",
                  "httpMethod": "GET",
                  "name": "server_index",
                  "description": "List configured metric servers.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "disable": {
                              "type": "boolean",
                              "description": "Flag to disable the plugin."
                            },
                            "id": {
                              "type": "string",
                              "description": "The ID of the entry."
                            },
                            "port": {
                              "type": "integer",
                              "description": "Server network port"
                            },
                            "server": {
                              "type": "string",
                              "description": "Server dns name or IP address"
                            },
                            "type": {
                              "type": "string",
                              "description": "Plugin type."
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-metrics-server-id",
                  "path": "/cluster/metrics/server/{id}",
                  "slug": "cluster-metrics-server-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-metrics-server-id",
                      "operationId": "delete-cluster-metrics-server-id",
                      "path": "/cluster/metrics/server/{id}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Remove Metric server.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-metrics-server-id",
                      "operationId": "get-cluster-metrics-server-id",
                      "path": "/cluster/metrics/server/{id}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read metric server configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-metrics-server-id",
                      "operationId": "post-cluster-metrics-server-id",
                      "path": "/cluster/metrics/server/{id}",
                      "httpMethod": "POST",
                      "name": "create",
                      "description": "Create a new external metric server config",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "api-path-prefix": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy.",
                              "optional": true
                            },
                            "bucket": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The InfluxDB bucket/db. Only necessary when using the http v2 api.",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Flag to disable the plugin.",
                              "optional": true
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the entry.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "influxdbproto": {
                              "type": "string",
                              "optional": true,
                              "defaultValue": "udp",
                              "enum": [
                                "udp",
                                "http",
                                "https"
                              ]
                            },
                            "max-body-size": {
                              "type": "integer",
                              "typetext": "<integer> (1 - N)",
                              "description": "InfluxDB max-body-size in bytes. Requests are batched up to this size.",
                              "optional": true,
                              "defaultValue": 25000000,
                              "constraints": {
                                "minimum": 1
                              }
                            },
                            "mtu": {
                              "type": "integer",
                              "typetext": "<integer> (512 - 65536)",
                              "description": "MTU for metrics transmission over UDP",
                              "optional": true,
                              "defaultValue": 1500,
                              "constraints": {
                                "minimum": 512,
                                "maximum": 65536
                              }
                            },
                            "organization": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api.",
                              "optional": true
                            },
                            "otel-compression": {
                              "type": "string",
                              "description": "Compression algorithm for requests",
                              "optional": true,
                              "defaultValue": "gzip",
                              "enum": [
                                "none",
                                "gzip"
                              ]
                            },
                            "otel-headers": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Custom HTTP headers (JSON format, base64 encoded)",
                              "optional": true,
                              "constraints": {
                                "maxLength": 1024
                              }
                            },
                            "otel-max-body-size": {
                              "type": "integer",
                              "typetext": "<integer> (1024 - N)",
                              "description": "Maximum request body size in bytes",
                              "optional": true,
                              "defaultValue": 10000000,
                              "constraints": {
                                "minimum": 1024
                              }
                            },
                            "otel-path": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "OTLP endpoint path",
                              "optional": true,
                              "defaultValue": "/v1/metrics"
                            },
                            "otel-protocol": {
                              "type": "string",
                              "description": "HTTP protocol",
                              "optional": true,
                              "defaultValue": "https",
                              "enum": [
                                "http",
                                "https"
                              ]
                            },
                            "otel-resource-attributes": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Additional resource attributes as JSON, base64 encoded",
                              "optional": true,
                              "constraints": {
                                "maxLength": 1024
                              }
                            },
                            "otel-timeout": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 10)",
                              "description": "HTTP request timeout in seconds",
                              "optional": true,
                              "defaultValue": 5,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 10
                              }
                            },
                            "otel-verify-ssl": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Verify SSL certificates",
                              "optional": true,
                              "defaultValue": 1
                            },
                            "path": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "root graphite path (ex: proxmox.mycluster.mykey)",
                              "optional": true,
                              "constraints": {
                                "format": "graphite-path"
                              }
                            },
                            "port": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 65536)",
                              "description": "server network port",
                              "constraints": {
                                "minimum": 1,
                                "maximum": 65536
                              }
                            },
                            "proto": {
                              "type": "string",
                              "description": "Protocol to send graphite data. TCP or UDP (default)",
                              "optional": true,
                              "enum": [
                                "udp",
                                "tcp"
                              ]
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "server dns name or IP address",
                              "constraints": {
                                "format": "address"
                              }
                            },
                            "timeout": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "graphite TCP socket timeout (default=1)",
                              "optional": true,
                              "defaultValue": 1,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead.",
                              "optional": true
                            },
                            "type": {
                              "type": "string",
                              "description": "Plugin type.",
                              "enum": [
                                "graphite",
                                "influxdb",
                                "opentelemetry"
                              ],
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "verify-certificate": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Set to 0 to disable certificate verification for https endpoints.",
                              "optional": true,
                              "defaultValue": 1
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-metrics-server-id",
                      "operationId": "put-cluster-metrics-server-id",
                      "path": "/cluster/metrics/server/{id}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update metric server configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "api-path-prefix": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy.",
                              "optional": true
                            },
                            "bucket": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The InfluxDB bucket/db. Only necessary when using the http v2 api.",
                              "optional": true
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Flag to disable the plugin.",
                              "optional": true
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The ID of the entry.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "influxdbproto": {
                              "type": "string",
                              "optional": true,
                              "defaultValue": "udp",
                              "enum": [
                                "udp",
                                "http",
                                "https"
                              ]
                            },
                            "max-body-size": {
                              "type": "integer",
                              "typetext": "<integer> (1 - N)",
                              "description": "InfluxDB max-body-size in bytes. Requests are batched up to this size.",
                              "optional": true,
                              "defaultValue": 25000000,
                              "constraints": {
                                "minimum": 1
                              }
                            },
                            "mtu": {
                              "type": "integer",
                              "typetext": "<integer> (512 - 65536)",
                              "description": "MTU for metrics transmission over UDP",
                              "optional": true,
                              "defaultValue": 1500,
                              "constraints": {
                                "minimum": 512,
                                "maximum": 65536
                              }
                            },
                            "organization": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api.",
                              "optional": true
                            },
                            "otel-compression": {
                              "type": "string",
                              "description": "Compression algorithm for requests",
                              "optional": true,
                              "defaultValue": "gzip",
                              "enum": [
                                "none",
                                "gzip"
                              ]
                            },
                            "otel-headers": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Custom HTTP headers (JSON format, base64 encoded)",
                              "optional": true,
                              "constraints": {
                                "maxLength": 1024
                              }
                            },
                            "otel-max-body-size": {
                              "type": "integer",
                              "typetext": "<integer> (1024 - N)",
                              "description": "Maximum request body size in bytes",
                              "optional": true,
                              "defaultValue": 10000000,
                              "constraints": {
                                "minimum": 1024
                              }
                            },
                            "otel-path": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "OTLP endpoint path",
                              "optional": true,
                              "defaultValue": "/v1/metrics"
                            },
                            "otel-protocol": {
                              "type": "string",
                              "description": "HTTP protocol",
                              "optional": true,
                              "defaultValue": "https",
                              "enum": [
                                "http",
                                "https"
                              ]
                            },
                            "otel-resource-attributes": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Additional resource attributes as JSON, base64 encoded",
                              "optional": true,
                              "constraints": {
                                "maxLength": 1024
                              }
                            },
                            "otel-timeout": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 10)",
                              "description": "HTTP request timeout in seconds",
                              "optional": true,
                              "defaultValue": 5,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 10
                              }
                            },
                            "otel-verify-ssl": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Verify SSL certificates",
                              "optional": true,
                              "defaultValue": 1
                            },
                            "path": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "root graphite path (ex: proxmox.mycluster.mykey)",
                              "optional": true,
                              "constraints": {
                                "format": "graphite-path"
                              }
                            },
                            "port": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 65536)",
                              "description": "server network port",
                              "constraints": {
                                "minimum": 1,
                                "maximum": 65536
                              }
                            },
                            "proto": {
                              "type": "string",
                              "description": "Protocol to send graphite data. TCP or UDP (default)",
                              "optional": true,
                              "enum": [
                                "udp",
                                "tcp"
                              ]
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "server dns name or IP address",
                              "constraints": {
                                "format": "address"
                              }
                            },
                            "timeout": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "graphite TCP socket timeout (default=1)",
                              "optional": true,
                              "defaultValue": 1,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead.",
                              "optional": true
                            },
                            "verify-certificate": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Set to 0 to disable certificate verification for https endpoints.",
                              "optional": true,
                              "defaultValue": 1
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-nextid",
          "path": "/cluster/nextid",
          "slug": "cluster-nextid",
          "label": "nextid",
          "endpoints": [
            {
              "id": "get-cluster-nextid",
              "operationId": "get-cluster-nextid",
              "path": "/cluster/nextid",
              "httpMethod": "GET",
              "name": "nextid",
              "description": "Get next free VMID. Pass a VMID to assert that its free (at time of check).",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "vmid": {
                      "type": "integer",
                      "typetext": "<integer> (100 - 999999999)",
                      "description": "The (unique) ID of the VM.",
                      "optional": true,
                      "constraints": {
                        "minimum": 100,
                        "maximum": 999999999,
                        "format": "pve-vmid"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "description": "The next free VMID.",
                  "schema": {
                    "type": "integer",
                    "description": "The next free VMID."
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "cluster-notifications",
          "path": "/cluster/notifications",
          "slug": "cluster-notifications",
          "label": "notifications",
          "endpoints": [
            {
              "id": "get-cluster-notifications",
              "operationId": "get-cluster-notifications",
              "path": "/cluster/notifications",
              "httpMethod": "GET",
              "name": "index",
              "description": "Index for notification-related API endpoints.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-notifications-endpoints",
              "path": "/cluster/notifications/endpoints",
              "slug": "cluster-notifications-endpoints",
              "label": "endpoints",
              "endpoints": [
                {
                  "id": "get-cluster-notifications-endpoints",
                  "operationId": "get-cluster-notifications-endpoints",
                  "path": "/cluster/notifications/endpoints",
                  "httpMethod": "GET",
                  "name": "endpoints_index",
                  "description": "Index for all available endpoint types.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-notifications-endpoints-gotify",
                  "path": "/cluster/notifications/endpoints/gotify",
                  "slug": "cluster-notifications-endpoints-gotify",
                  "label": "gotify",
                  "endpoints": [
                    {
                      "id": "get-cluster-notifications-endpoints-gotify",
                      "operationId": "get-cluster-notifications-endpoints-gotify",
                      "path": "/cluster/notifications/endpoints/gotify",
                      "httpMethod": "GET",
                      "name": "get_gotify_endpoints",
                      "description": "Returns a list of all gotify endpoints",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/notifications",
                                [
                                  "Mapping.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "disable": {
                                  "type": "boolean",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "Show if this entry was created by a user or was built-in",
                                  "enum": [
                                    "user-created",
                                    "builtin",
                                    "modified-builtin"
                                  ]
                                },
                                "server": {
                                  "type": "string",
                                  "description": "Server URL"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-notifications-endpoints-gotify",
                      "operationId": "post-cluster-notifications-endpoints-gotify",
                      "path": "/cluster/notifications/endpoints/gotify",
                      "httpMethod": "POST",
                      "name": "create_gotify_endpoint",
                      "description": "Create a new gotify endpoint",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "or",
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Sys.Modify"
                                    ]
                                  ],
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.AccessNetwork"
                                    ]
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comment",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable this target",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The name of the endpoint.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Server URL"
                            },
                            "token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Secret token"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-notifications-endpoints-gotify-name",
                      "path": "/cluster/notifications/endpoints/gotify/{name}",
                      "slug": "cluster-notifications-endpoints-gotify-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-notifications-endpoints-gotify-name",
                          "operationId": "delete-cluster-notifications-endpoints-gotify-name",
                          "path": "/cluster/notifications/endpoints/gotify/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete_gotify_endpoint",
                          "description": "Remove gotify endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/mapping/notifications",
                                    [
                                      "Mapping.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-notifications-endpoints-gotify-name",
                          "operationId": "get-cluster-notifications-endpoints-gotify-name",
                          "path": "/cluster/notifications/endpoints/gotify/{name}",
                          "httpMethod": "GET",
                          "name": "get_gotify_endpoint",
                          "description": "Return a specific gotify endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Audit"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "optional": true
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 64
                                    }
                                  },
                                  "disable": {
                                    "type": "boolean",
                                    "description": "Disable this target",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the endpoint.",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  },
                                  "server": {
                                    "type": "string",
                                    "description": "Server URL"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-notifications-endpoints-gotify-name",
                          "operationId": "put-cluster-notifications-endpoints-gotify-name",
                          "path": "/cluster/notifications/endpoints/gotify/{name}",
                          "httpMethod": "PUT",
                          "name": "update_gotify_endpoint",
                          "description": "Update existing gotify endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Sys.Modify"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.AccessNetwork"
                                        ]
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "delete": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "disable": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "server": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Server URL",
                                  "optional": true
                                },
                                "token": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Secret token",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "cluster-notifications-endpoints-sendmail",
                  "path": "/cluster/notifications/endpoints/sendmail",
                  "slug": "cluster-notifications-endpoints-sendmail",
                  "label": "sendmail",
                  "endpoints": [
                    {
                      "id": "get-cluster-notifications-endpoints-sendmail",
                      "operationId": "get-cluster-notifications-endpoints-sendmail",
                      "path": "/cluster/notifications/endpoints/sendmail",
                      "httpMethod": "GET",
                      "name": "get_sendmail_endpoints",
                      "description": "Returns a list of all sendmail endpoints",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "author": {
                                  "type": "string",
                                  "description": "Author of the mail",
                                  "optional": true
                                },
                                "comment": {
                                  "type": "string",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "disable": {
                                  "type": "boolean",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "from-address": {
                                  "type": "string",
                                  "description": "`From` address for the mail",
                                  "optional": true
                                },
                                "mailto": {
                                  "type": "array",
                                  "description": "List of email recipients",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "email-or-username"
                                    }
                                  }
                                },
                                "mailto-user": {
                                  "type": "array",
                                  "description": "List of users",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-userid"
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "Show if this entry was created by a user or was built-in",
                                  "enum": [
                                    "user-created",
                                    "builtin",
                                    "modified-builtin"
                                  ]
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-notifications-endpoints-sendmail",
                      "operationId": "post-cluster-notifications-endpoints-sendmail",
                      "path": "/cluster/notifications/endpoints/sendmail",
                      "httpMethod": "POST",
                      "name": "create_sendmail_endpoint",
                      "description": "Create a new sendmail endpoint",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "or",
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Sys.Modify"
                                    ]
                                  ],
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.AccessNetwork"
                                    ]
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "author": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Author of the mail",
                              "optional": true
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comment",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable this target",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "from-address": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "`From` address for the mail",
                              "optional": true
                            },
                            "mailto": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "List of email recipients",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "email-or-username"
                                }
                              }
                            },
                            "mailto-user": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "List of users",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "pve-userid"
                                }
                              }
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The name of the endpoint.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-notifications-endpoints-sendmail-name",
                      "path": "/cluster/notifications/endpoints/sendmail/{name}",
                      "slug": "cluster-notifications-endpoints-sendmail-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-notifications-endpoints-sendmail-name",
                          "operationId": "delete-cluster-notifications-endpoints-sendmail-name",
                          "path": "/cluster/notifications/endpoints/sendmail/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete_sendmail_endpoint",
                          "description": "Remove sendmail endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/mapping/notifications",
                                    [
                                      "Mapping.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-notifications-endpoints-sendmail-name",
                          "operationId": "get-cluster-notifications-endpoints-sendmail-name",
                          "path": "/cluster/notifications/endpoints/sendmail/{name}",
                          "httpMethod": "GET",
                          "name": "get_sendmail_endpoint",
                          "description": "Return a specific sendmail endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Audit"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "author": {
                                    "type": "string",
                                    "description": "Author of the mail",
                                    "optional": true
                                  },
                                  "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "optional": true
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 64
                                    }
                                  },
                                  "disable": {
                                    "type": "boolean",
                                    "description": "Disable this target",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "from-address": {
                                    "type": "string",
                                    "description": "`From` address for the mail",
                                    "optional": true
                                  },
                                  "mailto": {
                                    "type": "array",
                                    "description": "List of email recipients",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "constraints": {
                                        "format": "email-or-username"
                                      }
                                    }
                                  },
                                  "mailto-user": {
                                    "type": "array",
                                    "description": "List of users",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "constraints": {
                                        "format": "pve-userid"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the endpoint.",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-notifications-endpoints-sendmail-name",
                          "operationId": "put-cluster-notifications-endpoints-sendmail-name",
                          "path": "/cluster/notifications/endpoints/sendmail/{name}",
                          "httpMethod": "PUT",
                          "name": "update_sendmail_endpoint",
                          "description": "Update existing sendmail endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Sys.Modify"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.AccessNetwork"
                                        ]
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "author": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Author of the mail",
                                  "optional": true
                                },
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "delete": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "disable": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "from-address": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "`From` address for the mail",
                                  "optional": true
                                },
                                "mailto": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "List of email recipients",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "email-or-username"
                                    }
                                  }
                                },
                                "mailto-user": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "List of users",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-userid"
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "cluster-notifications-endpoints-smtp",
                  "path": "/cluster/notifications/endpoints/smtp",
                  "slug": "cluster-notifications-endpoints-smtp",
                  "label": "smtp",
                  "endpoints": [
                    {
                      "id": "get-cluster-notifications-endpoints-smtp",
                      "operationId": "get-cluster-notifications-endpoints-smtp",
                      "path": "/cluster/notifications/endpoints/smtp",
                      "httpMethod": "GET",
                      "name": "get_smtp_endpoints",
                      "description": "Returns a list of all smtp endpoints",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "author": {
                                  "type": "string",
                                  "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                                  "optional": true
                                },
                                "comment": {
                                  "type": "string",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "disable": {
                                  "type": "boolean",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "from-address": {
                                  "type": "string",
                                  "description": "`From` address for the mail"
                                },
                                "mailto": {
                                  "type": "array",
                                  "description": "List of email recipients",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "email-or-username"
                                    }
                                  }
                                },
                                "mailto-user": {
                                  "type": "array",
                                  "description": "List of users",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-userid"
                                    }
                                  }
                                },
                                "mode": {
                                  "type": "string",
                                  "description": "Determine which encryption method shall be used for the connection.",
                                  "optional": true,
                                  "defaultValue": "tls",
                                  "enum": [
                                    "insecure",
                                    "starttls",
                                    "tls"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "Show if this entry was created by a user or was built-in",
                                  "enum": [
                                    "user-created",
                                    "builtin",
                                    "modified-builtin"
                                  ]
                                },
                                "port": {
                                  "type": "integer",
                                  "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                                  "optional": true
                                },
                                "server": {
                                  "type": "string",
                                  "description": "The address of the SMTP server."
                                },
                                "username": {
                                  "type": "string",
                                  "description": "Username for SMTP authentication",
                                  "optional": true
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-notifications-endpoints-smtp",
                      "operationId": "post-cluster-notifications-endpoints-smtp",
                      "path": "/cluster/notifications/endpoints/smtp",
                      "httpMethod": "POST",
                      "name": "create_smtp_endpoint",
                      "description": "Create a new smtp endpoint",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "or",
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Sys.Modify"
                                    ]
                                  ],
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.AccessNetwork"
                                    ]
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "author": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                              "optional": true
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comment",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable this target",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "from-address": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "`From` address for the mail"
                            },
                            "mailto": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "List of email recipients",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "email-or-username"
                                }
                              }
                            },
                            "mailto-user": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "List of users",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "pve-userid"
                                }
                              }
                            },
                            "mode": {
                              "type": "string",
                              "description": "Determine which encryption method shall be used for the connection.",
                              "optional": true,
                              "defaultValue": "tls",
                              "enum": [
                                "insecure",
                                "starttls",
                                "tls"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The name of the endpoint.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "password": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Password for SMTP authentication",
                              "optional": true
                            },
                            "port": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                              "optional": true
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The address of the SMTP server."
                            },
                            "username": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Username for SMTP authentication",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-notifications-endpoints-smtp-name",
                      "path": "/cluster/notifications/endpoints/smtp/{name}",
                      "slug": "cluster-notifications-endpoints-smtp-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-notifications-endpoints-smtp-name",
                          "operationId": "delete-cluster-notifications-endpoints-smtp-name",
                          "path": "/cluster/notifications/endpoints/smtp/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete_smtp_endpoint",
                          "description": "Remove smtp endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/mapping/notifications",
                                    [
                                      "Mapping.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-notifications-endpoints-smtp-name",
                          "operationId": "get-cluster-notifications-endpoints-smtp-name",
                          "path": "/cluster/notifications/endpoints/smtp/{name}",
                          "httpMethod": "GET",
                          "name": "get_smtp_endpoint",
                          "description": "Return a specific smtp endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Audit"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "author": {
                                    "type": "string",
                                    "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                                    "optional": true
                                  },
                                  "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "optional": true
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 64
                                    }
                                  },
                                  "disable": {
                                    "type": "boolean",
                                    "description": "Disable this target",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "from-address": {
                                    "type": "string",
                                    "description": "`From` address for the mail"
                                  },
                                  "mailto": {
                                    "type": "array",
                                    "description": "List of email recipients",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "constraints": {
                                        "format": "email-or-username"
                                      }
                                    }
                                  },
                                  "mailto-user": {
                                    "type": "array",
                                    "description": "List of users",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "constraints": {
                                        "format": "pve-userid"
                                      }
                                    }
                                  },
                                  "mode": {
                                    "type": "string",
                                    "description": "Determine which encryption method shall be used for the connection.",
                                    "optional": true,
                                    "defaultValue": "tls",
                                    "enum": [
                                      "insecure",
                                      "starttls",
                                      "tls"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the endpoint.",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                                    "optional": true
                                  },
                                  "server": {
                                    "type": "string",
                                    "description": "The address of the SMTP server."
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "Username for SMTP authentication",
                                    "optional": true
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-notifications-endpoints-smtp-name",
                          "operationId": "put-cluster-notifications-endpoints-smtp-name",
                          "path": "/cluster/notifications/endpoints/smtp/{name}",
                          "httpMethod": "PUT",
                          "name": "update_smtp_endpoint",
                          "description": "Update existing smtp endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Sys.Modify"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.AccessNetwork"
                                        ]
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "author": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                                  "optional": true
                                },
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "delete": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "disable": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "from-address": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "`From` address for the mail",
                                  "optional": true
                                },
                                "mailto": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "List of email recipients",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "email-or-username"
                                    }
                                  }
                                },
                                "mailto-user": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "List of users",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-userid"
                                    }
                                  }
                                },
                                "mode": {
                                  "type": "string",
                                  "description": "Determine which encryption method shall be used for the connection.",
                                  "optional": true,
                                  "defaultValue": "tls",
                                  "enum": [
                                    "insecure",
                                    "starttls",
                                    "tls"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "password": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Password for SMTP authentication",
                                  "optional": true
                                },
                                "port": {
                                  "type": "integer",
                                  "typetext": "<integer>",
                                  "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                                  "optional": true
                                },
                                "server": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The address of the SMTP server.",
                                  "optional": true
                                },
                                "username": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Username for SMTP authentication",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "cluster-notifications-endpoints-webhook",
                  "path": "/cluster/notifications/endpoints/webhook",
                  "slug": "cluster-notifications-endpoints-webhook",
                  "label": "webhook",
                  "endpoints": [
                    {
                      "id": "get-cluster-notifications-endpoints-webhook",
                      "operationId": "get-cluster-notifications-endpoints-webhook",
                      "path": "/cluster/notifications/endpoints/webhook",
                      "httpMethod": "GET",
                      "name": "get_webhook_endpoints",
                      "description": "Returns a list of all webhook endpoints",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/notifications",
                                [
                                  "Mapping.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "body": {
                                  "type": "string",
                                  "description": "HTTP body, base64 encoded",
                                  "optional": true
                                },
                                "comment": {
                                  "type": "string",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "disable": {
                                  "type": "boolean",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "header": {
                                  "type": "array",
                                  "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                                  "optional": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "method": {
                                  "type": "string",
                                  "description": "HTTP method",
                                  "enum": [
                                    "post",
                                    "put",
                                    "get"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "Show if this entry was created by a user or was built-in",
                                  "enum": [
                                    "user-created",
                                    "builtin",
                                    "modified-builtin"
                                  ]
                                },
                                "secret": {
                                  "type": "array",
                                  "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                                  "optional": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "url": {
                                  "type": "string",
                                  "description": "Server URL"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-notifications-endpoints-webhook",
                      "operationId": "post-cluster-notifications-endpoints-webhook",
                      "path": "/cluster/notifications/endpoints/webhook",
                      "httpMethod": "POST",
                      "name": "create_webhook_endpoint",
                      "description": "Create a new webhook endpoint",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "and",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "or",
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Sys.Modify"
                                    ]
                                  ],
                                  [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.AccessNetwork"
                                    ]
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "body": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "HTTP body, base64 encoded",
                              "optional": true
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comment",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable this target",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "header": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "method": {
                              "type": "string",
                              "description": "HTTP method",
                              "enum": [
                                "post",
                                "put",
                                "get"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The name of the endpoint.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "secret": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "url": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Server URL"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-notifications-endpoints-webhook-name",
                      "path": "/cluster/notifications/endpoints/webhook/{name}",
                      "slug": "cluster-notifications-endpoints-webhook-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-notifications-endpoints-webhook-name",
                          "operationId": "delete-cluster-notifications-endpoints-webhook-name",
                          "path": "/cluster/notifications/endpoints/webhook/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete_webhook_endpoint",
                          "description": "Remove webhook endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/mapping/notifications",
                                    [
                                      "Mapping.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-notifications-endpoints-webhook-name",
                          "operationId": "get-cluster-notifications-endpoints-webhook-name",
                          "path": "/cluster/notifications/endpoints/webhook/{name}",
                          "httpMethod": "GET",
                          "name": "get_webhook_endpoint",
                          "description": "Return a specific webhook endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Audit"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "body": {
                                    "type": "string",
                                    "description": "HTTP body, base64 encoded",
                                    "optional": true
                                  },
                                  "comment": {
                                    "type": "string",
                                    "description": "Comment",
                                    "optional": true
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 64
                                    }
                                  },
                                  "disable": {
                                    "type": "boolean",
                                    "description": "Disable this target",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "header": {
                                    "type": "array",
                                    "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                                    "optional": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "method": {
                                    "type": "string",
                                    "description": "HTTP method",
                                    "enum": [
                                      "post",
                                      "put",
                                      "get"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the endpoint.",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  },
                                  "secret": {
                                    "type": "array",
                                    "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                                    "optional": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "Server URL"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-notifications-endpoints-webhook-name",
                          "operationId": "put-cluster-notifications-endpoints-webhook-name",
                          "path": "/cluster/notifications/endpoints/webhook/{name}",
                          "httpMethod": "PUT",
                          "name": "update_webhook_endpoint",
                          "description": "Update existing webhook endpoint",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Sys.Modify"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.AccessNetwork"
                                        ]
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "body": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "HTTP body, base64 encoded",
                                  "optional": true
                                },
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Comment",
                                  "optional": true
                                },
                                "delete": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-configid"
                                    }
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "disable": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Disable this target",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "header": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                                  "optional": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "method": {
                                  "type": "string",
                                  "description": "HTTP method",
                                  "optional": true,
                                  "enum": [
                                    "post",
                                    "put",
                                    "get"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the endpoint.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                },
                                "secret": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                                  "optional": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "url": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Server URL",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-notifications-matcher-field-values",
              "path": "/cluster/notifications/matcher-field-values",
              "slug": "cluster-notifications-matcher-field-values",
              "label": "matcher-field-values",
              "endpoints": [
                {
                  "id": "get-cluster-notifications-matcher-field-values",
                  "operationId": "get-cluster-notifications-matcher-field-values",
                  "path": "/cluster/notifications/matcher-field-values",
                  "httpMethod": "GET",
                  "name": "get_matcher_field_values",
                  "description": "Returns known notification metadata fields and their known values",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Modify"
                              ]
                            ],
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Audit"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "description": "Additional comment for this value.",
                              "optional": true
                            },
                            "field": {
                              "type": "string",
                              "description": "Field this value belongs to."
                            },
                            "value": {
                              "type": "string",
                              "description": "Notification metadata value known by the system."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-notifications-matcher-fields",
              "path": "/cluster/notifications/matcher-fields",
              "slug": "cluster-notifications-matcher-fields",
              "label": "matcher-fields",
              "endpoints": [
                {
                  "id": "get-cluster-notifications-matcher-fields",
                  "operationId": "get-cluster-notifications-matcher-fields",
                  "path": "/cluster/notifications/matcher-fields",
                  "httpMethod": "GET",
                  "name": "get_matcher_fields",
                  "description": "Returns known notification metadata fields",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Modify"
                              ]
                            ],
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Audit"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the field."
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-notifications-matchers",
              "path": "/cluster/notifications/matchers",
              "slug": "cluster-notifications-matchers",
              "label": "matchers",
              "endpoints": [
                {
                  "id": "get-cluster-notifications-matchers",
                  "operationId": "get-cluster-notifications-matchers",
                  "path": "/cluster/notifications/matchers",
                  "httpMethod": "GET",
                  "name": "get_matchers",
                  "description": "Returns a list of all matchers",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Modify"
                              ]
                            ],
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Audit"
                              ]
                            ],
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Use"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "description": "Comment",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "description": "Disable this matcher",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "invert-match": {
                              "type": "boolean",
                              "description": "Invert match of the whole matcher",
                              "optional": true
                            },
                            "match-calendar": {
                              "type": "array",
                              "description": "Match notification timestamp",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "match-field": {
                              "type": "array",
                              "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "match-severity": {
                              "type": "array",
                              "description": "Notification severities to match",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "mode": {
                              "type": "string",
                              "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                              "optional": true,
                              "defaultValue": "all",
                              "enum": [
                                "all",
                                "any"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the matcher.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "origin": {
                              "type": "string",
                              "description": "Show if this entry was created by a user or was built-in",
                              "enum": [
                                "user-created",
                                "builtin",
                                "modified-builtin"
                              ]
                            },
                            "target": {
                              "type": "array",
                              "description": "Targets to notify on match",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "pve-configid"
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-notifications-matchers",
                  "operationId": "post-cluster-notifications-matchers",
                  "path": "/cluster/notifications/matchers",
                  "httpMethod": "POST",
                  "name": "create_matcher",
                  "description": "Create a new matcher",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/mapping/notifications",
                            [
                              "Mapping.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Comment",
                          "optional": true
                        },
                        "disable": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Disable this matcher",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "invert-match": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Invert match of the whole matcher",
                          "optional": true
                        },
                        "match-calendar": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "Match notification timestamp",
                          "optional": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "match-field": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                          "optional": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "match-severity": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "Notification severities to match",
                          "optional": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "mode": {
                          "type": "string",
                          "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                          "optional": true,
                          "defaultValue": "all",
                          "enum": [
                            "all",
                            "any"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Name of the matcher.",
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "target": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "Targets to notify on match",
                          "optional": true,
                          "items": {
                            "type": "string",
                            "constraints": {
                              "format": "pve-configid"
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-notifications-matchers-name",
                  "path": "/cluster/notifications/matchers/{name}",
                  "slug": "cluster-notifications-matchers-name",
                  "label": "{name}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-notifications-matchers-name",
                      "operationId": "delete-cluster-notifications-matchers-name",
                      "path": "/cluster/notifications/matchers/{name}",
                      "httpMethod": "DELETE",
                      "name": "delete_matcher",
                      "description": "Remove matcher",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/notifications",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-notifications-matchers-name",
                      "operationId": "get-cluster-notifications-matchers-name",
                      "path": "/cluster/notifications/matchers/{name}",
                      "httpMethod": "GET",
                      "name": "get_matcher",
                      "description": "Return a specific matcher",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Modify"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/mapping/notifications",
                                  [
                                    "Mapping.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "comment": {
                                "type": "string",
                                "description": "Comment",
                                "optional": true
                              },
                              "digest": {
                                "type": "string",
                                "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                "optional": true,
                                "constraints": {
                                  "maxLength": 64
                                }
                              },
                              "disable": {
                                "type": "boolean",
                                "description": "Disable this matcher",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "invert-match": {
                                "type": "boolean",
                                "description": "Invert match of the whole matcher",
                                "optional": true
                              },
                              "match-calendar": {
                                "type": "array",
                                "description": "Match notification timestamp",
                                "optional": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "match-field": {
                                "type": "array",
                                "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                                "optional": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "match-severity": {
                                "type": "array",
                                "description": "Notification severities to match",
                                "optional": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "mode": {
                                "type": "string",
                                "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                                "optional": true,
                                "defaultValue": "all",
                                "enum": [
                                  "all",
                                  "any"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the matcher.",
                                "constraints": {
                                  "format": "pve-configid"
                                }
                              },
                              "target": {
                                "type": "array",
                                "description": "Targets to notify on match",
                                "optional": true,
                                "items": {
                                  "type": "string",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-notifications-matchers-name",
                      "operationId": "put-cluster-notifications-matchers-name",
                      "path": "/cluster/notifications/matchers/{name}",
                      "httpMethod": "PUT",
                      "name": "update_matcher",
                      "description": "Update existing matcher",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/mapping/notifications",
                                [
                                  "Mapping.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comment",
                              "optional": true
                            },
                            "delete": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "pve-configid"
                                }
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "disable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable this matcher",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "invert-match": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Invert match of the whole matcher",
                              "optional": true
                            },
                            "match-calendar": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "Match notification timestamp",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "match-field": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "match-severity": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "Notification severities to match",
                              "optional": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "mode": {
                              "type": "string",
                              "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                              "optional": true,
                              "defaultValue": "all",
                              "enum": [
                                "all",
                                "any"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Name of the matcher.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "target": {
                              "type": "array",
                              "typetext": "<array>",
                              "description": "Targets to notify on match",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "constraints": {
                                  "format": "pve-configid"
                                }
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-notifications-targets",
              "path": "/cluster/notifications/targets",
              "slug": "cluster-notifications-targets",
              "label": "targets",
              "endpoints": [
                {
                  "id": "get-cluster-notifications-targets",
                  "operationId": "get-cluster-notifications-targets",
                  "path": "/cluster/notifications/targets",
                  "httpMethod": "GET",
                  "name": "get_all_targets",
                  "description": "Returns a list of all entities that can be used as notification targets.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Modify"
                              ]
                            ],
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Audit"
                              ]
                            ],
                            [
                              "perm",
                              "/mapping/notifications",
                              [
                                "Mapping.Use"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "description": "Comment",
                              "optional": true
                            },
                            "disable": {
                              "type": "boolean",
                              "description": "Show if this target is disabled",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the target.",
                              "constraints": {
                                "format": "pve-configid"
                              }
                            },
                            "origin": {
                              "type": "string",
                              "description": "Show if this entry was created by a user or was built-in",
                              "enum": [
                                "user-created",
                                "builtin",
                                "modified-builtin"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the target.",
                              "enum": [
                                "sendmail",
                                "gotify",
                                "smtp",
                                "webhook"
                              ]
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-notifications-targets-name",
                  "path": "/cluster/notifications/targets/{name}",
                  "slug": "cluster-notifications-targets-name",
                  "label": "{name}",
                  "endpoints": [],
                  "children": [
                    {
                      "id": "cluster-notifications-targets-name-test",
                      "path": "/cluster/notifications/targets/{name}/test",
                      "slug": "cluster-notifications-targets-name-test",
                      "label": "test",
                      "endpoints": [
                        {
                          "id": "post-cluster-notifications-targets-name-test",
                          "operationId": "post-cluster-notifications-targets-name-test",
                          "path": "/cluster/notifications/targets/{name}/test",
                          "httpMethod": "POST",
                          "name": "test_target",
                          "description": "Send a test notification to a provided target.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "or",
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Modify"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Audit"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/mapping/notifications",
                                      [
                                        "Mapping.Use"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Name of the target.",
                                  "constraints": {
                                    "format": "pve-configid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-options",
          "path": "/cluster/options",
          "slug": "cluster-options",
          "label": "options",
          "endpoints": [
            {
              "id": "get-cluster-options",
              "operationId": "get-cluster-options",
              "path": "/cluster/options",
              "httpMethod": "GET",
              "name": "get_options",
              "description": "Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all",
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "object"
                  }
                }
              ]
            },
            {
              "id": "put-cluster-options",
              "operationId": "put-cluster-options",
              "path": "/cluster/options",
              "httpMethod": "PUT",
              "name": "set_options",
              "description": "Set datacenter options.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Modify"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "bwlimit": {
                      "type": "string",
                      "typetext": "[clone=<LIMIT>] [,default=<LIMIT>] [,migration=<LIMIT>] [,move=<LIMIT>] [,restore=<LIMIT>]",
                      "description": "Set I/O bandwidth limit for various operations (in KiB/s).",
                      "optional": true
                    },
                    "consent-text": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Consent text that is displayed before logging in.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 65536
                      }
                    },
                    "console": {
                      "type": "string",
                      "description": "Select the default Console viewer. You can either use the builtin java applet (VNC; deprecated and maps to html5), an external virt-viewer comtatible application (SPICE), an HTML5 based vnc viewer (noVNC), or an HTML5 based console client (xtermjs). If the selected viewer is not available (e.g. SPICE not activated for the VM), the fallback is noVNC.",
                      "optional": true,
                      "enum": [
                        "applet",
                        "vv",
                        "html5",
                        "xtermjs"
                      ]
                    },
                    "crs": {
                      "type": "string",
                      "typetext": "[ha=<basic|static>] [,ha-rebalance-on-start=<1|0>]",
                      "description": "Cluster resource scheduling settings.",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "A list of settings you want to delete.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-configid-list"
                      }
                    },
                    "description": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Datacenter description. Shown in the web-interface datacenter notes panel. This is saved as comment inside the configuration file.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 65536
                      }
                    },
                    "email_from": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Specify email address to send notification from (default is root@$hostname)",
                      "optional": true,
                      "constraints": {
                        "format": "email-opt"
                      }
                    },
                    "fencing": {
                      "type": "string",
                      "description": "Set the fencing mode of the HA cluster. Hardware mode needs a valid configuration of fence devices in /etc/pve/ha/fence.cfg. With both all two modes are used.\n\nWARNING: 'hardware' and 'both' are EXPERIMENTAL & WIP",
                      "optional": true,
                      "defaultValue": "watchdog",
                      "enum": [
                        "watchdog",
                        "hardware",
                        "both"
                      ]
                    },
                    "ha": {
                      "type": "string",
                      "typetext": "shutdown_policy=<enum>",
                      "description": "Cluster wide HA settings.",
                      "optional": true
                    },
                    "http_proxy": {
                      "type": "string",
                      "description": "Specify external http proxy which is used for downloads (example: 'http://username:password@host:port/')",
                      "optional": true,
                      "constraints": {
                        "pattern": "http://.*"
                      }
                    },
                    "keyboard": {
                      "type": "string",
                      "description": "Default keybord layout for vnc server.",
                      "optional": true,
                      "enum": [
                        "de",
                        "de-ch",
                        "da",
                        "en-gb",
                        "en-us",
                        "es",
                        "fi",
                        "fr",
                        "fr-be",
                        "fr-ca",
                        "fr-ch",
                        "hu",
                        "is",
                        "it",
                        "ja",
                        "lt",
                        "mk",
                        "nl",
                        "no",
                        "pl",
                        "pt",
                        "pt-br",
                        "sv",
                        "sl",
                        "tr"
                      ]
                    },
                    "language": {
                      "type": "string",
                      "description": "Default GUI language.",
                      "optional": true,
                      "enum": [
                        "ar",
                        "ca",
                        "da",
                        "de",
                        "en",
                        "es",
                        "eu",
                        "fa",
                        "fr",
                        "hr",
                        "he",
                        "it",
                        "ja",
                        "ka",
                        "kr",
                        "nb",
                        "nl",
                        "nn",
                        "pl",
                        "pt_BR",
                        "ru",
                        "sl",
                        "sv",
                        "tr",
                        "ukr",
                        "zh_CN",
                        "zh_TW"
                      ]
                    },
                    "mac_prefix": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Prefix for the auto-generated MAC addresses of virtual guests. The default 'BC:24:11' is the OUI assigned by the IEEE to Proxmox Server Solutions GmbH for a 24-bit large MAC block. You're allowed to use this in local networks, i.e., those not directly reachable by the public (e.g., in a LAN or behind NAT).",
                      "verboseDescription": "Prefix for the auto-generated MAC addresses of virtual guests. The default `BC:24:11` is the Organizationally Unique Identifier (OUI) assigned by the IEEE to Proxmox Server Solutions GmbH for a MAC Address Block Large (MA-L). You're allowed to use this in local networks, i.e., those not directly reachable by the public (e.g., in a LAN or NAT/Masquerading).\n \nNote that when you run multiple cluster that (partially) share the networks of their virtual guests, it's highly recommended that you extend the default MAC prefix, or generate a custom (valid) one, to reduce the chance of MAC collisions. For example, add a separate extra hexadecimal to the Proxmox OUI for each cluster, like `BC:24:11:0` for the first, `BC:24:11:1` for the second, and so on.\n Alternatively, you can also separate the networks of the guests logically, e.g., by using VLANs.\n\nFor publicly accessible guests it's recommended that you get your own https://standards.ieee.org/products-programs/regauth/[OUI from the IEEE] registered or coordinate with your, or your hosting providers, network admins.",
                      "optional": true,
                      "defaultValue": "BC:24:11",
                      "constraints": {
                        "format": "mac-prefix"
                      }
                    },
                    "max_workers": {
                      "type": "integer",
                      "typetext": "<integer> (1 - N)",
                      "description": "Defines how many workers (per node) are maximal started  on actions like 'stopall VMs' or task from the ha-manager.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1
                      }
                    },
                    "migration": {
                      "type": "string",
                      "typetext": "[type=]<secure|insecure> [,network=<CIDR>]",
                      "description": "For cluster wide migration settings.",
                      "optional": true
                    },
                    "migration_unsecure": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Migration is secure using SSH tunnel by default. For secure private networks you can disable it to speed up migration. Deprecated, use the 'migration' property instead!",
                      "optional": true
                    },
                    "next-id": {
                      "type": "string",
                      "typetext": "[lower=<integer>] [,upper=<integer>]",
                      "description": "Control the range for the free VMID auto-selection pool.",
                      "optional": true
                    },
                    "notify": {
                      "type": "string",
                      "typetext": "[fencing=<always|never>] [,package-updates=<auto|always|never>] [,replication=<always|never>] [,target-fencing=<TARGET>] [,target-package-updates=<TARGET>] [,target-replication=<TARGET>]",
                      "description": "Cluster-wide notification settings.",
                      "optional": true
                    },
                    "registered-tags": {
                      "type": "string",
                      "typetext": "<tag>[;<tag>...]",
                      "description": "A list of tags that require a `Sys.Modify` on '/' to set and delete. Tags set here that are also in 'user-tag-access' also require `Sys.Modify`.",
                      "optional": true,
                      "constraints": {
                        "pattern": "(?:(?^i:[a-z0-9_][a-z0-9_\\-\\+\\.]*);)*(?^i:[a-z0-9_][a-z0-9_\\-\\+\\.]*)"
                      }
                    },
                    "replication": {
                      "type": "string",
                      "typetext": "[type=]<secure|insecure> [,network=<CIDR>]",
                      "description": "For cluster wide replication settings.",
                      "optional": true
                    },
                    "tag-style": {
                      "type": "string",
                      "typetext": "[case-sensitive=<1|0>] [,color-map=<tag>:<hex-color>[:<hex-color-for-text>][;<tag>=...]] [,ordering=<config|alphabetical>] [,shape=<enum>]",
                      "description": "Tag style options.",
                      "optional": true
                    },
                    "u2f": {
                      "type": "string",
                      "typetext": "[appid=<APPID>] [,origin=<URL>]",
                      "description": "u2f",
                      "optional": true
                    },
                    "user-tag-access": {
                      "type": "string",
                      "typetext": "[user-allow=<enum>] [,user-allow-list=<tag>[;<tag>...]]",
                      "description": "Privilege options for user-settable tags",
                      "optional": true
                    },
                    "webauthn": {
                      "type": "string",
                      "typetext": "[allow-subdomains=<1|0>] [,id=<DOMAINNAME>] [,origin=<URL>] [,rp=<RELYING_PARTY>]",
                      "description": "webauthn configuration",
                      "optional": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "cluster-replication",
          "path": "/cluster/replication",
          "slug": "cluster-replication",
          "label": "replication",
          "endpoints": [
            {
              "id": "get-cluster-replication",
              "operationId": "get-cluster-replication",
              "path": "/cluster/replication",
              "httpMethod": "GET",
              "name": "index",
              "description": "List replication jobs.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "description": "Will only return replication jobs for which the calling user has VM.Audit permission on /vms/<vmid>.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{id}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "post-cluster-replication",
              "operationId": "post-cluster-replication",
              "path": "/cluster/replication",
              "httpMethod": "POST",
              "name": "create",
              "description": "Create a new replication job",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Description.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 4096
                      }
                    },
                    "disable": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Flag to disable/deactivate the entry.",
                      "optional": true
                    },
                    "id": {
                      "type": "string",
                      "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                      "constraints": {
                        "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                        "format": "pve-replication-job-id"
                      }
                    },
                    "rate": {
                      "type": "number",
                      "typetext": "<number> (1 - N)",
                      "description": "Rate limit in mbps (megabytes per second) as floating point number.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1
                      }
                    },
                    "remove_job": {
                      "type": "string",
                      "description": "Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.",
                      "optional": true,
                      "enum": [
                        "local",
                        "full"
                      ]
                    },
                    "schedule": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Storage replication schedule. The format is a subset of `systemd` calendar events.",
                      "optional": true,
                      "defaultValue": "*/15",
                      "constraints": {
                        "maxLength": 128,
                        "format": "pve-calendar-event"
                      }
                    },
                    "source": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "For internal use, to detect if the guest was stolen.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-node"
                      }
                    },
                    "target": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Target node.",
                      "optional": false,
                      "constraints": {
                        "format": "pve-node"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Section type.",
                      "enum": [
                        "local"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-replication-id",
              "path": "/cluster/replication/{id}",
              "slug": "cluster-replication-id",
              "label": "{id}",
              "endpoints": [
                {
                  "id": "delete-cluster-replication-id",
                  "operationId": "delete-cluster-replication-id",
                  "path": "/cluster/replication/{id}",
                  "httpMethod": "DELETE",
                  "name": "delete",
                  "description": "Mark replication job for removal.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Will remove the jobconfig entry, but will not cleanup.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "id": {
                          "type": "string",
                          "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                          "constraints": {
                            "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                            "format": "pve-replication-job-id"
                          }
                        },
                        "keep": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Keep replicated data at target (do not remove).",
                          "optional": true,
                          "defaultValue": 0
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-cluster-replication-id",
                  "operationId": "get-cluster-replication-id",
                  "path": "/cluster/replication/{id}",
                  "httpMethod": "GET",
                  "name": "read",
                  "description": "Read replication job configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Requires the VM.Audit permission on /vms/<vmid>.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                          "constraints": {
                            "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                            "format": "pve-replication-job-id"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object"
                      }
                    }
                  ]
                },
                {
                  "id": "put-cluster-replication-id",
                  "operationId": "put-cluster-replication-id",
                  "path": "/cluster/replication/{id}",
                  "httpMethod": "PUT",
                  "name": "update",
                  "description": "Update replication job configuration.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096
                          }
                        },
                        "delete": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A list of settings you want to delete.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 4096,
                            "format": "pve-configid-list"
                          }
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "disable": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Flag to disable/deactivate the entry.",
                          "optional": true
                        },
                        "id": {
                          "type": "string",
                          "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                          "constraints": {
                            "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                            "format": "pve-replication-job-id"
                          }
                        },
                        "rate": {
                          "type": "number",
                          "typetext": "<number> (1 - N)",
                          "description": "Rate limit in mbps (megabytes per second) as floating point number.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "remove_job": {
                          "type": "string",
                          "description": "Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.",
                          "optional": true,
                          "enum": [
                            "local",
                            "full"
                          ]
                        },
                        "schedule": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Storage replication schedule. The format is a subset of `systemd` calendar events.",
                          "optional": true,
                          "defaultValue": "*/15",
                          "constraints": {
                            "maxLength": 128,
                            "format": "pve-calendar-event"
                          }
                        },
                        "source": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "For internal use, to detect if the guest was stolen.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        },
        {
          "id": "cluster-resources",
          "path": "/cluster/resources",
          "slug": "cluster-resources",
          "label": "resources",
          "endpoints": [
            {
              "id": "get-cluster-resources",
              "operationId": "get-cluster-resources",
              "path": "/cluster/resources",
              "httpMethod": "GET",
              "name": "resources",
              "description": "Resources index (cluster wide).",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Resource type.",
                      "optional": true,
                      "enum": [
                        "vm",
                        "storage",
                        "node",
                        "sdn"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cgroup-mode": {
                          "type": "integer",
                          "description": "The cgroup mode the node operates under (for type 'node').",
                          "optional": true
                        },
                        "content": {
                          "type": "string",
                          "description": "Allowed storage content types (for type 'storage').",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-content-list"
                          }
                        },
                        "cpu": {
                          "type": "number",
                          "description": "CPU utilization (for types 'node', 'qemu' and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          },
                          "metadata": {
                            "renderer": "fraction_as_percentage"
                          }
                        },
                        "disk": {
                          "type": "integer",
                          "description": "Used disk space in bytes (for type 'storage'), used root image space for VMs (for types 'qemu' and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          },
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "diskread": {
                          "type": "integer",
                          "description": "The amount of bytes the guest read from its block devices since the guest was started. This info is not available for all storage types. (for types 'qemu' and 'lxc')",
                          "optional": true,
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "diskwrite": {
                          "type": "integer",
                          "description": "The amount of bytes the guest wrote to its block devices since the guest was started. This info is not available for all storage types. (for types 'qemu' and 'lxc')",
                          "optional": true,
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "hastate": {
                          "type": "string",
                          "description": "HA service status (for HA managed VMs).",
                          "optional": true
                        },
                        "id": {
                          "type": "string",
                          "description": "Resource id."
                        },
                        "level": {
                          "type": "string",
                          "description": "Support level (for type 'node').",
                          "optional": true
                        },
                        "lock": {
                          "type": "string",
                          "description": "The guest's current config lock (for types 'qemu' and 'lxc')",
                          "optional": true
                        },
                        "maxcpu": {
                          "type": "number",
                          "description": "Number of available CPUs (for types 'node', 'qemu' and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "maxdisk": {
                          "type": "integer",
                          "description": "Storage size in bytes (for type 'storage'), root image size for VMs (for types 'qemu' and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          },
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "maxmem": {
                          "type": "integer",
                          "description": "Number of available memory in bytes (for types 'node', 'qemu' and 'lxc').",
                          "optional": true,
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "mem": {
                          "type": "integer",
                          "description": "Used memory in bytes (for types 'node', 'qemu' and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          },
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "memhost": {
                          "type": "integer",
                          "description": "Used memory in bytes from the point of view of the host (for types 'qemu').",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          },
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the resource.",
                          "optional": true
                        },
                        "netin": {
                          "type": "integer",
                          "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started. (for types 'qemu' and 'lxc')",
                          "optional": true,
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "netout": {
                          "type": "integer",
                          "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started. (for types 'qemu' and 'lxc')",
                          "optional": true,
                          "metadata": {
                            "renderer": "bytes"
                          }
                        },
                        "node": {
                          "type": "string",
                          "description": "The cluster node name (for types 'node', 'storage', 'qemu', and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "plugintype": {
                          "type": "string",
                          "description": "More specific type, if available.",
                          "optional": true
                        },
                        "pool": {
                          "type": "string",
                          "description": "The pool name (for types 'pool', 'qemu' and 'lxc').",
                          "optional": true
                        },
                        "status": {
                          "type": "string",
                          "description": "Resource type dependent status.",
                          "optional": true
                        },
                        "storage": {
                          "type": "string",
                          "description": "The storage identifier (for type 'storage').",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "tags": {
                          "type": "string",
                          "description": "The guest's tags (for types 'qemu' and 'lxc')",
                          "optional": true
                        },
                        "template": {
                          "type": "boolean",
                          "description": "Determines if the guest is a template. (for types 'qemu' and 'lxc')",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "type": {
                          "type": "string",
                          "description": "Resource type.",
                          "enum": [
                            "node",
                            "storage",
                            "pool",
                            "qemu",
                            "lxc",
                            "openvz",
                            "sdn"
                          ]
                        },
                        "uptime": {
                          "type": "integer",
                          "description": "Uptime of node or virtual guest in seconds (for types 'node', 'qemu' and 'lxc').",
                          "optional": true,
                          "metadata": {
                            "renderer": "duration"
                          }
                        },
                        "vmid": {
                          "type": "integer",
                          "description": "The numerical vmid (for types 'qemu' and 'lxc').",
                          "optional": true,
                          "constraints": {
                            "minimum": 100,
                            "maximum": 999999999,
                            "format": "pve-vmid"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "cluster-sdn",
          "path": "/cluster/sdn",
          "slug": "cluster-sdn",
          "label": "sdn",
          "endpoints": [
            {
              "id": "get-cluster-sdn",
              "operationId": "get-cluster-sdn",
              "path": "/cluster/sdn",
              "httpMethod": "GET",
              "name": "index",
              "description": "Directory index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/sdn",
                        [
                          "SDN.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{id}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": "put-cluster-sdn",
              "operationId": "put-cluster-sdn",
              "path": "/cluster/sdn",
              "httpMethod": "PUT",
              "name": "reload",
              "description": "Apply sdn controller changes && reload.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/sdn",
                        [
                          "SDN.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "lock-token": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "the token for unlocking the global SDN configuration",
                      "optional": true
                    },
                    "release-lock": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "When lock-token has been provided and configuration successfully commited, release the lock automatically afterwards",
                      "optional": true,
                      "defaultValue": 1
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "string"
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "cluster-sdn-controllers",
              "path": "/cluster/sdn/controllers",
              "slug": "cluster-sdn-controllers",
              "label": "controllers",
              "endpoints": [
                {
                  "id": "get-cluster-sdn-controllers",
                  "operationId": "get-cluster-sdn-controllers",
                  "path": "/cluster/sdn/controllers",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "SDN controllers index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/controllers/<controller>'",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "pending": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Display pending config.",
                          "optional": true
                        },
                        "running": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Display running config.",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Only list sdn controllers of specific type",
                          "optional": true,
                          "enum": [
                            "bgp",
                            "evpn",
                            "faucet",
                            "isis"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "controller": {
                              "type": "string"
                            },
                            "pending": {
                              "type": "boolean",
                              "optional": true
                            },
                            "state": {
                              "type": "string",
                              "optional": true
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{controller}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-sdn-controllers",
                  "operationId": "post-cluster-sdn-controllers",
                  "path": "/cluster/sdn/controllers",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new sdn controller object.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn/controllers",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "asn": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 4294967296)",
                          "description": "autonomous system number",
                          "optional": true,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 4294967296
                          }
                        },
                        "bgp-multipath-as-path-relax": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "optional": true
                        },
                        "controller": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The SDN controller object identifier.",
                          "constraints": {
                            "format": "pve-sdn-controller-id"
                          }
                        },
                        "ebgp": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable ebgp. (remote-as external)",
                          "optional": true
                        },
                        "ebgp-multihop": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "optional": true
                        },
                        "fabric": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "SDN fabric to use as underlay for this EVPN controller.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-sdn-fabric-id"
                          }
                        },
                        "isis-domain": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "ISIS domain.",
                          "optional": true
                        },
                        "isis-ifaces": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "ISIS interface.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface-list"
                          }
                        },
                        "isis-net": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "ISIS network entity title.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-sdn-isis-net"
                          }
                        },
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        },
                        "loopback": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "source loopback interface.",
                          "optional": true
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "peers": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "peers address list.",
                          "optional": true,
                          "constraints": {
                            "format": "ip-list"
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "Plugin type.",
                          "enum": [
                            "bgp",
                            "evpn",
                            "faucet",
                            "isis"
                          ],
                          "constraints": {
                            "format": "pve-configid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-sdn-controllers-controller",
                  "path": "/cluster/sdn/controllers/{controller}",
                  "slug": "cluster-sdn-controllers-controller",
                  "label": "{controller}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-sdn-controllers-controller",
                      "operationId": "delete-cluster-sdn-controllers-controller",
                      "path": "/cluster/sdn/controllers/{controller}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete sdn controller object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/controllers",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "controller": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN controller object identifier.",
                              "constraints": {
                                "format": "pve-sdn-controller-id"
                              }
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-sdn-controllers-controller",
                      "operationId": "get-cluster-sdn-controllers-controller",
                      "path": "/cluster/sdn/controllers/{controller}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read sdn controller configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/controllers/{controller}",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "controller": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN controller object identifier.",
                              "constraints": {
                                "format": "pve-sdn-controller-id"
                              }
                            },
                            "pending": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display pending config.",
                              "optional": true
                            },
                            "running": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display running config.",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-sdn-controllers-controller",
                      "operationId": "put-cluster-sdn-controllers-controller",
                      "path": "/cluster/sdn/controllers/{controller}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update sdn controller object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/controllers",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "asn": {
                              "type": "integer",
                              "typetext": "<integer> (0 - 4294967296)",
                              "description": "autonomous system number",
                              "optional": true,
                              "constraints": {
                                "minimum": 0,
                                "maximum": 4294967296
                              }
                            },
                            "bgp-multipath-as-path-relax": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "optional": true
                            },
                            "controller": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN controller object identifier.",
                              "constraints": {
                                "format": "pve-sdn-controller-id"
                              }
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "ebgp": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable ebgp. (remote-as external)",
                              "optional": true
                            },
                            "ebgp-multihop": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "optional": true
                            },
                            "fabric": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "SDN fabric to use as underlay for this EVPN controller.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-sdn-fabric-id"
                              }
                            },
                            "isis-domain": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "ISIS domain.",
                              "optional": true
                            },
                            "isis-ifaces": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "ISIS interface.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "isis-net": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "ISIS network entity title.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-sdn-isis-net"
                              }
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "loopback": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "source loopback interface.",
                              "optional": true
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "peers": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "peers address list.",
                              "optional": true,
                              "constraints": {
                                "format": "ip-list"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-sdn-dns",
              "path": "/cluster/sdn/dns",
              "slug": "cluster-sdn-dns",
              "label": "dns",
              "endpoints": [
                {
                  "id": "get-cluster-sdn-dns",
                  "operationId": "get-cluster-sdn-dns",
                  "path": "/cluster/sdn/dns",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "SDN dns index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/dns/<dns>'",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Only list sdn dns of specific type",
                          "optional": true,
                          "enum": [
                            "powerdns"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dns": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{dns}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-sdn-dns",
                  "operationId": "post-cluster-sdn-dns",
                  "path": "/cluster/sdn/dns",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new sdn dns object.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn/dns",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "dns": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The SDN dns object identifier.",
                          "constraints": {
                            "format": "pve-sdn-dns-id"
                          }
                        },
                        "fingerprint": {
                          "type": "string",
                          "description": "Certificate SHA 256 fingerprint.",
                          "optional": true,
                          "constraints": {
                            "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                          }
                        },
                        "key": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": false
                        },
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        },
                        "reversemaskv6": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "optional": true
                        },
                        "reversev6mask": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "optional": true
                        },
                        "ttl": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Plugin type.",
                          "enum": [
                            "powerdns"
                          ],
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "url": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-sdn-dns-dns",
                  "path": "/cluster/sdn/dns/{dns}",
                  "slug": "cluster-sdn-dns-dns",
                  "label": "{dns}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-sdn-dns-dns",
                      "operationId": "delete-cluster-sdn-dns-dns",
                      "path": "/cluster/sdn/dns/{dns}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete sdn dns object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/dns",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "dns": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN dns object identifier.",
                              "constraints": {
                                "format": "pve-sdn-dns-id"
                              }
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-sdn-dns-dns",
                      "operationId": "get-cluster-sdn-dns-dns",
                      "path": "/cluster/sdn/dns/{dns}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read sdn dns configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/dns/{dns}",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "dns": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN dns object identifier.",
                              "constraints": {
                                "format": "pve-sdn-dns-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-sdn-dns-dns",
                      "operationId": "put-cluster-sdn-dns-dns",
                      "path": "/cluster/sdn/dns/{dns}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update sdn dns object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/dns",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "dns": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN dns object identifier.",
                              "constraints": {
                                "format": "pve-sdn-dns-id"
                              }
                            },
                            "fingerprint": {
                              "type": "string",
                              "description": "Certificate SHA 256 fingerprint.",
                              "optional": true,
                              "constraints": {
                                "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                              }
                            },
                            "key": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "reversemaskv6": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "optional": true
                            },
                            "ttl": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "optional": true
                            },
                            "url": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "cluster-sdn-fabrics",
              "path": "/cluster/sdn/fabrics",
              "slug": "cluster-sdn-fabrics",
              "label": "fabrics",
              "endpoints": [
                {
                  "id": "get-cluster-sdn-fabrics",
                  "operationId": "get-cluster-sdn-fabrics",
                  "path": "/cluster/sdn/fabrics",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "SDN Fabrics Index",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn/fabrics",
                            [
                              "SDN.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subdir": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{subdir}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-sdn-fabrics-all",
                  "path": "/cluster/sdn/fabrics/all",
                  "slug": "cluster-sdn-fabrics-all",
                  "label": "all",
                  "endpoints": [
                    {
                      "id": "get-cluster-sdn-fabrics-all",
                      "operationId": "get-cluster-sdn-fabrics-all",
                      "path": "/cluster/sdn/fabrics/all",
                      "httpMethod": "GET",
                      "name": "list_all",
                      "description": "SDN Fabrics Index",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "description": "Only list fabrics where you have 'SDN.Audit' or 'SDN.Allocate' permissions on\n'/sdn/fabrics/<fabric>', only list nodes where you have 'Sys.Audit' or 'Sys.Modify' on /nodes/<node_id>",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "pending": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display pending config.",
                              "optional": true
                            },
                            "running": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display running config.",
                              "optional": true
                            }
                          }
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "fabrics": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "area": {
                                      "type": "string",
                                      "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                                      "optional": true,
                                      "metadata": {
                                        "instanceTypes": [
                                          "ospf"
                                        ]
                                      }
                                    },
                                    "csnp_interval": {
                                      "type": "number",
                                      "description": "The csnp_interval property for Openfabric",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 1,
                                        "maximum": 600
                                      },
                                      "metadata": {
                                        "instanceTypes": [
                                          "openfabric"
                                        ]
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "hello_interval": {
                                      "type": "number",
                                      "description": "The hello_interval property for Openfabric",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 1,
                                        "maximum": 600
                                      },
                                      "metadata": {
                                        "instanceTypes": [
                                          "openfabric"
                                        ]
                                      }
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "Identifier for SDN fabrics",
                                      "constraints": {
                                        "format": "pve-sdn-fabric-id"
                                      }
                                    },
                                    "ip6_prefix": {
                                      "type": "string",
                                      "description": "The IP prefix for Node IPs",
                                      "optional": true,
                                      "constraints": {
                                        "format": "CIDR"
                                      }
                                    },
                                    "ip_prefix": {
                                      "type": "string",
                                      "description": "The IP prefix for Node IPs",
                                      "optional": true,
                                      "constraints": {
                                        "format": "CIDR"
                                      }
                                    },
                                    "lock-token": {
                                      "type": "string",
                                      "description": "the token for unlocking the global SDN configuration",
                                      "optional": true
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "Type of configuration entry in an SDN Fabric section config",
                                      "enum": [
                                        "openfabric",
                                        "ospf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "nodes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "digest": {
                                      "type": "string",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "fabric_id": {
                                      "type": "string",
                                      "description": "Identifier for SDN fabrics",
                                      "constraints": {
                                        "format": "pve-sdn-fabric-id"
                                      }
                                    },
                                    "interfaces": {
                                      "type": "array"
                                    },
                                    "ip": {
                                      "type": "string",
                                      "description": "IPv4 address for this node",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ipv4"
                                      }
                                    },
                                    "ip6": {
                                      "type": "string",
                                      "description": "IPv6 address for this node",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ipv6"
                                      }
                                    },
                                    "lock-token": {
                                      "type": "string",
                                      "description": "the token for unlocking the global SDN configuration",
                                      "optional": true
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "description": "Identifier for nodes in an SDN fabric",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "Type of configuration entry in an SDN Fabric section config",
                                      "enum": [
                                        "openfabric",
                                        "ospf"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "cluster-sdn-fabrics-fabric",
                  "path": "/cluster/sdn/fabrics/fabric",
                  "slug": "cluster-sdn-fabrics-fabric",
                  "label": "fabric",
                  "endpoints": [
                    {
                      "id": "get-cluster-sdn-fabrics-fabric",
                      "operationId": "get-cluster-sdn-fabrics-fabric",
                      "path": "/cluster/sdn/fabrics/fabric",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "SDN Fabrics Index",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/fabrics/<fabric>'",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "pending": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display pending config.",
                              "optional": true
                            },
                            "running": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display running config.",
                              "optional": true
                            }
                          }
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "area": {
                                  "type": "string",
                                  "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                                  "optional": true,
                                  "metadata": {
                                    "instanceTypes": [
                                      "ospf"
                                    ]
                                  }
                                },
                                "csnp_interval": {
                                  "type": "number",
                                  "description": "The csnp_interval property for Openfabric",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 600
                                  },
                                  "metadata": {
                                    "instanceTypes": [
                                      "openfabric"
                                    ]
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "hello_interval": {
                                  "type": "number",
                                  "description": "The hello_interval property for Openfabric",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 600
                                  },
                                  "metadata": {
                                    "instanceTypes": [
                                      "openfabric"
                                    ]
                                  }
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                },
                                "ip6_prefix": {
                                  "type": "string",
                                  "description": "The IP prefix for Node IPs",
                                  "optional": true,
                                  "constraints": {
                                    "format": "CIDR"
                                  }
                                },
                                "ip_prefix": {
                                  "type": "string",
                                  "description": "The IP prefix for Node IPs",
                                  "optional": true,
                                  "constraints": {
                                    "format": "CIDR"
                                  }
                                },
                                "lock-token": {
                                  "type": "string",
                                  "description": "the token for unlocking the global SDN configuration",
                                  "optional": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Type of configuration entry in an SDN Fabric section config",
                                  "enum": [
                                    "openfabric",
                                    "ospf"
                                  ]
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{id}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-cluster-sdn-fabrics-fabric",
                      "operationId": "post-cluster-sdn-fabrics-fabric",
                      "path": "/cluster/sdn/fabrics/fabric",
                      "httpMethod": "POST",
                      "name": "add_fabric",
                      "description": "Add a fabric",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/fabrics",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "area": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                              "optional": true,
                              "metadata": {
                                "instanceTypes": [
                                  "ospf"
                                ]
                              }
                            },
                            "csnp_interval": {
                              "type": "number",
                              "typetext": "<number> (1 - 600)",
                              "description": "The csnp_interval property for Openfabric",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 600
                              },
                              "metadata": {
                                "instanceTypes": [
                                  "openfabric"
                                ]
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "hello_interval": {
                              "type": "number",
                              "typetext": "<number> (1 - 600)",
                              "description": "The hello_interval property for Openfabric",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 600
                              },
                              "metadata": {
                                "instanceTypes": [
                                  "openfabric"
                                ]
                              }
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Identifier for SDN fabrics",
                              "constraints": {
                                "format": "pve-sdn-fabric-id"
                              }
                            },
                            "ip6_prefix": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The IP prefix for Node IPs",
                              "optional": true,
                              "constraints": {
                                "format": "CIDR"
                              }
                            },
                            "ip_prefix": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The IP prefix for Node IPs",
                              "optional": true,
                              "constraints": {
                                "format": "CIDR"
                              }
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "protocol": {
                              "type": "string",
                              "description": "Type of configuration entry in an SDN Fabric section config",
                              "enum": [
                                "openfabric",
                                "ospf"
                              ]
                            }
                          }
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-sdn-fabrics-fabric-id",
                      "path": "/cluster/sdn/fabrics/fabric/{id}",
                      "slug": "cluster-sdn-fabrics-fabric-id",
                      "label": "{id}",
                      "endpoints": [
                        {
                          "id": "delete-cluster-sdn-fabrics-fabric-id",
                          "operationId": "delete-cluster-sdn-fabrics-fabric-id",
                          "path": "/cluster/sdn/fabrics/fabric/{id}",
                          "httpMethod": "DELETE",
                          "name": "delete_fabric",
                          "description": "Add a fabric",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/fabrics/{id}",
                                    [
                                      "SDN.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                }
                              }
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-cluster-sdn-fabrics-fabric-id",
                          "operationId": "get-cluster-sdn-fabrics-fabric-id",
                          "path": "/cluster/sdn/fabrics/fabric/{id}",
                          "httpMethod": "GET",
                          "name": "get_fabric",
                          "description": "Update a fabric",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/fabrics/{id}",
                                    [
                                      "SDN.Audit",
                                      "SDN.Allocate"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                }
                              }
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "area": {
                                    "type": "string",
                                    "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                                    "optional": true,
                                    "metadata": {
                                      "instanceTypes": [
                                        "ospf"
                                      ]
                                    }
                                  },
                                  "csnp_interval": {
                                    "type": "number",
                                    "description": "The csnp_interval property for Openfabric",
                                    "optional": true,
                                    "constraints": {
                                      "minimum": 1,
                                      "maximum": 600
                                    },
                                    "metadata": {
                                      "instanceTypes": [
                                        "openfabric"
                                      ]
                                    }
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 64
                                    }
                                  },
                                  "hello_interval": {
                                    "type": "number",
                                    "description": "The hello_interval property for Openfabric",
                                    "optional": true,
                                    "constraints": {
                                      "minimum": 1,
                                      "maximum": 600
                                    },
                                    "metadata": {
                                      "instanceTypes": [
                                        "openfabric"
                                      ]
                                    }
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Identifier for SDN fabrics",
                                    "constraints": {
                                      "format": "pve-sdn-fabric-id"
                                    }
                                  },
                                  "ip6_prefix": {
                                    "type": "string",
                                    "description": "The IP prefix for Node IPs",
                                    "optional": true,
                                    "constraints": {
                                      "format": "CIDR"
                                    }
                                  },
                                  "ip_prefix": {
                                    "type": "string",
                                    "description": "The IP prefix for Node IPs",
                                    "optional": true,
                                    "constraints": {
                                      "format": "CIDR"
                                    }
                                  },
                                  "lock-token": {
                                    "type": "string",
                                    "description": "the token for unlocking the global SDN configuration",
                                    "optional": true
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "description": "Type of configuration entry in an SDN Fabric section config",
                                    "enum": [
                                      "openfabric",
                                      "ospf"
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-sdn-fabrics-fabric-id",
                          "operationId": "put-cluster-sdn-fabrics-fabric-id",
                          "path": "/cluster/sdn/fabrics/fabric/{id}",
                          "httpMethod": "PUT",
                          "name": "update_fabric",
                          "description": "Update a fabric",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/fabrics/{id}",
                                    [
                                      "SDN.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "area": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                                  "optional": true,
                                  "metadata": {
                                    "instanceTypes": [
                                      "ospf"
                                    ]
                                  }
                                },
                                "csnp_interval": {
                                  "type": "number",
                                  "typetext": "<number> (1 - 600)",
                                  "description": "The csnp_interval property for Openfabric",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 600
                                  },
                                  "metadata": {
                                    "instanceTypes": [
                                      "openfabric"
                                    ]
                                  }
                                },
                                "delete": {
                                  "type": "array",
                                  "typetext": "<array>"
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "hello_interval": {
                                  "type": "number",
                                  "typetext": "<number> (1 - 600)",
                                  "description": "The hello_interval property for Openfabric",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 600
                                  },
                                  "metadata": {
                                    "instanceTypes": [
                                      "openfabric"
                                    ]
                                  }
                                },
                                "id": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                },
                                "ip6_prefix": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The IP prefix for Node IPs",
                                  "optional": true,
                                  "constraints": {
                                    "format": "CIDR"
                                  }
                                },
                                "ip_prefix": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The IP prefix for Node IPs",
                                  "optional": true,
                                  "constraints": {
                                    "format": "CIDR"
                                  }
                                },
                                "lock-token": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "the token for unlocking the global SDN configuration",
                                  "optional": true
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Type of configuration entry in an SDN Fabric section config",
                                  "enum": [
                                    "openfabric",
                                    "ospf"
                                  ]
                                }
                              }
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "cluster-sdn-fabrics-node",
                  "path": "/cluster/sdn/fabrics/node",
                  "slug": "cluster-sdn-fabrics-node",
                  "label": "node",
                  "endpoints": [
                    {
                      "id": "get-cluster-sdn-fabrics-node",
                      "operationId": "get-cluster-sdn-fabrics-node",
                      "path": "/cluster/sdn/fabrics/node",
                      "httpMethod": "GET",
                      "name": "list_nodes",
                      "description": "SDN Fabrics Index",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "description": "Only list nodes where you have 'SDN.Audit' or 'SDN.Allocate' permissions on\n'/sdn/fabrics/<fabric>' and 'Sys.Audit' or 'Sys.Modify' on /nodes/<node_id>",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "pending": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display pending config.",
                              "optional": true
                            },
                            "running": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display running config.",
                              "optional": true
                            }
                          }
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "digest": {
                                  "type": "string",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "fabric_id": {
                                  "type": "string",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                },
                                "interfaces": {
                                  "type": "array"
                                },
                                "ip": {
                                  "type": "string",
                                  "description": "IPv4 address for this node",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ipv4"
                                  }
                                },
                                "ip6": {
                                  "type": "string",
                                  "description": "IPv6 address for this node",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ipv6"
                                  }
                                },
                                "lock-token": {
                                  "type": "string",
                                  "description": "the token for unlocking the global SDN configuration",
                                  "optional": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "description": "Identifier for nodes in an SDN fabric",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Type of configuration entry in an SDN Fabric section config",
                                  "enum": [
                                    "openfabric",
                                    "ospf"
                                  ]
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{fabric_id}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-sdn-fabrics-node-fabric-id",
                      "path": "/cluster/sdn/fabrics/node/{fabric_id}",
                      "slug": "cluster-sdn-fabrics-node-fabric-id",
                      "label": "{fabric_id}",
                      "endpoints": [
                        {
                          "id": "get-cluster-sdn-fabrics-node-fabric-id",
                          "operationId": "get-cluster-sdn-fabrics-node-fabric-id",
                          "path": "/cluster/sdn/fabrics/node/{fabric_id}",
                          "httpMethod": "GET",
                          "name": "list_nodes_fabric",
                          "description": "SDN Fabrics Index",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Only returns nodes where you have 'Sys.Audit' or 'Sys.Modify' permissions.",
                                  "check": [
                                    "perm",
                                    "/sdn/fabrics/{fabric_id}",
                                    [
                                      "SDN.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "fabric_id": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                },
                                "pending": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Display pending config.",
                                  "optional": true
                                },
                                "running": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Display running config.",
                                  "optional": true
                                }
                              }
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "digest": {
                                      "type": "string",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "fabric_id": {
                                      "type": "string",
                                      "description": "Identifier for SDN fabrics",
                                      "constraints": {
                                        "format": "pve-sdn-fabric-id"
                                      }
                                    },
                                    "interfaces": {
                                      "type": "array"
                                    },
                                    "ip": {
                                      "type": "string",
                                      "description": "IPv4 address for this node",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ipv4"
                                      }
                                    },
                                    "ip6": {
                                      "type": "string",
                                      "description": "IPv6 address for this node",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ipv6"
                                      }
                                    },
                                    "lock-token": {
                                      "type": "string",
                                      "description": "the token for unlocking the global SDN configuration",
                                      "optional": true
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "description": "Identifier for nodes in an SDN fabric",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "Type of configuration entry in an SDN Fabric section config",
                                      "enum": [
                                        "openfabric",
                                        "ospf"
                                      ]
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{node_id}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-cluster-sdn-fabrics-node-fabric-id",
                          "operationId": "post-cluster-sdn-fabrics-node-fabric-id",
                          "path": "/cluster/sdn/fabrics/node/{fabric_id}",
                          "httpMethod": "POST",
                          "name": "add_node",
                          "description": "Add a node",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/sdn/fabrics/{fabric_id}",
                                      [
                                        "SDN.Allocate"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/nodes/{node_id}",
                                      [
                                        "Sys.Modify"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "fabric_id": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Identifier for SDN fabrics",
                                  "constraints": {
                                    "format": "pve-sdn-fabric-id"
                                  }
                                },
                                "interfaces": {
                                  "type": "array",
                                  "typetext": "<array>"
                                },
                                "ip": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "IPv4 address for this node",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ipv4"
                                  }
                                },
                                "ip6": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "IPv6 address for this node",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ipv6"
                                  }
                                },
                                "lock-token": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "the token for unlocking the global SDN configuration",
                                  "optional": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Identifier for nodes in an SDN fabric",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Type of configuration entry in an SDN Fabric section config",
                                  "enum": [
                                    "openfabric",
                                    "ospf"
                                  ]
                                }
                              }
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "cluster-sdn-fabrics-node-fabric-id-node-id",
                          "path": "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}",
                          "slug": "cluster-sdn-fabrics-node-fabric-id-node-id",
                          "label": "{node_id}",
                          "endpoints": [
                            {
                              "id": "delete-cluster-sdn-fabrics-node-fabric-id-node-id",
                              "operationId": "delete-cluster-sdn-fabrics-node-fabric-id-node-id",
                              "path": "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}",
                              "httpMethod": "DELETE",
                              "name": "delete_node",
                              "description": "Add a node",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "and",
                                        [
                                          "perm",
                                          "/sdn/fabrics/{fabric_id}",
                                          [
                                            "SDN.Allocate"
                                          ]
                                        ],
                                        [
                                          "perm",
                                          "/nodes/{node_id}",
                                          [
                                            "Sys.Modify"
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "fabric_id": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Identifier for SDN fabrics",
                                      "constraints": {
                                        "format": "pve-sdn-fabric-id"
                                      }
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Identifier for nodes in an SDN fabric",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    }
                                  }
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            },
                            {
                              "id": "get-cluster-sdn-fabrics-node-fabric-id-node-id",
                              "operationId": "get-cluster-sdn-fabrics-node-fabric-id-node-id",
                              "path": "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}",
                              "httpMethod": "GET",
                              "name": "get_node",
                              "description": "Get a node",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "and",
                                        [
                                          "perm",
                                          "/sdn/fabrics/{fabric_id}",
                                          [
                                            "SDN.Audit",
                                            "SDN.Allocate"
                                          ],
                                          "any",
                                          1
                                        ],
                                        [
                                          "perm",
                                          "/nodes/{node_id}",
                                          [
                                            "Sys.Audit",
                                            "Sys.Modify"
                                          ],
                                          "any",
                                          1
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "fabric_id": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Identifier for SDN fabrics",
                                      "constraints": {
                                        "format": "pve-sdn-fabric-id"
                                      }
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Identifier for nodes in an SDN fabric",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    }
                                  }
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "properties": {
                                      "digest": {
                                        "type": "string",
                                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                        "optional": true,
                                        "constraints": {
                                          "maxLength": 64
                                        }
                                      },
                                      "fabric_id": {
                                        "type": "string",
                                        "description": "Identifier for SDN fabrics",
                                        "constraints": {
                                          "format": "pve-sdn-fabric-id"
                                        }
                                      },
                                      "interfaces": {
                                        "type": "array"
                                      },
                                      "ip": {
                                        "type": "string",
                                        "description": "IPv4 address for this node",
                                        "optional": true,
                                        "constraints": {
                                          "format": "ipv4"
                                        }
                                      },
                                      "ip6": {
                                        "type": "string",
                                        "description": "IPv6 address for this node",
                                        "optional": true,
                                        "constraints": {
                                          "format": "ipv6"
                                        }
                                      },
                                      "lock-token": {
                                        "type": "string",
                                        "description": "the token for unlocking the global SDN configuration",
                                        "optional": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "description": "Identifier for nodes in an SDN fabric",
                                        "constraints": {
                                          "format": "pve-node"
                                        }
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "description": "Type of configuration entry in an SDN Fabric section config",
                                        "enum": [
                                          "openfabric",
                                          "ospf"
                                        ]
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "put-cluster-sdn-fabrics-node-fabric-id-node-id",
                              "operationId": "put-cluster-sdn-fabrics-node-fabric-id-node-id",
                              "path": "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}",
                              "httpMethod": "PUT",
                              "name": "update_node",
                              "description": "Update a node",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "and",
                                        [
                                          "perm",
                                          "/sdn/fabrics/{fabric_id}",
                                          [
                                            "SDN.Allocate"
                                          ]
                                        ],
                                        [
                                          "perm",
                                          "/nodes/{node_id}",
                                          [
                                            "Sys.Modify"
                                          ]
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "delete": {
                                      "type": "array",
                                      "typetext": "<array>",
                                      "optional": true,
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "interfaces",
                                          "ip",
                                          "ip6"
                                        ]
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "fabric_id": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Identifier for SDN fabrics",
                                      "constraints": {
                                        "format": "pve-sdn-fabric-id"
                                      }
                                    },
                                    "interfaces": {
                                      "type": "array",
                                      "typetext": "<array>"
                                    },
                                    "ip": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "IPv4 address for this node",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ipv4"
                                      }
                                    },
                                    "ip6": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "IPv6 address for this node",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ipv6"
                                      }
                                    },
                                    "lock-token": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "the token for unlocking the global SDN configuration",
                                      "optional": true
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Identifier for nodes in an SDN fabric",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "Type of configuration entry in an SDN Fabric section config",
                                      "enum": [
                                        "openfabric",
                                        "ospf"
                                      ]
                                    }
                                  }
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-sdn-ipams",
              "path": "/cluster/sdn/ipams",
              "slug": "cluster-sdn-ipams",
              "label": "ipams",
              "endpoints": [
                {
                  "id": "get-cluster-sdn-ipams",
                  "operationId": "get-cluster-sdn-ipams",
                  "path": "/cluster/sdn/ipams",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "SDN ipams index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/ipams/<ipam>'",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Only list sdn ipams of specific type",
                          "optional": true,
                          "enum": [
                            "netbox",
                            "phpipam",
                            "pve"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ipam": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{ipam}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-sdn-ipams",
                  "operationId": "post-cluster-sdn-ipams",
                  "path": "/cluster/sdn/ipams",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new sdn ipam object.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn/ipams",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "fingerprint": {
                          "type": "string",
                          "description": "Certificate SHA 256 fingerprint.",
                          "optional": true,
                          "constraints": {
                            "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                          }
                        },
                        "ipam": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The SDN ipam object identifier.",
                          "constraints": {
                            "format": "pve-sdn-ipam-id"
                          }
                        },
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        },
                        "section": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "optional": true
                        },
                        "token": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Plugin type.",
                          "enum": [
                            "netbox",
                            "phpipam",
                            "pve"
                          ],
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "url": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-sdn-ipams-ipam",
                  "path": "/cluster/sdn/ipams/{ipam}",
                  "slug": "cluster-sdn-ipams-ipam",
                  "label": "{ipam}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-sdn-ipams-ipam",
                      "operationId": "delete-cluster-sdn-ipams-ipam",
                      "path": "/cluster/sdn/ipams/{ipam}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete sdn ipam object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/ipams",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "ipam": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN ipam object identifier.",
                              "constraints": {
                                "format": "pve-sdn-ipam-id"
                              }
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-sdn-ipams-ipam",
                      "operationId": "get-cluster-sdn-ipams-ipam",
                      "path": "/cluster/sdn/ipams/{ipam}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read sdn ipam configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/ipams/{ipam}",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "ipam": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN ipam object identifier.",
                              "constraints": {
                                "format": "pve-sdn-ipam-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-sdn-ipams-ipam",
                      "operationId": "put-cluster-sdn-ipams-ipam",
                      "path": "/cluster/sdn/ipams/{ipam}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update sdn ipam object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/ipams",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "fingerprint": {
                              "type": "string",
                              "description": "Certificate SHA 256 fingerprint.",
                              "optional": true,
                              "constraints": {
                                "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                              }
                            },
                            "ipam": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN ipam object identifier.",
                              "constraints": {
                                "format": "pve-sdn-ipam-id"
                              }
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "section": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "optional": true
                            },
                            "token": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            },
                            "url": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-sdn-ipams-ipam-status",
                      "path": "/cluster/sdn/ipams/{ipam}/status",
                      "slug": "cluster-sdn-ipams-ipam-status",
                      "label": "status",
                      "endpoints": [
                        {
                          "id": "get-cluster-sdn-ipams-ipam-status",
                          "operationId": "get-cluster-sdn-ipams-ipam-status",
                          "path": "/cluster/sdn/ipams/{ipam}/status",
                          "httpMethod": "GET",
                          "name": "ipamindex",
                          "description": "List PVE IPAM Entries",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "ipam": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN ipam object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-ipam-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-sdn-lock",
              "path": "/cluster/sdn/lock",
              "slug": "cluster-sdn-lock",
              "label": "lock",
              "endpoints": [
                {
                  "id": "delete-cluster-sdn-lock",
                  "operationId": "delete-cluster-sdn-lock",
                  "path": "/cluster/sdn/lock",
                  "httpMethod": "DELETE",
                  "name": "release_lock",
                  "description": "Release global lock for SDN configuration",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "if true, allow releasing lock without providing the token",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-sdn-lock",
                  "operationId": "post-cluster-sdn-lock",
                  "path": "/cluster/sdn/lock",
                  "httpMethod": "POST",
                  "name": "lock",
                  "description": "Acquire global lock for SDN configuration",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "allow-pending": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "if true, allow acquiring lock even though there are pending changes",
                          "optional": true,
                          "defaultValue": 0
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-sdn-rollback",
              "path": "/cluster/sdn/rollback",
              "slug": "cluster-sdn-rollback",
              "label": "rollback",
              "endpoints": [
                {
                  "id": "post-cluster-sdn-rollback",
                  "operationId": "post-cluster-sdn-rollback",
                  "path": "/cluster/sdn/rollback",
                  "httpMethod": "POST",
                  "name": "rollback",
                  "description": "Rollback pending changes to SDN configuration",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        },
                        "release-lock": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "When lock-token has been provided and configuration successfully rollbacked, release the lock automatically afterwards",
                          "optional": true,
                          "defaultValue": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "cluster-sdn-vnets",
              "path": "/cluster/sdn/vnets",
              "slug": "cluster-sdn-vnets",
              "label": "vnets",
              "endpoints": [
                {
                  "id": "get-cluster-sdn-vnets",
                  "operationId": "get-cluster-sdn-vnets",
                  "path": "/cluster/sdn/vnets",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "SDN vnets index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "pending": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Display pending config.",
                          "optional": true
                        },
                        "running": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Display running config.",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{vnet}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-sdn-vnets",
                  "operationId": "post-cluster-sdn-vnets",
                  "path": "/cluster/sdn/vnets",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new sdn vnet object.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn/zones/{zone}",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "alias": {
                          "type": "string",
                          "description": "alias name of the vnet",
                          "optional": true,
                          "constraints": {
                            "maxLength": 256,
                            "pattern": "(?^i:[\\(\\)-_.\\w\\d\\s]{0,256})"
                          }
                        },
                        "isolate-ports": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "If true, sets the isolated property for all members of this VNet",
                          "optional": true
                        },
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        },
                        "tag": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "vlan or vxlan id",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Type",
                          "optional": true,
                          "enum": [
                            "vnet"
                          ]
                        },
                        "vlanaware": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Allow vm VLANs to pass through this vnet.",
                          "optional": true
                        },
                        "vnet": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The SDN vnet object identifier.",
                          "constraints": {
                            "format": "pve-sdn-vnet-id"
                          }
                        },
                        "zone": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "zone id",
                          "optional": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-sdn-vnets-vnet",
                  "path": "/cluster/sdn/vnets/{vnet}",
                  "slug": "cluster-sdn-vnets-vnet",
                  "label": "{vnet}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-sdn-vnets-vnet",
                      "operationId": "delete-cluster-sdn-vnets-vnet",
                      "path": "/cluster/sdn/vnets/{vnet}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete sdn vnet object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "vnet": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN vnet object identifier.",
                              "constraints": {
                                "format": "pve-sdn-vnet-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-sdn-vnets-vnet",
                      "operationId": "get-cluster-sdn-vnets-vnet",
                      "path": "/cluster/sdn/vnets/{vnet}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read sdn vnet configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "description": "Require 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "pending": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display pending config.",
                              "optional": true
                            },
                            "running": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display running config.",
                              "optional": true
                            },
                            "vnet": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN vnet object identifier.",
                              "constraints": {
                                "format": "pve-sdn-vnet-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-sdn-vnets-vnet",
                      "operationId": "put-cluster-sdn-vnets-vnet",
                      "path": "/cluster/sdn/vnets/{vnet}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update sdn vnet object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "alias": {
                              "type": "string",
                              "description": "alias name of the vnet",
                              "optional": true,
                              "constraints": {
                                "maxLength": 256,
                                "pattern": "(?^i:[\\(\\)-_.\\w\\d\\s]{0,256})"
                              }
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "isolate-ports": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "If true, sets the isolated property for all members of this VNet",
                              "optional": true
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "tag": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "vlan or vxlan id",
                              "optional": true
                            },
                            "vlanaware": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Allow vm VLANs to pass through this vnet.",
                              "optional": true
                            },
                            "vnet": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN vnet object identifier.",
                              "constraints": {
                                "format": "pve-sdn-vnet-id"
                              }
                            },
                            "zone": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "zone id",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "cluster-sdn-vnets-vnet-firewall",
                      "path": "/cluster/sdn/vnets/{vnet}/firewall",
                      "slug": "cluster-sdn-vnets-vnet-firewall",
                      "label": "firewall",
                      "endpoints": [
                        {
                          "id": "get-cluster-sdn-vnets-vnet-firewall",
                          "operationId": "get-cluster-sdn-vnets-vnet-firewall",
                          "path": "/cluster/sdn/vnets/{vnet}/firewall",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "Directory index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "vnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN vnet object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-vnet-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "cluster-sdn-vnets-vnet-firewall-options",
                          "path": "/cluster/sdn/vnets/{vnet}/firewall/options",
                          "slug": "cluster-sdn-vnets-vnet-firewall-options",
                          "label": "options",
                          "endpoints": [
                            {
                              "id": "get-cluster-sdn-vnets-vnet-firewall-options",
                              "operationId": "get-cluster-sdn-vnets-vnet-firewall-options",
                              "path": "/cluster/sdn/vnets/{vnet}/firewall/options",
                              "httpMethod": "GET",
                              "name": "get_options",
                              "description": "Get vnet firewall options.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Needs SDN.Audit or SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN vnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-vnet-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "enable": {
                                        "type": "boolean",
                                        "description": "Enable/disable firewall rules.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "log_level_forward": {
                                        "type": "string",
                                        "description": "Log level for forwarded traffic.",
                                        "optional": true,
                                        "enum": [
                                          "emerg",
                                          "alert",
                                          "crit",
                                          "err",
                                          "warning",
                                          "notice",
                                          "info",
                                          "debug",
                                          "nolog"
                                        ]
                                      },
                                      "policy_forward": {
                                        "type": "string",
                                        "description": "Forward policy.",
                                        "optional": true,
                                        "enum": [
                                          "ACCEPT",
                                          "DROP"
                                        ]
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "put-cluster-sdn-vnets-vnet-firewall-options",
                              "operationId": "put-cluster-sdn-vnets-vnet-firewall-options",
                              "path": "/cluster/sdn/vnets/{vnet}/firewall/options",
                              "httpMethod": "PUT",
                              "name": "set_options",
                              "description": "Set Firewall options.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "delete": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "A list of settings you want to delete.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-configid-list"
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "enable": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable/disable firewall rules.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "log_level_forward": {
                                      "type": "string",
                                      "description": "Log level for forwarded traffic.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "policy_forward": {
                                      "type": "string",
                                      "description": "Forward policy.",
                                      "optional": true,
                                      "enum": [
                                        "ACCEPT",
                                        "DROP"
                                      ]
                                    },
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN vnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-vnet-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "cluster-sdn-vnets-vnet-firewall-rules",
                          "path": "/cluster/sdn/vnets/{vnet}/firewall/rules",
                          "slug": "cluster-sdn-vnets-vnet-firewall-rules",
                          "label": "rules",
                          "endpoints": [
                            {
                              "id": "get-cluster-sdn-vnets-vnet-firewall-rules",
                              "operationId": "get-cluster-sdn-vnets-vnet-firewall-rules",
                              "path": "/cluster/sdn/vnets/{vnet}/firewall/rules",
                              "httpMethod": "GET",
                              "name": "get_rules",
                              "description": "List rules.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Needs SDN.Audit or SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN vnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-vnet-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "pos": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{pos}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-cluster-sdn-vnets-vnet-firewall-rules",
                              "operationId": "post-cluster-sdn-vnets-vnet-firewall-rules",
                              "path": "/cluster/sdn/vnets/{vnet}/firewall/rules",
                              "httpMethod": "POST",
                              "name": "create_rule",
                              "description": "Create new rule.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "action": {
                                      "type": "string",
                                      "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                      "optional": false,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 20,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Descriptive comment.",
                                      "optional": true
                                    },
                                    "dest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 512,
                                        "format": "pve-fw-addr-spec"
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "dport": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-dport-spec"
                                      }
                                    },
                                    "enable": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Flag to enable/disable a rule.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "icmp-type": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-icmp-type-spec"
                                      }
                                    },
                                    "iface": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                      "optional": true,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 20,
                                        "format": "pve-iface"
                                      }
                                    },
                                    "log": {
                                      "type": "string",
                                      "description": "Log level for firewall rule.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "macro": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Use predefined standard macro.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 128
                                      }
                                    },
                                    "pos": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Update rule at position <pos>.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "proto": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-protocol-spec"
                                      }
                                    },
                                    "source": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 512,
                                        "format": "pve-fw-addr-spec"
                                      }
                                    },
                                    "sport": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-sport-spec"
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Rule type.",
                                      "optional": false,
                                      "enum": [
                                        "in",
                                        "out",
                                        "forward",
                                        "group"
                                      ]
                                    },
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN vnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-vnet-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "cluster-sdn-vnets-vnet-firewall-rules-pos",
                              "path": "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}",
                              "slug": "cluster-sdn-vnets-vnet-firewall-rules-pos",
                              "label": "{pos}",
                              "endpoints": [
                                {
                                  "id": "delete-cluster-sdn-vnets-vnet-firewall-rules-pos",
                                  "operationId": "delete-cluster-sdn-vnets-vnet-firewall-rules-pos",
                                  "path": "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}",
                                  "httpMethod": "DELETE",
                                  "name": "delete_rule",
                                  "description": "Delete rule.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                          "user": "all"
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "vnet": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The SDN vnet object identifier.",
                                          "constraints": {
                                            "format": "pve-sdn-vnet-id"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-cluster-sdn-vnets-vnet-firewall-rules-pos",
                                  "operationId": "get-cluster-sdn-vnets-vnet-firewall-rules-pos",
                                  "path": "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}",
                                  "httpMethod": "GET",
                                  "name": "get_rule",
                                  "description": "Get single rule data.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "description": "Needs SDN.Audit or SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                          "user": "all"
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "vnet": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The SDN vnet object identifier.",
                                          "constraints": {
                                            "format": "pve-sdn-vnet-id"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "string"
                                          },
                                          "comment": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "dest": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "dport": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "enable": {
                                            "type": "integer",
                                            "optional": true
                                          },
                                          "icmp-type": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "iface": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "ipversion": {
                                            "type": "integer",
                                            "optional": true
                                          },
                                          "log": {
                                            "type": "string",
                                            "description": "Log level for firewall rule",
                                            "optional": true,
                                            "enum": [
                                              "emerg",
                                              "alert",
                                              "crit",
                                              "err",
                                              "warning",
                                              "notice",
                                              "info",
                                              "debug",
                                              "nolog"
                                            ]
                                          },
                                          "macro": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "pos": {
                                            "type": "integer"
                                          },
                                          "proto": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "source": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "sport": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-cluster-sdn-vnets-vnet-firewall-rules-pos",
                                  "operationId": "put-cluster-sdn-vnets-vnet-firewall-rules-pos",
                                  "path": "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}",
                                  "httpMethod": "PUT",
                                  "name": "update_rule",
                                  "description": "Modify rule data.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
                                          "user": "all"
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "action": {
                                          "type": "string",
                                          "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Descriptive comment.",
                                          "optional": true
                                        },
                                        "delete": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "A list of settings you want to delete.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-configid-list"
                                          }
                                        },
                                        "dest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 512,
                                            "format": "pve-fw-addr-spec"
                                          }
                                        },
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "dport": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-dport-spec"
                                          }
                                        },
                                        "enable": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Flag to enable/disable a rule.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "icmp-type": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-icmp-type-spec"
                                          }
                                        },
                                        "iface": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "format": "pve-iface"
                                          }
                                        },
                                        "log": {
                                          "type": "string",
                                          "description": "Log level for firewall rule.",
                                          "optional": true,
                                          "enum": [
                                            "emerg",
                                            "alert",
                                            "crit",
                                            "err",
                                            "warning",
                                            "notice",
                                            "info",
                                            "debug",
                                            "nolog"
                                          ]
                                        },
                                        "macro": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Use predefined standard macro.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 128
                                          }
                                        },
                                        "moveto": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "proto": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-protocol-spec"
                                          }
                                        },
                                        "source": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 512,
                                            "format": "pve-fw-addr-spec"
                                          }
                                        },
                                        "sport": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-sport-spec"
                                          }
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Rule type.",
                                          "optional": true,
                                          "enum": [
                                            "in",
                                            "out",
                                            "forward",
                                            "group"
                                          ]
                                        },
                                        "vnet": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The SDN vnet object identifier.",
                                          "constraints": {
                                            "format": "pve-sdn-vnet-id"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "cluster-sdn-vnets-vnet-ips",
                      "path": "/cluster/sdn/vnets/{vnet}/ips",
                      "slug": "cluster-sdn-vnets-vnet-ips",
                      "label": "ips",
                      "endpoints": [
                        {
                          "id": "delete-cluster-sdn-vnets-vnet-ips",
                          "operationId": "delete-cluster-sdn-vnets-vnet-ips",
                          "path": "/cluster/sdn/vnets/{vnet}/ips",
                          "httpMethod": "DELETE",
                          "name": "ipdelete",
                          "description": "Delete IP Mappings in a VNet",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/zones/{zone}/{vnet}",
                                    [
                                      "SDN.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "ip": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The IP address to delete",
                                  "constraints": {
                                    "format": "ip"
                                  }
                                },
                                "mac": {
                                  "type": "string",
                                  "typetext": "<XX:XX:XX:XX:XX:XX>",
                                  "description": "Unicast MAC address.",
                                  "verboseDescription": "A common MAC address with the I/G (Individual/Group) bit not set.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "mac-addr",
                                    "formatDescription": "XX:XX:XX:XX:XX:XX"
                                  }
                                },
                                "vnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN vnet object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-vnet-id"
                                  }
                                },
                                "zone": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN zone object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-zone-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-cluster-sdn-vnets-vnet-ips",
                          "operationId": "post-cluster-sdn-vnets-vnet-ips",
                          "path": "/cluster/sdn/vnets/{vnet}/ips",
                          "httpMethod": "POST",
                          "name": "ipcreate",
                          "description": "Create IP Mapping in a VNet",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/zones/{zone}/{vnet}",
                                    [
                                      "SDN.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "ip": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The IP address to associate with the given MAC address",
                                  "constraints": {
                                    "format": "ip"
                                  }
                                },
                                "mac": {
                                  "type": "string",
                                  "typetext": "<XX:XX:XX:XX:XX:XX>",
                                  "description": "Unicast MAC address.",
                                  "verboseDescription": "A common MAC address with the I/G (Individual/Group) bit not set.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "mac-addr",
                                    "formatDescription": "XX:XX:XX:XX:XX:XX"
                                  }
                                },
                                "vnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN vnet object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-vnet-id"
                                  }
                                },
                                "zone": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN zone object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-zone-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-cluster-sdn-vnets-vnet-ips",
                          "operationId": "put-cluster-sdn-vnets-vnet-ips",
                          "path": "/cluster/sdn/vnets/{vnet}/ips",
                          "httpMethod": "PUT",
                          "name": "ipupdate",
                          "description": "Update IP Mapping in a VNet",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/zones/{zone}/{vnet}",
                                    [
                                      "SDN.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "ip": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The IP address to associate with the given MAC address",
                                  "constraints": {
                                    "format": "ip"
                                  }
                                },
                                "mac": {
                                  "type": "string",
                                  "typetext": "<XX:XX:XX:XX:XX:XX>",
                                  "description": "Unicast MAC address.",
                                  "verboseDescription": "A common MAC address with the I/G (Individual/Group) bit not set.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "mac-addr",
                                    "formatDescription": "XX:XX:XX:XX:XX:XX"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN vnet object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-vnet-id"
                                  }
                                },
                                "zone": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN zone object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-zone-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "cluster-sdn-vnets-vnet-subnets",
                      "path": "/cluster/sdn/vnets/{vnet}/subnets",
                      "slug": "cluster-sdn-vnets-vnet-subnets",
                      "label": "subnets",
                      "endpoints": [
                        {
                          "id": "get-cluster-sdn-vnets-vnet-subnets",
                          "operationId": "get-cluster-sdn-vnets-vnet-subnets",
                          "path": "/cluster/sdn/vnets/{vnet}/subnets",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "SDN subnets index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "pending": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Display pending config.",
                                  "optional": true
                                },
                                "running": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Display running config.",
                                  "optional": true
                                },
                                "vnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN vnet object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-vnet-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{subnet}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-cluster-sdn-vnets-vnet-subnets",
                          "operationId": "post-cluster-sdn-vnets-vnet-subnets",
                          "path": "/cluster/sdn/vnets/{vnet}/subnets",
                          "httpMethod": "POST",
                          "name": "create",
                          "description": "Create a new sdn subnet object.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "dhcp-dns-server": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "IP address for the DNS server",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ip"
                                  }
                                },
                                "dhcp-range": {
                                  "type": "array",
                                  "typetext": "<array>",
                                  "description": "A list of DHCP ranges for this subnet",
                                  "optional": true,
                                  "items": {
                                    "type": "string",
                                    "constraints": {
                                      "format": "pve-sdn-dhcp-range"
                                    }
                                  }
                                },
                                "dnszoneprefix": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "dns domain zone prefix  ex: 'adm' -> <hostname>.adm.mydomain.com",
                                  "optional": true,
                                  "constraints": {
                                    "format": "dns-name"
                                  }
                                },
                                "gateway": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Subnet Gateway: Will be assign on vnet for layer3 zones",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ip"
                                  }
                                },
                                "lock-token": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "the token for unlocking the global SDN configuration",
                                  "optional": true
                                },
                                "snat": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "enable masquerade for this subnet if pve-firewall",
                                  "optional": true
                                },
                                "subnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN subnet object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-subnet-id"
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "subnet"
                                  ]
                                },
                                "vnet": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "associated vnet",
                                  "optional": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "cluster-sdn-vnets-vnet-subnets-subnet",
                          "path": "/cluster/sdn/vnets/{vnet}/subnets/{subnet}",
                          "slug": "cluster-sdn-vnets-vnet-subnets-subnet",
                          "label": "{subnet}",
                          "endpoints": [
                            {
                              "id": "delete-cluster-sdn-vnets-vnet-subnets-subnet",
                              "operationId": "delete-cluster-sdn-vnets-vnet-subnets-subnet",
                              "path": "/cluster/sdn/vnets/{vnet}/subnets/{subnet}",
                              "httpMethod": "DELETE",
                              "name": "delete",
                              "description": "Delete sdn subnet object configuration.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "lock-token": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "the token for unlocking the global SDN configuration",
                                      "optional": true
                                    },
                                    "subnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN subnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-subnet-id"
                                      }
                                    },
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN vnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-vnet-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            },
                            {
                              "id": "get-cluster-sdn-vnets-vnet-subnets-subnet",
                              "operationId": "get-cluster-sdn-vnets-vnet-subnets-subnet",
                              "path": "/cluster/sdn/vnets/{vnet}/subnets/{subnet}",
                              "httpMethod": "GET",
                              "name": "read",
                              "description": "Read sdn subnet configuration.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Require 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "pending": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Display pending config.",
                                      "optional": true
                                    },
                                    "running": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Display running config.",
                                      "optional": true
                                    },
                                    "subnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN subnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-subnet-id"
                                      }
                                    },
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN vnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-vnet-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object"
                                  }
                                }
                              ]
                            },
                            {
                              "id": "put-cluster-sdn-vnets-vnet-subnets-subnet",
                              "operationId": "put-cluster-sdn-vnets-vnet-subnets-subnet",
                              "path": "/cluster/sdn/vnets/{vnet}/subnets/{subnet}",
                              "httpMethod": "PUT",
                              "name": "update",
                              "description": "Update sdn subnet object configuration.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "delete": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "A list of settings you want to delete.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 4096,
                                        "format": "pve-configid-list"
                                      }
                                    },
                                    "dhcp-dns-server": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "IP address for the DNS server",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ip"
                                      }
                                    },
                                    "dhcp-range": {
                                      "type": "array",
                                      "typetext": "<array>",
                                      "description": "A list of DHCP ranges for this subnet",
                                      "optional": true,
                                      "items": {
                                        "type": "string",
                                        "constraints": {
                                          "format": "pve-sdn-dhcp-range"
                                        }
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "dnszoneprefix": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "dns domain zone prefix  ex: 'adm' -> <hostname>.adm.mydomain.com",
                                      "optional": true,
                                      "constraints": {
                                        "format": "dns-name"
                                      }
                                    },
                                    "gateway": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Subnet Gateway: Will be assign on vnet for layer3 zones",
                                      "optional": true,
                                      "constraints": {
                                        "format": "ip"
                                      }
                                    },
                                    "lock-token": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "the token for unlocking the global SDN configuration",
                                      "optional": true
                                    },
                                    "snat": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "enable masquerade for this subnet if pve-firewall",
                                      "optional": true
                                    },
                                    "subnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN subnet object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-subnet-id"
                                      }
                                    },
                                    "vnet": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "associated vnet",
                                      "optional": true
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": "cluster-sdn-zones",
              "path": "/cluster/sdn/zones",
              "slug": "cluster-sdn-zones",
              "label": "zones",
              "endpoints": [
                {
                  "id": "get-cluster-sdn-zones",
                  "operationId": "get-cluster-sdn-zones",
                  "path": "/cluster/sdn/zones",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "SDN zones index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>'",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "pending": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Display pending config.",
                          "optional": true
                        },
                        "running": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Display running config.",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Only list SDN zones of specific type",
                          "optional": true,
                          "enum": [
                            "evpn",
                            "faucet",
                            "qinq",
                            "simple",
                            "vlan",
                            "vxlan"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dhcp": {
                              "type": "string",
                              "optional": true
                            },
                            "dns": {
                              "type": "string",
                              "optional": true
                            },
                            "dnszone": {
                              "type": "string",
                              "optional": true
                            },
                            "ipam": {
                              "type": "string",
                              "optional": true
                            },
                            "mtu": {
                              "type": "integer",
                              "optional": true
                            },
                            "nodes": {
                              "type": "string",
                              "optional": true
                            },
                            "pending": {
                              "type": "boolean",
                              "optional": true
                            },
                            "reversedns": {
                              "type": "string",
                              "optional": true
                            },
                            "state": {
                              "type": "string",
                              "optional": true
                            },
                            "type": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{zone}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-cluster-sdn-zones",
                  "operationId": "post-cluster-sdn-zones",
                  "path": "/cluster/sdn/zones",
                  "httpMethod": "POST",
                  "name": "create",
                  "description": "Create a new sdn zone object.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/sdn/zones",
                            [
                              "SDN.Allocate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "advertise-subnets": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Advertise evpn subnets if you have silent hosts",
                          "optional": true
                        },
                        "bridge": {
                          "type": "string",
                          "typetext": "<string>",
                          "optional": true
                        },
                        "bridge-disable-mac-learning": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Disable auto mac learning.",
                          "optional": true
                        },
                        "controller": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Frr router name",
                          "optional": true
                        },
                        "dhcp": {
                          "type": "string",
                          "description": "Type of the DHCP backend for this zone",
                          "optional": true,
                          "enum": [
                            "dnsmasq"
                          ]
                        },
                        "disable-arp-nd-suppression": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Disable ipv4 arp && ipv6 neighbour discovery suppression",
                          "optional": true
                        },
                        "dns": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "dns api server",
                          "optional": true
                        },
                        "dnszone": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "dns domain zone  ex: mydomain.com",
                          "optional": true,
                          "constraints": {
                            "format": "dns-name"
                          }
                        },
                        "dp-id": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Faucet dataplane id",
                          "optional": true
                        },
                        "exitnodes": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "List of cluster node names.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node-list"
                          }
                        },
                        "exitnodes-local-routing": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Allow exitnodes to connect to evpn guests",
                          "optional": true
                        },
                        "exitnodes-primary": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Force traffic to this exitnode first.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "fabric": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "SDN fabric to use as underlay for this VXLAN zone.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-sdn-fabric-id"
                          }
                        },
                        "ipam": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "use a specific ipam",
                          "optional": true
                        },
                        "lock-token": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "the token for unlocking the global SDN configuration",
                          "optional": true
                        },
                        "mac": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Anycast logical router mac address",
                          "optional": true,
                          "constraints": {
                            "format": "mac-addr"
                          }
                        },
                        "mtu": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "MTU",
                          "optional": true
                        },
                        "nodes": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "List of cluster node names.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node-list"
                          }
                        },
                        "peers": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "peers address list.",
                          "optional": true,
                          "constraints": {
                            "format": "ip-list"
                          }
                        },
                        "reversedns": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "reverse dns api server",
                          "optional": true
                        },
                        "rt-import": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Route-Target import",
                          "optional": true,
                          "constraints": {
                            "format": "pve-sdn-bgp-rt-list"
                          }
                        },
                        "tag": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Service-VLAN Tag",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "Plugin type.",
                          "enum": [
                            "evpn",
                            "faucet",
                            "qinq",
                            "simple",
                            "vlan",
                            "vxlan"
                          ],
                          "constraints": {
                            "format": "pve-configid"
                          }
                        },
                        "vlan-protocol": {
                          "type": "string",
                          "optional": true,
                          "defaultValue": "802.1q",
                          "enum": [
                            "802.1q",
                            "802.1ad"
                          ]
                        },
                        "vrf-vxlan": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "l3vni.",
                          "optional": true
                        },
                        "vxlan-port": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 65536)",
                          "description": "Vxlan tunnel udp port (default 4789).",
                          "optional": true,
                          "constraints": {
                            "minimum": 1,
                            "maximum": 65536
                          }
                        },
                        "zone": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The SDN zone object identifier.",
                          "constraints": {
                            "format": "pve-sdn-zone-id"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "cluster-sdn-zones-zone",
                  "path": "/cluster/sdn/zones/{zone}",
                  "slug": "cluster-sdn-zones-zone",
                  "label": "{zone}",
                  "endpoints": [
                    {
                      "id": "delete-cluster-sdn-zones-zone",
                      "operationId": "delete-cluster-sdn-zones-zone",
                      "path": "/cluster/sdn/zones/{zone}",
                      "httpMethod": "DELETE",
                      "name": "delete",
                      "description": "Delete sdn zone object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/zones/{zone}",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "zone": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN zone object identifier.",
                              "constraints": {
                                "format": "pve-sdn-zone-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-cluster-sdn-zones-zone",
                      "operationId": "get-cluster-sdn-zones-zone",
                      "path": "/cluster/sdn/zones/{zone}",
                      "httpMethod": "GET",
                      "name": "read",
                      "description": "Read sdn zone configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/zones/{zone}",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "pending": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display pending config.",
                              "optional": true
                            },
                            "running": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Display running config.",
                              "optional": true
                            },
                            "zone": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN zone object identifier.",
                              "constraints": {
                                "format": "pve-sdn-zone-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-cluster-sdn-zones-zone",
                      "operationId": "put-cluster-sdn-zones-zone",
                      "path": "/cluster/sdn/zones/{zone}",
                      "httpMethod": "PUT",
                      "name": "update",
                      "description": "Update sdn zone object configuration.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/sdn/zones/{zone}",
                                [
                                  "SDN.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "advertise-subnets": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Advertise evpn subnets if you have silent hosts",
                              "optional": true
                            },
                            "bridge": {
                              "type": "string",
                              "typetext": "<string>",
                              "optional": true
                            },
                            "bridge-disable-mac-learning": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable auto mac learning.",
                              "optional": true
                            },
                            "controller": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Frr router name",
                              "optional": true
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 4096,
                                "format": "pve-configid-list"
                              }
                            },
                            "dhcp": {
                              "type": "string",
                              "description": "Type of the DHCP backend for this zone",
                              "optional": true,
                              "enum": [
                                "dnsmasq"
                              ]
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "disable-arp-nd-suppression": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable ipv4 arp && ipv6 neighbour discovery suppression",
                              "optional": true
                            },
                            "dns": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "dns api server",
                              "optional": true
                            },
                            "dnszone": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "dns domain zone  ex: mydomain.com",
                              "optional": true,
                              "constraints": {
                                "format": "dns-name"
                              }
                            },
                            "dp-id": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "Faucet dataplane id",
                              "optional": true
                            },
                            "exitnodes": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "List of cluster node names.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-node-list"
                              }
                            },
                            "exitnodes-local-routing": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Allow exitnodes to connect to evpn guests",
                              "optional": true
                            },
                            "exitnodes-primary": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Force traffic to this exitnode first.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "fabric": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "SDN fabric to use as underlay for this VXLAN zone.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-sdn-fabric-id"
                              }
                            },
                            "ipam": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "use a specific ipam",
                              "optional": true
                            },
                            "lock-token": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "the token for unlocking the global SDN configuration",
                              "optional": true
                            },
                            "mac": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Anycast logical router mac address",
                              "optional": true,
                              "constraints": {
                                "format": "mac-addr"
                              }
                            },
                            "mtu": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "MTU",
                              "optional": true
                            },
                            "nodes": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "List of cluster node names.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-node-list"
                              }
                            },
                            "peers": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "peers address list.",
                              "optional": true,
                              "constraints": {
                                "format": "ip-list"
                              }
                            },
                            "reversedns": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "reverse dns api server",
                              "optional": true
                            },
                            "rt-import": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Route-Target import",
                              "optional": true,
                              "constraints": {
                                "format": "pve-sdn-bgp-rt-list"
                              }
                            },
                            "tag": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Service-VLAN Tag",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "vlan-protocol": {
                              "type": "string",
                              "optional": true,
                              "defaultValue": "802.1q",
                              "enum": [
                                "802.1q",
                                "802.1ad"
                              ]
                            },
                            "vrf-vxlan": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "l3vni.",
                              "optional": true
                            },
                            "vxlan-port": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 65536)",
                              "description": "Vxlan tunnel udp port (default 4789).",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 65536
                              }
                            },
                            "zone": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The SDN zone object identifier.",
                              "constraints": {
                                "format": "pve-sdn-zone-id"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "id": "cluster-status",
          "path": "/cluster/status",
          "slug": "cluster-status",
          "label": "status",
          "endpoints": [
            {
              "id": "get-cluster-status",
              "operationId": "get-cluster-status",
              "path": "/cluster/status",
              "httpMethod": "GET",
              "name": "get_status",
              "description": "Get cluster status information.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/",
                        [
                          "Sys.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "ip": {
                          "type": "string",
                          "description": "[node] IP of the resolved nodename.",
                          "optional": true
                        },
                        "level": {
                          "type": "string",
                          "description": "[node] Proxmox VE Subscription level, indicates if eligible for enterprise support as well as access to the stable Proxmox VE Enterprise Repository.",
                          "optional": true
                        },
                        "local": {
                          "type": "boolean",
                          "description": "[node] Indicates if this is the responding node.",
                          "optional": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "nodeid": {
                          "type": "integer",
                          "description": "[node] ID of the node from the corosync configuration.",
                          "optional": true
                        },
                        "nodes": {
                          "type": "integer",
                          "description": "[cluster] Nodes count, including offline nodes.",
                          "optional": true
                        },
                        "online": {
                          "type": "boolean",
                          "description": "[node] Indicates if the node is online or offline.",
                          "optional": true
                        },
                        "quorate": {
                          "type": "boolean",
                          "description": "[cluster] Indicates if there is a majority of nodes online to make decisions",
                          "optional": true
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates the type, either cluster or node. The type defines the object properties e.g. quorate available for type cluster.",
                          "enum": [
                            "cluster",
                            "node"
                          ]
                        },
                        "version": {
                          "type": "integer",
                          "description": "[cluster] Current version of the corosync configuration file.",
                          "optional": true
                        }
                      }
                    }
                  }
                }
              ]
            }
          ],
          "children": []
        },
        {
          "id": "cluster-tasks",
          "path": "/cluster/tasks",
          "slug": "cluster-tasks",
          "label": "tasks",
          "endpoints": [
            {
              "id": "get-cluster-tasks",
              "operationId": "get-cluster-tasks",
              "path": "/cluster/tasks",
              "httpMethod": "GET",
              "name": "tasks",
              "description": "List recent tasks (cluster wide).",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "upid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            }
          ],
          "children": []
        }
      ]
    },
    {
      "id": "nodes",
      "path": "/nodes",
      "slug": "nodes",
      "label": "nodes",
      "endpoints": [
        {
          "id": "get-nodes",
          "operationId": "get-nodes",
          "path": "/nodes",
          "httpMethod": "GET",
          "name": "index",
          "description": "Cluster node index.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": false,
            "permissions": {
              "all": [
                {
                  "user": "all"
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "number",
                      "description": "CPU utilization.",
                      "optional": true,
                      "metadata": {
                        "renderer": "fraction_as_percentage"
                      }
                    },
                    "level": {
                      "type": "string",
                      "description": "Support level.",
                      "optional": true
                    },
                    "maxcpu": {
                      "type": "integer",
                      "description": "Number of available CPUs.",
                      "optional": true
                    },
                    "maxmem": {
                      "type": "integer",
                      "description": "Number of available memory in bytes.",
                      "optional": true,
                      "metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "mem": {
                      "type": "integer",
                      "description": "Used memory in bytes.",
                      "optional": true,
                      "metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "node": {
                      "type": "string",
                      "description": "The cluster node name.",
                      "constraints": {
                        "format": "pve-node"
                      }
                    },
                    "ssl_fingerprint": {
                      "type": "string",
                      "description": "The SSL fingerprint for the node certificate.",
                      "optional": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Node status.",
                      "enum": [
                        "unknown",
                        "online",
                        "offline"
                      ]
                    },
                    "uptime": {
                      "type": "integer",
                      "description": "Node uptime in seconds.",
                      "optional": true,
                      "metadata": {
                        "renderer": "duration"
                      }
                    }
                  }
                },
                "metadata": {
                  "links": [
                    {
                      "href": "{node}",
                      "rel": "child"
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "children": [
        {
          "id": "nodes-node",
          "path": "/nodes/{node}",
          "slug": "nodes-node",
          "label": "{node}",
          "endpoints": [
            {
              "id": "get-nodes-node",
              "operationId": "get-nodes-node",
              "path": "/nodes/{node}",
              "httpMethod": "GET",
              "name": "index",
              "description": "Node index.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "user": "all"
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "node": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The cluster node name.",
                      "constraints": {
                        "format": "pve-node"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "metadata": {
                      "links": [
                        {
                          "href": "{name}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "children": [
            {
              "id": "nodes-node-aplinfo",
              "path": "/nodes/{node}/aplinfo",
              "slug": "nodes-node-aplinfo",
              "label": "aplinfo",
              "endpoints": [
                {
                  "id": "get-nodes-node-aplinfo",
                  "operationId": "get-nodes-node-aplinfo",
                  "path": "/nodes/{node}/aplinfo",
                  "httpMethod": "GET",
                  "name": "aplinfo",
                  "description": "Get list of appliances.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-aplinfo",
                  "operationId": "post-nodes-node-aplinfo",
                  "path": "/nodes/{node}/aplinfo",
                  "httpMethod": "POST",
                  "name": "apl_download",
                  "description": "Download appliance templates.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/storage/{storage}",
                            [
                              "Datastore.AllocateTemplate"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "The storage where the template will be stored",
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "template": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The template which will downloaded",
                          "constraints": {
                            "maxLength": 255
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-apt",
              "path": "/nodes/{node}/apt",
              "slug": "nodes-node-apt",
              "label": "apt",
              "endpoints": [
                {
                  "id": "get-nodes-node-apt",
                  "operationId": "get-nodes-node-apt",
                  "path": "/nodes/{node}/apt",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Directory index for apt (Advanced Package Tool).",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-apt-changelog",
                  "path": "/nodes/{node}/apt/changelog",
                  "slug": "nodes-node-apt-changelog",
                  "label": "changelog",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-apt-changelog",
                      "operationId": "get-nodes-node-apt-changelog",
                      "path": "/nodes/{node}/apt/changelog",
                      "httpMethod": "GET",
                      "name": "changelog",
                      "description": "Get package changelogs.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Package name."
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "version": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Package version.",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-apt-repositories",
                  "path": "/nodes/{node}/apt/repositories",
                  "slug": "nodes-node-apt-repositories",
                  "label": "repositories",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-apt-repositories",
                      "operationId": "get-nodes-node-apt-repositories",
                      "path": "/nodes/{node}/apt/repositories",
                      "httpMethod": "GET",
                      "name": "repositories",
                      "description": "Get APT repository information.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "description": "Result from parsing the APT repository files in /etc/apt/.",
                          "schema": {
                            "type": "object",
                            "description": "Result from parsing the APT repository files in /etc/apt/.",
                            "properties": {
                              "digest": {
                                "type": "string",
                                "description": "Common digest of all files."
                              },
                              "errors": {
                                "type": "array",
                                "description": "List of problematic repository files.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "error": {
                                      "type": "string",
                                      "description": "The error message"
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path to the problematic file."
                                    }
                                  }
                                }
                              },
                              "files": {
                                "type": "array",
                                "description": "List of parsed repository files.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "digest": {
                                      "type": "array",
                                      "description": "Digest of the file as bytes.",
                                      "items": {
                                        "type": "integer"
                                      }
                                    },
                                    "file-type": {
                                      "type": "string",
                                      "description": "Format of the file.",
                                      "enum": [
                                        "list",
                                        "sources"
                                      ]
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path to the problematic file."
                                    },
                                    "repositories": {
                                      "type": "array",
                                      "description": "The parsed repositories.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "Comment": {
                                            "type": "string",
                                            "description": "Associated comment",
                                            "optional": true
                                          },
                                          "Components": {
                                            "type": "array",
                                            "description": "List of repository components",
                                            "optional": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "Enabled": {
                                            "type": "boolean",
                                            "description": "Whether the repository is enabled or not"
                                          },
                                          "FileType": {
                                            "type": "string",
                                            "description": "Format of the defining file.",
                                            "enum": [
                                              "list",
                                              "sources"
                                            ]
                                          },
                                          "Options": {
                                            "type": "array",
                                            "description": "Additional options",
                                            "optional": true,
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "Key": {
                                                  "type": "string"
                                                },
                                                "Values": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "Suites": {
                                            "type": "array",
                                            "description": "List of package distribuitions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "Types": {
                                            "type": "array",
                                            "description": "List of package types.",
                                            "items": {
                                              "type": "string",
                                              "enum": [
                                                "deb",
                                                "deb-src"
                                              ]
                                            }
                                          },
                                          "URIs": {
                                            "type": "array",
                                            "description": "List of repository URIs.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "infos": {
                                "type": "array",
                                "description": "Additional information/warnings for APT repositories.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "index": {
                                      "type": "string",
                                      "description": "Index of the associated repository within the file."
                                    },
                                    "kind": {
                                      "type": "string",
                                      "description": "Kind of the information (e.g. warning)."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "Information message."
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path to the associated file."
                                    },
                                    "property": {
                                      "type": "string",
                                      "description": "Property from which the info originates.",
                                      "optional": true
                                    }
                                  }
                                }
                              },
                              "standard-repos": {
                                "type": "array",
                                "description": "List of standard repositories and their configuration status",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "handle": {
                                      "type": "string",
                                      "description": "Handle to identify the repository."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Full name of the repository."
                                    },
                                    "status": {
                                      "type": "boolean",
                                      "description": "Indicating enabled/disabled status, if the repository is configured.",
                                      "optional": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-apt-repositories",
                      "operationId": "post-nodes-node-apt-repositories",
                      "path": "/nodes/{node}/apt/repositories",
                      "httpMethod": "POST",
                      "name": "change_repository",
                      "description": "Change the properties of a repository. Currently only allows enabling/disabling.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Digest to detect modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 80
                              }
                            },
                            "enabled": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Whether the repository should be enabled or not.",
                              "optional": true
                            },
                            "index": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "Index within the file (starting from 0)."
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "path": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Path to the containing file."
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-nodes-node-apt-repositories",
                      "operationId": "put-nodes-node-apt-repositories",
                      "path": "/nodes/{node}/apt/repositories",
                      "httpMethod": "PUT",
                      "name": "add_repository",
                      "description": "Add a standard repository to the configuration",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Digest to detect modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 80
                              }
                            },
                            "handle": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Handle that identifies a repository."
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-apt-update",
                  "path": "/nodes/{node}/apt/update",
                  "slug": "nodes-node-apt-update",
                  "label": "update",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-apt-update",
                      "operationId": "get-nodes-node-apt-update",
                      "path": "/nodes/{node}/apt/update",
                      "httpMethod": "GET",
                      "name": "list_updates",
                      "description": "List available updates.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-apt-update",
                      "operationId": "post-nodes-node-apt-update",
                      "path": "/nodes/{node}/apt/update",
                      "httpMethod": "POST",
                      "name": "update_database",
                      "description": "This is used to resynchronize the package index files from their sources (apt-get update).",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "notify": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Send notification about new packages.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "quiet": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Only produces output suitable for logging, omitting progress indicators.",
                              "optional": true,
                              "defaultValue": 0
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-apt-versions",
                  "path": "/nodes/{node}/apt/versions",
                  "slug": "nodes-node-apt-versions",
                  "label": "versions",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-apt-versions",
                      "operationId": "get-nodes-node-apt-versions",
                      "path": "/nodes/{node}/apt/versions",
                      "httpMethod": "GET",
                      "name": "versions",
                      "description": "Get package information for important Proxmox packages.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-capabilities",
              "path": "/nodes/{node}/capabilities",
              "slug": "nodes-node-capabilities",
              "label": "capabilities",
              "endpoints": [
                {
                  "id": "get-nodes-node-capabilities",
                  "operationId": "get-nodes-node-capabilities",
                  "path": "/nodes/{node}/capabilities",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Node capabilities index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-capabilities-qemu",
                  "path": "/nodes/{node}/capabilities/qemu",
                  "slug": "nodes-node-capabilities-qemu",
                  "label": "qemu",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-capabilities-qemu",
                      "operationId": "get-nodes-node-capabilities-qemu",
                      "path": "/nodes/{node}/capabilities/qemu",
                      "httpMethod": "GET",
                      "name": "qemu_caps_index",
                      "description": "QEMU capabilities index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-capabilities-qemu-cpu",
                      "path": "/nodes/{node}/capabilities/qemu/cpu",
                      "slug": "nodes-node-capabilities-qemu-cpu",
                      "label": "cpu",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-capabilities-qemu-cpu",
                          "operationId": "get-nodes-node-capabilities-qemu-cpu",
                          "path": "/nodes/{node}/capabilities/qemu/cpu",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "List all custom and default CPU models.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Only returns custom models when the current user has Sys.Audit on /nodes.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "custom": {
                                      "type": "boolean",
                                      "description": "True if this is a custom CPU model."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the CPU model. Identifies it for subsequent API calls. Prefixed with 'custom-' for custom models."
                                    },
                                    "vendor": {
                                      "type": "string",
                                      "description": "CPU vendor visible to the guest when this model is selected. Vendor of 'reported-model' in case of custom models."
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-capabilities-qemu-machines",
                      "path": "/nodes/{node}/capabilities/qemu/machines",
                      "slug": "nodes-node-capabilities-qemu-machines",
                      "label": "machines",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-capabilities-qemu-machines",
                          "operationId": "get-nodes-node-capabilities-qemu-machines",
                          "path": "/nodes/{node}/capabilities/qemu/machines",
                          "httpMethod": "GET",
                          "name": "types",
                          "description": "Get available QEMU/KVM machine types.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "changes": {
                                      "type": "string",
                                      "description": "Notable changes of a version, currently only set for +pveX versions.",
                                      "optional": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "Full name of machine type and version."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The machine type.",
                                      "enum": [
                                        "q35",
                                        "i440fx"
                                      ]
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "The machine version."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-capabilities-qemu-migration",
                      "path": "/nodes/{node}/capabilities/qemu/migration",
                      "slug": "nodes-node-capabilities-qemu-migration",
                      "label": "migration",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-capabilities-qemu-migration",
                          "operationId": "get-nodes-node-capabilities-qemu-migration",
                          "path": "/nodes/{node}/capabilities/qemu/migration",
                          "httpMethod": "GET",
                          "name": "capabilities",
                          "description": "Get node-specific QEMU migration capabilities of the node. Requires the 'Sys.Audit' permission on '/nodes/<node>'.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "dbus-vmstate": {
                                    "type": "boolean",
                                    "description": "Whether the host supports live-migrating additional VM state via the dbus-vmstate helper."
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-ceph",
              "path": "/nodes/{node}/ceph",
              "slug": "nodes-node-ceph",
              "label": "ceph",
              "endpoints": [
                {
                  "id": "get-nodes-node-ceph",
                  "operationId": "get-nodes-node-ceph",
                  "path": "/nodes/{node}/ceph",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Directory index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit",
                              "Datastore.Audit"
                            ],
                            "any",
                            1
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-ceph-cfg",
                  "path": "/nodes/{node}/ceph/cfg",
                  "slug": "nodes-node-ceph-cfg",
                  "label": "cfg",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-cfg",
                      "operationId": "get-nodes-node-ceph-cfg",
                      "path": "/nodes/{node}/ceph/cfg",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "Directory index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-cfg-db",
                      "path": "/nodes/{node}/ceph/cfg/db",
                      "slug": "nodes-node-ceph-cfg-db",
                      "label": "db",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-ceph-cfg-db",
                          "operationId": "get-nodes-node-ceph-cfg-db",
                          "path": "/nodes/{node}/ceph/cfg/db",
                          "httpMethod": "GET",
                          "name": "db",
                          "description": "Get the Ceph configuration database.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Datastore.Audit"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "can_update_at_runtime": {
                                      "type": "boolean"
                                    },
                                    "level": {
                                      "type": "string"
                                    },
                                    "mask": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "section": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-ceph-cfg-raw",
                      "path": "/nodes/{node}/ceph/cfg/raw",
                      "slug": "nodes-node-ceph-cfg-raw",
                      "label": "raw",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-ceph-cfg-raw",
                          "operationId": "get-nodes-node-ceph-cfg-raw",
                          "path": "/nodes/{node}/ceph/cfg/raw",
                          "httpMethod": "GET",
                          "name": "raw",
                          "description": "Get the Ceph configuration file.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Datastore.Audit"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-ceph-cfg-value",
                      "path": "/nodes/{node}/ceph/cfg/value",
                      "slug": "nodes-node-ceph-cfg-value",
                      "label": "value",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-ceph-cfg-value",
                          "operationId": "get-nodes-node-ceph-cfg-value",
                          "path": "/nodes/{node}/ceph/cfg/value",
                          "httpMethod": "GET",
                          "name": "value",
                          "description": "Get configured values from either the config file or config DB.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "config-keys": {
                                  "type": "string",
                                  "typetext": "<section>:<config key>[;<section>:<config key>]",
                                  "description": "List of <section>:<config key> items.",
                                  "constraints": {
                                    "pattern": "(?^:^(:?(?^i:[0-9a-z\\-_\\.]+:[0-9a-zA-Z\\-_]+))(:?[;, ](?^i:[0-9a-z\\-_\\.]+:[0-9a-zA-Z\\-_]+))*$)"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Contains {section}->{key} children with the values",
                              "schema": {
                                "type": "object",
                                "description": "Contains {section}->{key} children with the values"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-cmd-safety",
                  "path": "/nodes/{node}/ceph/cmd-safety",
                  "slug": "nodes-node-ceph-cmd-safety",
                  "label": "cmd-safety",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-cmd-safety",
                      "operationId": "get-nodes-node-ceph-cmd-safety",
                      "path": "/nodes/{node}/ceph/cmd-safety",
                      "httpMethod": "GET",
                      "name": "cmd_safety",
                      "description": "Heuristical check if it is safe to perform an action.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "action": {
                              "type": "string",
                              "description": "Action to check",
                              "enum": [
                                "stop",
                                "destroy"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "ID of the service"
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "Service type",
                              "enum": [
                                "osd",
                                "mon",
                                "mds"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "safe": {
                                "type": "boolean",
                                "description": "If it is safe to run the command."
                              },
                              "status": {
                                "type": "string",
                                "description": "Status message given by Ceph.",
                                "optional": true
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-crush",
                  "path": "/nodes/{node}/ceph/crush",
                  "slug": "nodes-node-ceph-crush",
                  "label": "crush",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-crush",
                      "operationId": "get-nodes-node-ceph-crush",
                      "path": "/nodes/{node}/ceph/crush",
                      "httpMethod": "GET",
                      "name": "crush",
                      "description": "Get OSD crush map",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-fs",
                  "path": "/nodes/{node}/ceph/fs",
                  "slug": "nodes-node-ceph-fs",
                  "label": "fs",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-fs",
                      "operationId": "get-nodes-node-ceph-fs",
                      "path": "/nodes/{node}/ceph/fs",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "Directory index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "data_pool": {
                                  "type": "string",
                                  "description": "The name of the data pool."
                                },
                                "metadata_pool": {
                                  "type": "string",
                                  "description": "The name of the metadata pool."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The ceph filesystem name."
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-fs-name",
                      "path": "/nodes/{node}/ceph/fs/{name}",
                      "slug": "nodes-node-ceph-fs-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-ceph-fs-name",
                          "operationId": "post-nodes-node-ceph-fs-name",
                          "path": "/nodes/{node}/ceph/fs/{name}",
                          "httpMethod": "POST",
                          "name": "createfs",
                          "description": "Create a Ceph filesystem",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "add-storage": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Configure the created CephFS as storage for this cluster.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The ceph filesystem name.",
                                  "optional": true,
                                  "defaultValue": "cephfs",
                                  "constraints": {
                                    "pattern": "(?^:^[^:/\\s]+$)"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pg_num": {
                                  "type": "integer",
                                  "typetext": "<integer> (8 - 32768)",
                                  "description": "Number of placement groups for the backing data pool. The metadata pool will use a quarter of this.",
                                  "optional": true,
                                  "defaultValue": 128,
                                  "constraints": {
                                    "minimum": 8,
                                    "maximum": 32768
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-init",
                  "path": "/nodes/{node}/ceph/init",
                  "slug": "nodes-node-ceph-init",
                  "label": "init",
                  "endpoints": [
                    {
                      "id": "post-nodes-node-ceph-init",
                      "operationId": "post-nodes-node-ceph-init",
                      "path": "/nodes/{node}/ceph/init",
                      "httpMethod": "POST",
                      "name": "init",
                      "description": "Create initial ceph default configuration and setup symlinks.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "cluster-network": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Declare a separate cluster network, OSDs will routeheartbeat, object replication and recovery traffic over it",
                              "optional": true,
                              "constraints": {
                                "maxLength": 128,
                                "format": "CIDR",
                                "requires": [
                                  "network"
                                ]
                              }
                            },
                            "disable_cephx": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Disable cephx authentication.\n\nWARNING: cephx is a security feature protecting against man-in-the-middle attacks. Only consider disabling cephx if your network is private!",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "min_size": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 7)",
                              "description": "Minimum number of available replicas per object to allow I/O",
                              "optional": true,
                              "defaultValue": 2,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 7
                              }
                            },
                            "network": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Use specific network for all ceph related traffic",
                              "optional": true,
                              "constraints": {
                                "maxLength": 128,
                                "format": "CIDR"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "pg_bits": {
                              "type": "integer",
                              "typetext": "<integer> (6 - 14)",
                              "description": "Placement group bits, used to specify the default number of placement groups.\n\nDepreacted. This setting was deprecated in recent Ceph versions.",
                              "optional": true,
                              "defaultValue": 6,
                              "constraints": {
                                "minimum": 6,
                                "maximum": 14
                              }
                            },
                            "size": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 7)",
                              "description": "Targeted number of replicas per object",
                              "optional": true,
                              "defaultValue": 3,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 7
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-log",
                  "path": "/nodes/{node}/ceph/log",
                  "slug": "nodes-node-ceph-log",
                  "label": "log",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-log",
                      "operationId": "get-nodes-node-ceph-log",
                      "path": "/nodes/{node}/ceph/log",
                      "httpMethod": "GET",
                      "name": "log",
                      "description": "Read ceph log",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Syslog"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "start": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "n": {
                                  "type": "integer",
                                  "description": "Line number"
                                },
                                "t": {
                                  "type": "string",
                                  "description": "Line text"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-mds",
                  "path": "/nodes/{node}/ceph/mds",
                  "slug": "nodes-node-ceph-mds",
                  "label": "mds",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-mds",
                      "operationId": "get-nodes-node-ceph-mds",
                      "path": "/nodes/{node}/ceph/mds",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "MDS directory index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addr": {
                                  "type": "string",
                                  "optional": true
                                },
                                "host": {
                                  "type": "string",
                                  "optional": true
                                },
                                "name": {
                                  "description": "The name (ID) for the MDS"
                                },
                                "rank": {
                                  "type": "integer",
                                  "optional": true
                                },
                                "standby_replay": {
                                  "type": "boolean",
                                  "description": "If true, the standby MDS is polling the active MDS for faster recovery (hot standby).",
                                  "optional": true
                                },
                                "state": {
                                  "type": "string",
                                  "description": "State of the MDS"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-mds-name",
                      "path": "/nodes/{node}/ceph/mds/{name}",
                      "slug": "nodes-node-ceph-mds-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-ceph-mds-name",
                          "operationId": "delete-nodes-node-ceph-mds-name",
                          "path": "/nodes/{node}/ceph/mds/{name}",
                          "httpMethod": "DELETE",
                          "name": "destroymds",
                          "description": "Destroy Ceph Metadata Server",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name (ID) of the mds",
                                  "constraints": {
                                    "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-ceph-mds-name",
                          "operationId": "post-nodes-node-ceph-mds-name",
                          "path": "/nodes/{node}/ceph/mds/{name}",
                          "httpMethod": "POST",
                          "name": "createmds",
                          "description": "Create Ceph Metadata Server (MDS)",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "hotstandby": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Determines whether a ceph-mds daemon should poll and replay the log of an active MDS. Faster switch on MDS failure, but needs more idle resources.",
                                  "optional": true,
                                  "defaultValue": "0"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The ID for the mds, when omitted the same as the nodename",
                                  "optional": true,
                                  "defaultValue": "nodename",
                                  "constraints": {
                                    "maxLength": 200,
                                    "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-mgr",
                  "path": "/nodes/{node}/ceph/mgr",
                  "slug": "nodes-node-ceph-mgr",
                  "label": "mgr",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-mgr",
                      "operationId": "get-nodes-node-ceph-mgr",
                      "path": "/nodes/{node}/ceph/mgr",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "MGR directory index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addr": {
                                  "type": "string",
                                  "optional": true
                                },
                                "host": {
                                  "type": "string",
                                  "optional": true
                                },
                                "name": {
                                  "description": "The name (ID) for the MGR"
                                },
                                "state": {
                                  "type": "string",
                                  "description": "State of the MGR"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-mgr-id",
                      "path": "/nodes/{node}/ceph/mgr/{id}",
                      "slug": "nodes-node-ceph-mgr-id",
                      "label": "{id}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-ceph-mgr-id",
                          "operationId": "delete-nodes-node-ceph-mgr-id",
                          "path": "/nodes/{node}/ceph/mgr/{id}",
                          "httpMethod": "DELETE",
                          "name": "destroymgr",
                          "description": "Destroy Ceph Manager.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the manager",
                                  "constraints": {
                                    "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-ceph-mgr-id",
                          "operationId": "post-nodes-node-ceph-mgr-id",
                          "path": "/nodes/{node}/ceph/mgr/{id}",
                          "httpMethod": "POST",
                          "name": "createmgr",
                          "description": "Create Ceph Manager",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID for the manager, when omitted the same as the nodename",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 200,
                                    "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-mon",
                  "path": "/nodes/{node}/ceph/mon",
                  "slug": "nodes-node-ceph-mon",
                  "label": "mon",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-mon",
                      "operationId": "get-nodes-node-ceph-mon",
                      "path": "/nodes/{node}/ceph/mon",
                      "httpMethod": "GET",
                      "name": "listmon",
                      "description": "Get Ceph monitor list.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addr": {
                                  "type": "string",
                                  "optional": true
                                },
                                "ceph_version": {
                                  "type": "string",
                                  "optional": true
                                },
                                "ceph_version_short": {
                                  "type": "string",
                                  "optional": true
                                },
                                "direxists": {
                                  "type": "string",
                                  "optional": true
                                },
                                "host": {
                                  "type": "boolean",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string"
                                },
                                "quorum": {
                                  "type": "boolean",
                                  "optional": true
                                },
                                "rank": {
                                  "type": "integer",
                                  "optional": true
                                },
                                "service": {
                                  "type": "integer",
                                  "optional": true
                                },
                                "state": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-mon-monid",
                      "path": "/nodes/{node}/ceph/mon/{monid}",
                      "slug": "nodes-node-ceph-mon-monid",
                      "label": "{monid}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-ceph-mon-monid",
                          "operationId": "delete-nodes-node-ceph-mon-monid",
                          "path": "/nodes/{node}/ceph/mon/{monid}",
                          "httpMethod": "DELETE",
                          "name": "destroymon",
                          "description": "Destroy Ceph Monitor and Manager.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "monid": {
                                  "type": "string",
                                  "description": "Monitor ID",
                                  "constraints": {
                                    "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-ceph-mon-monid",
                          "operationId": "post-nodes-node-ceph-mon-monid",
                          "path": "/nodes/{node}/ceph/mon/{monid}",
                          "httpMethod": "POST",
                          "name": "createmon",
                          "description": "Create Ceph Monitor and Manager",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "mon-address": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Overwrites autodetected monitor IP address(es). Must be in the public network(s) of Ceph.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "ip-list"
                                  }
                                },
                                "monid": {
                                  "type": "string",
                                  "description": "The ID for the monitor, when omitted the same as the nodename",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 200,
                                    "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-osd",
                  "path": "/nodes/{node}/ceph/osd",
                  "slug": "nodes-node-ceph-osd",
                  "label": "osd",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-osd",
                      "operationId": "get-nodes-node-ceph-osd",
                      "path": "/nodes/{node}/ceph/osd",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "Get Ceph osd list/tree.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "items": {
                              "type": "object",
                              "properties": {
                                "flags": {
                                  "type": "string"
                                },
                                "root": {
                                  "type": "object",
                                  "description": "Tree with OSDs in the CRUSH map structure."
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-ceph-osd",
                      "operationId": "post-nodes-node-ceph-osd",
                      "path": "/nodes/{node}/ceph/osd",
                      "httpMethod": "POST",
                      "name": "createosd",
                      "description": "Create OSD",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "crush-device-class": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Set the device class of the OSD in crush.",
                              "optional": true
                            },
                            "db_dev": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Block device name for block.db.",
                              "optional": true
                            },
                            "db_dev_size": {
                              "type": "number",
                              "typetext": "<number> (1 - N)",
                              "description": "Size in GiB for block.db.",
                              "verboseDescription": "If a block.db is requested but the size is not given, will be automatically selected by: bluestore_block_db_size from the ceph database (osd or global section) or config (osd or global section) in that order. If this is not available, it will be sized 10% of the size of the OSD device. Fails if the available size is not enough.",
                              "optional": true,
                              "defaultValue": "bluestore_block_db_size or 10% of OSD size",
                              "constraints": {
                                "minimum": 1,
                                "requires": [
                                  "db_dev"
                                ]
                              }
                            },
                            "dev": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Block device name."
                            },
                            "encrypted": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enables encryption of the OSD.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "osds-per-device": {
                              "type": "integer",
                              "typetext": "<integer> (1 - N)",
                              "description": "OSD services per physical device. Only useful for fast NVMe devices\"\n\t\t    .\" to utilize their performance better.",
                              "optional": true
                            },
                            "wal_dev": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Block device name for block.wal.",
                              "optional": true
                            },
                            "wal_dev_size": {
                              "type": "number",
                              "typetext": "<number> (0.5 - N)",
                              "description": "Size in GiB for block.wal.",
                              "verboseDescription": "If a block.wal is requested but the size is not given, will be automatically selected by: bluestore_block_wal_size from the ceph database (osd or global section) or config (osd or global section) in that order. If this is not available, it will be sized 1% of the size of the OSD device. Fails if the available size is not enough.",
                              "optional": true,
                              "defaultValue": "bluestore_block_wal_size or 1% of OSD size",
                              "constraints": {
                                "minimum": 0.5,
                                "requires": [
                                  "wal_dev"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-osd-osdid",
                      "path": "/nodes/{node}/ceph/osd/{osdid}",
                      "slug": "nodes-node-ceph-osd-osdid",
                      "label": "{osdid}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-ceph-osd-osdid",
                          "operationId": "delete-nodes-node-ceph-osd-osdid",
                          "path": "/nodes/{node}/ceph/osd/{osdid}",
                          "httpMethod": "DELETE",
                          "name": "destroyosd",
                          "description": "Destroy OSD",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cleanup": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "If set, we remove partition table entries.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "osdid": {
                                  "type": "integer",
                                  "typetext": "<integer>",
                                  "description": "OSD ID"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-nodes-node-ceph-osd-osdid",
                          "operationId": "get-nodes-node-ceph-osd-osdid",
                          "path": "/nodes/{node}/ceph/osd/{osdid}",
                          "httpMethod": "GET",
                          "name": "osdindex",
                          "description": "OSD index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "osdid": {
                                  "type": "integer",
                                  "typetext": "<integer>",
                                  "description": "OSD ID"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-ceph-osd-osdid-in",
                          "path": "/nodes/{node}/ceph/osd/{osdid}/in",
                          "slug": "nodes-node-ceph-osd-osdid-in",
                          "label": "in",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-ceph-osd-osdid-in",
                              "operationId": "post-nodes-node-ceph-osd-osdid-in",
                              "path": "/nodes/{node}/ceph/osd/{osdid}/in",
                              "httpMethod": "POST",
                              "name": "in",
                              "description": "ceph osd in",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Modify"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "osdid": {
                                      "type": "integer",
                                      "typetext": "<integer>",
                                      "description": "OSD ID"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-ceph-osd-osdid-lv-info",
                          "path": "/nodes/{node}/ceph/osd/{osdid}/lv-info",
                          "slug": "nodes-node-ceph-osd-osdid-lv-info",
                          "label": "lv-info",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-ceph-osd-osdid-lv-info",
                              "operationId": "get-nodes-node-ceph-osd-osdid-lv-info",
                              "path": "/nodes/{node}/ceph/osd/{osdid}/lv-info",
                              "httpMethod": "GET",
                              "name": "osdvolume",
                              "description": "Get OSD volume details",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "osdid": {
                                      "type": "integer",
                                      "typetext": "<integer>",
                                      "description": "OSD ID"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "OSD device type",
                                      "optional": true,
                                      "defaultValue": "block",
                                      "enum": [
                                        "block",
                                        "db",
                                        "wal"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "creation_time": {
                                        "type": "string",
                                        "description": "Creation time as reported by `lvs`."
                                      },
                                      "lv_name": {
                                        "type": "string",
                                        "description": "Name of the logical volume (LV)."
                                      },
                                      "lv_path": {
                                        "type": "string",
                                        "description": "Path to the logical volume (LV)."
                                      },
                                      "lv_size": {
                                        "type": "integer",
                                        "description": "Size of the logical volume (LV)."
                                      },
                                      "lv_uuid": {
                                        "type": "string",
                                        "description": "UUID of the logical volume (LV)."
                                      },
                                      "vg_name": {
                                        "type": "string",
                                        "description": "Name of the volume group (VG)."
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-ceph-osd-osdid-metadata",
                          "path": "/nodes/{node}/ceph/osd/{osdid}/metadata",
                          "slug": "nodes-node-ceph-osd-osdid-metadata",
                          "label": "metadata",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-ceph-osd-osdid-metadata",
                              "operationId": "get-nodes-node-ceph-osd-osdid-metadata",
                              "path": "/nodes/{node}/ceph/osd/{osdid}/metadata",
                              "httpMethod": "GET",
                              "name": "osddetails",
                              "description": "Get OSD details",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "osdid": {
                                      "type": "integer",
                                      "typetext": "<integer>",
                                      "description": "OSD ID"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "devices": {
                                        "type": "array",
                                        "description": "Array containing data about devices",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "dev_node": {
                                              "type": "string",
                                              "description": "Device node"
                                            },
                                            "device": {
                                              "type": "string",
                                              "description": "Kind of OSD device",
                                              "enum": [
                                                "block",
                                                "db",
                                                "wal"
                                              ]
                                            },
                                            "devices": {
                                              "type": "string",
                                              "description": "Physical disks used"
                                            },
                                            "size": {
                                              "type": "integer",
                                              "description": "Size in bytes"
                                            },
                                            "support_discard": {
                                              "type": "boolean",
                                              "description": "Discard support of the physical device"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type of device. For example, hdd or ssd"
                                            }
                                          }
                                        }
                                      },
                                      "osd": {
                                        "type": "object",
                                        "description": "General information about the OSD",
                                        "properties": {
                                          "back_addr": {
                                            "type": "string",
                                            "description": "Address and port used to talk to other OSDs."
                                          },
                                          "front_addr": {
                                            "type": "string",
                                            "description": "Address and port used to talk to clients and monitors."
                                          },
                                          "hb_back_addr": {
                                            "type": "string",
                                            "description": "Heartbeat address and port for other OSDs."
                                          },
                                          "hb_front_addr": {
                                            "type": "string",
                                            "description": "Heartbeat address and port for clients and monitors."
                                          },
                                          "hostname": {
                                            "type": "string",
                                            "description": "Name of the host containing the OSD."
                                          },
                                          "id": {
                                            "type": "integer",
                                            "description": "ID of the OSD."
                                          },
                                          "mem_usage": {
                                            "type": "integer",
                                            "description": "Memory usage of the OSD service."
                                          },
                                          "osd_data": {
                                            "type": "string",
                                            "description": "Path to the OSD's data directory."
                                          },
                                          "osd_objectstore": {
                                            "type": "string",
                                            "description": "The type of object store used."
                                          },
                                          "pid": {
                                            "type": "integer",
                                            "description": "OSD process ID."
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Ceph version of the OSD service."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-ceph-osd-osdid-out",
                          "path": "/nodes/{node}/ceph/osd/{osdid}/out",
                          "slug": "nodes-node-ceph-osd-osdid-out",
                          "label": "out",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-ceph-osd-osdid-out",
                              "operationId": "post-nodes-node-ceph-osd-osdid-out",
                              "path": "/nodes/{node}/ceph/osd/{osdid}/out",
                              "httpMethod": "POST",
                              "name": "out",
                              "description": "ceph osd out",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Modify"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "osdid": {
                                      "type": "integer",
                                      "typetext": "<integer>",
                                      "description": "OSD ID"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-ceph-osd-osdid-scrub",
                          "path": "/nodes/{node}/ceph/osd/{osdid}/scrub",
                          "slug": "nodes-node-ceph-osd-osdid-scrub",
                          "label": "scrub",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-ceph-osd-osdid-scrub",
                              "operationId": "post-nodes-node-ceph-osd-osdid-scrub",
                              "path": "/nodes/{node}/ceph/osd/{osdid}/scrub",
                              "httpMethod": "POST",
                              "name": "scrub",
                              "description": "Instruct the OSD to scrub.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Modify"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "deep": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "If set, instructs a deep scrub instead of a normal one.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "osdid": {
                                      "type": "integer",
                                      "typetext": "<integer>",
                                      "description": "OSD ID"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-pool",
                  "path": "/nodes/{node}/ceph/pool",
                  "slug": "nodes-node-ceph-pool",
                  "label": "pool",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-pool",
                      "operationId": "get-nodes-node-ceph-pool",
                      "path": "/nodes/{node}/ceph/pool",
                      "httpMethod": "GET",
                      "name": "lspools",
                      "description": "List all pools and their settings (which are settable by the POST/PUT endpoints).",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "application_metadata": {
                                  "type": "object",
                                  "optional": true,
                                  "metadata": {
                                    "title": "Associated Applications"
                                  }
                                },
                                "autoscale_status": {
                                  "type": "object",
                                  "optional": true,
                                  "metadata": {
                                    "title": "Autoscale Status"
                                  }
                                },
                                "bytes_used": {
                                  "type": "integer",
                                  "metadata": {
                                    "title": "Used"
                                  }
                                },
                                "crush_rule": {
                                  "type": "integer",
                                  "metadata": {
                                    "title": "Crush Rule"
                                  }
                                },
                                "crush_rule_name": {
                                  "type": "string",
                                  "metadata": {
                                    "title": "Crush Rule Name"
                                  }
                                },
                                "min_size": {
                                  "type": "integer",
                                  "metadata": {
                                    "title": "Min Size"
                                  }
                                },
                                "percent_used": {
                                  "type": "number",
                                  "metadata": {
                                    "title": "%-Used"
                                  }
                                },
                                "pg_autoscale_mode": {
                                  "type": "string",
                                  "optional": true,
                                  "metadata": {
                                    "title": "PG Autoscale Mode"
                                  }
                                },
                                "pg_num": {
                                  "type": "integer",
                                  "metadata": {
                                    "title": "PG Num"
                                  }
                                },
                                "pg_num_final": {
                                  "type": "integer",
                                  "optional": true,
                                  "metadata": {
                                    "title": "Optimal PG Num"
                                  }
                                },
                                "pg_num_min": {
                                  "type": "integer",
                                  "optional": true,
                                  "metadata": {
                                    "title": "min. PG Num"
                                  }
                                },
                                "pool": {
                                  "type": "integer",
                                  "metadata": {
                                    "title": "ID"
                                  }
                                },
                                "pool_name": {
                                  "type": "string",
                                  "metadata": {
                                    "title": "Name"
                                  }
                                },
                                "size": {
                                  "type": "integer",
                                  "metadata": {
                                    "title": "Size"
                                  }
                                },
                                "target_size": {
                                  "type": "integer",
                                  "optional": true,
                                  "metadata": {
                                    "title": "PG Autoscale Target Size"
                                  }
                                },
                                "target_size_ratio": {
                                  "type": "number",
                                  "optional": true,
                                  "metadata": {
                                    "title": "PG Autoscale Target Ratio"
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "replicated",
                                    "erasure",
                                    "unknown"
                                  ],
                                  "metadata": {
                                    "title": "Type"
                                  }
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{pool_name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-ceph-pool",
                      "operationId": "post-nodes-node-ceph-pool",
                      "path": "/nodes/{node}/ceph/pool",
                      "httpMethod": "POST",
                      "name": "createpool",
                      "description": "Create Ceph pool",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "add_storages": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Configure VM and CT storage using the new pool.",
                              "optional": true,
                              "defaultValue": "0; for erasure coded pools: 1"
                            },
                            "application": {
                              "type": "string",
                              "description": "The application of the pool.",
                              "optional": true,
                              "defaultValue": "rbd",
                              "enum": [
                                "rbd",
                                "cephfs",
                                "rgw"
                              ],
                              "metadata": {
                                "title": "Application"
                              }
                            },
                            "crush_rule": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The rule to use for mapping object placement in the cluster.",
                              "optional": true,
                              "metadata": {
                                "title": "Crush Rule Name"
                              }
                            },
                            "erasure-coding": {
                              "type": "string",
                              "typetext": "k=<integer> ,m=<integer> [,device-class=<class>] [,failure-domain=<domain>] [,profile=<profile>]",
                              "description": "Create an erasure coded pool for RBD with an accompaning replicated pool for metadata storage. With EC, the common ceph options 'size', 'min_size' and 'crush_rule' parameters will be applied to the metadata pool.",
                              "optional": true
                            },
                            "min_size": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 7)",
                              "description": "Minimum number of replicas per object",
                              "optional": true,
                              "defaultValue": 2,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 7
                              },
                              "metadata": {
                                "title": "Min Size"
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the pool. It must be unique.",
                              "constraints": {
                                "pattern": "(?^:^[^:/\\s]+$)"
                              },
                              "metadata": {
                                "title": "Name"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "pg_autoscale_mode": {
                              "type": "string",
                              "description": "The automatic PG scaling mode of the pool.",
                              "optional": true,
                              "defaultValue": "warn",
                              "enum": [
                                "on",
                                "off",
                                "warn"
                              ],
                              "metadata": {
                                "title": "PG Autoscale Mode"
                              }
                            },
                            "pg_num": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 32768)",
                              "description": "Number of placement groups.",
                              "optional": true,
                              "defaultValue": 128,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 32768
                              },
                              "metadata": {
                                "title": "PG Num"
                              }
                            },
                            "pg_num_min": {
                              "type": "integer",
                              "typetext": "<integer> (-N - 32768)",
                              "description": "Minimal number of placement groups.",
                              "optional": true,
                              "constraints": {
                                "maximum": 32768
                              },
                              "metadata": {
                                "title": "min. PG Num"
                              }
                            },
                            "size": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 7)",
                              "description": "Number of replicas per object",
                              "optional": true,
                              "defaultValue": 3,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 7
                              },
                              "metadata": {
                                "title": "Size"
                              }
                            },
                            "target_size": {
                              "type": "string",
                              "description": "The estimated target size of the pool for the PG autoscaler.",
                              "optional": true,
                              "constraints": {
                                "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$"
                              },
                              "metadata": {
                                "title": "PG Autoscale Target Size"
                              }
                            },
                            "target_size_ratio": {
                              "type": "number",
                              "typetext": "<number>",
                              "description": "The estimated target ratio of the pool for the PG autoscaler.",
                              "optional": true,
                              "metadata": {
                                "title": "PG Autoscale Target Ratio"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-ceph-pool-name",
                      "path": "/nodes/{node}/ceph/pool/{name}",
                      "slug": "nodes-node-ceph-pool-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-ceph-pool-name",
                          "operationId": "delete-nodes-node-ceph-pool-name",
                          "path": "/nodes/{node}/ceph/pool/{name}",
                          "httpMethod": "DELETE",
                          "name": "destroypool",
                          "description": "Destroy pool",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "If true, destroys pool even if in use",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the pool. It must be unique."
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "remove_ecprofile": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Remove the erasure code profile. Defaults to true, if applicable.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "remove_storages": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Remove all pveceph-managed storages configured for this pool",
                                  "optional": true,
                                  "defaultValue": 0
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-nodes-node-ceph-pool-name",
                          "operationId": "get-nodes-node-ceph-pool-name",
                          "path": "/nodes/{node}/ceph/pool/{name}",
                          "httpMethod": "GET",
                          "name": "poolindex",
                          "description": "Pool index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit",
                                      "Datastore.Audit"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the pool."
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-nodes-node-ceph-pool-name",
                          "operationId": "put-nodes-node-ceph-pool-name",
                          "path": "/nodes/{node}/ceph/pool/{name}",
                          "httpMethod": "PUT",
                          "name": "setpool",
                          "description": "Change POOL settings",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "application": {
                                  "type": "string",
                                  "description": "The application of the pool.",
                                  "optional": true,
                                  "enum": [
                                    "rbd",
                                    "cephfs",
                                    "rgw"
                                  ],
                                  "metadata": {
                                    "title": "Application"
                                  }
                                },
                                "crush_rule": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The rule to use for mapping object placement in the cluster.",
                                  "optional": true,
                                  "metadata": {
                                    "title": "Crush Rule Name"
                                  }
                                },
                                "min_size": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 7)",
                                  "description": "Minimum number of replicas per object",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 7
                                  },
                                  "metadata": {
                                    "title": "Min Size"
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the pool. It must be unique.",
                                  "constraints": {
                                    "pattern": "(?^:^[^:/\\s]+$)"
                                  },
                                  "metadata": {
                                    "title": "Name"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pg_autoscale_mode": {
                                  "type": "string",
                                  "description": "The automatic PG scaling mode of the pool.",
                                  "optional": true,
                                  "enum": [
                                    "on",
                                    "off",
                                    "warn"
                                  ],
                                  "metadata": {
                                    "title": "PG Autoscale Mode"
                                  }
                                },
                                "pg_num": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 32768)",
                                  "description": "Number of placement groups.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 32768
                                  },
                                  "metadata": {
                                    "title": "PG Num"
                                  }
                                },
                                "pg_num_min": {
                                  "type": "integer",
                                  "typetext": "<integer> (-N - 32768)",
                                  "description": "Minimal number of placement groups.",
                                  "optional": true,
                                  "constraints": {
                                    "maximum": 32768
                                  },
                                  "metadata": {
                                    "title": "min. PG Num"
                                  }
                                },
                                "size": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 7)",
                                  "description": "Number of replicas per object",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 7
                                  },
                                  "metadata": {
                                    "title": "Size"
                                  }
                                },
                                "target_size": {
                                  "type": "string",
                                  "description": "The estimated target size of the pool for the PG autoscaler.",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$"
                                  },
                                  "metadata": {
                                    "title": "PG Autoscale Target Size"
                                  }
                                },
                                "target_size_ratio": {
                                  "type": "number",
                                  "typetext": "<number>",
                                  "description": "The estimated target ratio of the pool for the PG autoscaler.",
                                  "optional": true,
                                  "metadata": {
                                    "title": "PG Autoscale Target Ratio"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-ceph-pool-name-status",
                          "path": "/nodes/{node}/ceph/pool/{name}/status",
                          "slug": "nodes-node-ceph-pool-name-status",
                          "label": "status",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-ceph-pool-name-status",
                              "operationId": "get-nodes-node-ceph-pool-name-status",
                              "path": "/nodes/{node}/ceph/pool/{name}/status",
                              "httpMethod": "GET",
                              "name": "getpool",
                              "description": "Show the current pool status.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Datastore.Audit"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The name of the pool. It must be unique."
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "verbose": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "If enabled, will display additional data(eg. statistics).",
                                      "optional": true,
                                      "defaultValue": 0
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "application": {
                                        "type": "string",
                                        "description": "The application of the pool.",
                                        "optional": true,
                                        "defaultValue": "rbd",
                                        "enum": [
                                          "rbd",
                                          "cephfs",
                                          "rgw"
                                        ],
                                        "metadata": {
                                          "title": "Application"
                                        }
                                      },
                                      "application_list": {
                                        "type": "array",
                                        "optional": true,
                                        "metadata": {
                                          "title": "Application"
                                        }
                                      },
                                      "autoscale_status": {
                                        "type": "object",
                                        "optional": true,
                                        "metadata": {
                                          "title": "Autoscale Status"
                                        }
                                      },
                                      "crush_rule": {
                                        "type": "string",
                                        "description": "The rule to use for mapping object placement in the cluster.",
                                        "optional": true,
                                        "metadata": {
                                          "title": "Crush Rule Name"
                                        }
                                      },
                                      "fast_read": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "Fast Read"
                                        }
                                      },
                                      "hashpspool": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "hashpspool"
                                        }
                                      },
                                      "id": {
                                        "type": "integer",
                                        "metadata": {
                                          "title": "ID"
                                        }
                                      },
                                      "min_size": {
                                        "type": "integer",
                                        "description": "Minimum number of replicas per object",
                                        "optional": true,
                                        "defaultValue": 2,
                                        "constraints": {
                                          "minimum": 1,
                                          "maximum": 7
                                        },
                                        "metadata": {
                                          "title": "Min Size"
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the pool. It must be unique.",
                                        "constraints": {
                                          "pattern": "(?^:^[^:/\\s]+$)"
                                        },
                                        "metadata": {
                                          "title": "Name"
                                        }
                                      },
                                      "nodeep-scrub": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "nodeep-scrub"
                                        }
                                      },
                                      "nodelete": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "nodelete"
                                        }
                                      },
                                      "nopgchange": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "nopgchange"
                                        }
                                      },
                                      "noscrub": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "noscrub"
                                        }
                                      },
                                      "nosizechange": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "nosizechange"
                                        }
                                      },
                                      "pg_autoscale_mode": {
                                        "type": "string",
                                        "description": "The automatic PG scaling mode of the pool.",
                                        "optional": true,
                                        "defaultValue": "warn",
                                        "enum": [
                                          "on",
                                          "off",
                                          "warn"
                                        ],
                                        "metadata": {
                                          "title": "PG Autoscale Mode"
                                        }
                                      },
                                      "pg_num": {
                                        "type": "integer",
                                        "description": "Number of placement groups.",
                                        "optional": true,
                                        "defaultValue": 128,
                                        "constraints": {
                                          "minimum": 1,
                                          "maximum": 32768
                                        },
                                        "metadata": {
                                          "title": "PG Num"
                                        }
                                      },
                                      "pg_num_min": {
                                        "type": "integer",
                                        "description": "Minimal number of placement groups.",
                                        "optional": true,
                                        "constraints": {
                                          "maximum": 32768
                                        },
                                        "metadata": {
                                          "title": "min. PG Num"
                                        }
                                      },
                                      "pgp_num": {
                                        "type": "integer",
                                        "metadata": {
                                          "title": "PGP num"
                                        }
                                      },
                                      "size": {
                                        "type": "integer",
                                        "description": "Number of replicas per object",
                                        "optional": true,
                                        "defaultValue": 3,
                                        "constraints": {
                                          "minimum": 1,
                                          "maximum": 7
                                        },
                                        "metadata": {
                                          "title": "Size"
                                        }
                                      },
                                      "statistics": {
                                        "type": "object",
                                        "optional": true,
                                        "metadata": {
                                          "title": "Statistics"
                                        }
                                      },
                                      "target_size": {
                                        "type": "string",
                                        "description": "The estimated target size of the pool for the PG autoscaler.",
                                        "optional": true,
                                        "constraints": {
                                          "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$"
                                        },
                                        "metadata": {
                                          "title": "PG Autoscale Target Size"
                                        }
                                      },
                                      "target_size_ratio": {
                                        "type": "number",
                                        "description": "The estimated target ratio of the pool for the PG autoscaler.",
                                        "optional": true,
                                        "metadata": {
                                          "title": "PG Autoscale Target Ratio"
                                        }
                                      },
                                      "use_gmt_hitset": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "use_gmt_hitset"
                                        }
                                      },
                                      "write_fadvise_dontneed": {
                                        "type": "boolean",
                                        "metadata": {
                                          "title": "write_fadvise_dontneed"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": "nodes-node-ceph-restart",
                  "path": "/nodes/{node}/ceph/restart",
                  "slug": "nodes-node-ceph-restart",
                  "label": "restart",
                  "endpoints": [
                    {
                      "id": "post-nodes-node-ceph-restart",
                      "operationId": "post-nodes-node-ceph-restart",
                      "path": "/nodes/{node}/ceph/restart",
                      "httpMethod": "POST",
                      "name": "restart",
                      "description": "Restart ceph services.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "Ceph service name.",
                              "optional": true,
                              "defaultValue": "ceph.target",
                              "constraints": {
                                "pattern": "(mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-rules",
                  "path": "/nodes/{node}/ceph/rules",
                  "slug": "nodes-node-ceph-rules",
                  "label": "rules",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-rules",
                      "operationId": "get-nodes-node-ceph-rules",
                      "path": "/nodes/{node}/ceph/rules",
                      "httpMethod": "GET",
                      "name": "rules",
                      "description": "List ceph rules.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the CRUSH rule."
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-start",
                  "path": "/nodes/{node}/ceph/start",
                  "slug": "nodes-node-ceph-start",
                  "label": "start",
                  "endpoints": [
                    {
                      "id": "post-nodes-node-ceph-start",
                      "operationId": "post-nodes-node-ceph-start",
                      "path": "/nodes/{node}/ceph/start",
                      "httpMethod": "POST",
                      "name": "start",
                      "description": "Start ceph services.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "Ceph service name.",
                              "optional": true,
                              "defaultValue": "ceph.target",
                              "constraints": {
                                "pattern": "(ceph|mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-status",
                  "path": "/nodes/{node}/ceph/status",
                  "slug": "nodes-node-ceph-status",
                  "label": "status",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-ceph-status",
                      "operationId": "get-nodes-node-ceph-status",
                      "path": "/nodes/{node}/ceph/status",
                      "httpMethod": "GET",
                      "name": "status",
                      "description": "Get ceph status.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Datastore.Audit"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-ceph-stop",
                  "path": "/nodes/{node}/ceph/stop",
                  "slug": "nodes-node-ceph-stop",
                  "label": "stop",
                  "endpoints": [
                    {
                      "id": "post-nodes-node-ceph-stop",
                      "operationId": "post-nodes-node-ceph-stop",
                      "path": "/nodes/{node}/ceph/stop",
                      "httpMethod": "POST",
                      "name": "stop",
                      "description": "Stop ceph services.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "Ceph service name.",
                              "optional": true,
                              "defaultValue": "ceph.target",
                              "constraints": {
                                "pattern": "(ceph|mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-certificates",
              "path": "/nodes/{node}/certificates",
              "slug": "nodes-node-certificates",
              "label": "certificates",
              "endpoints": [
                {
                  "id": "get-nodes-node-certificates",
                  "operationId": "get-nodes-node-certificates",
                  "path": "/nodes/{node}/certificates",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Node index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-certificates-acme",
                  "path": "/nodes/{node}/certificates/acme",
                  "slug": "nodes-node-certificates-acme",
                  "label": "acme",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-certificates-acme",
                      "operationId": "get-nodes-node-certificates-acme",
                      "path": "/nodes/{node}/certificates/acme",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "ACME index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-certificates-acme-certificate",
                      "path": "/nodes/{node}/certificates/acme/certificate",
                      "slug": "nodes-node-certificates-acme-certificate",
                      "label": "certificate",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-certificates-acme-certificate",
                          "operationId": "delete-nodes-node-certificates-acme-certificate",
                          "path": "/nodes/{node}/certificates/acme/certificate",
                          "httpMethod": "DELETE",
                          "name": "revoke_certificate",
                          "description": "Revoke existing certificate from CA.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-certificates-acme-certificate",
                          "operationId": "post-nodes-node-certificates-acme-certificate",
                          "path": "/nodes/{node}/certificates/acme/certificate",
                          "httpMethod": "POST",
                          "name": "new_certificate",
                          "description": "Order a new certificate from ACME-compatible CA.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Overwrite existing custom certificate.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-nodes-node-certificates-acme-certificate",
                          "operationId": "put-nodes-node-certificates-acme-certificate",
                          "path": "/nodes/{node}/certificates/acme/certificate",
                          "httpMethod": "PUT",
                          "name": "renew_certificate",
                          "description": "Renew existing certificate from CA.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Force renewal even if expiry is more than 30 days away.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-certificates-custom",
                  "path": "/nodes/{node}/certificates/custom",
                  "slug": "nodes-node-certificates-custom",
                  "label": "custom",
                  "endpoints": [
                    {
                      "id": "delete-nodes-node-certificates-custom",
                      "operationId": "delete-nodes-node-certificates-custom",
                      "path": "/nodes/{node}/certificates/custom",
                      "httpMethod": "DELETE",
                      "name": "remove_custom_cert",
                      "description": "DELETE custom certificate chain and key.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "restart": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Restart pveproxy.",
                              "optional": true,
                              "defaultValue": 0
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-certificates-custom",
                      "operationId": "post-nodes-node-certificates-custom",
                      "path": "/nodes/{node}/certificates/custom",
                      "httpMethod": "POST",
                      "name": "upload_custom_cert",
                      "description": "Upload or update custom certificate chain and key.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "certificates": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "PEM encoded certificate (chain).",
                              "constraints": {
                                "format": "pem-certificate-chain"
                              }
                            },
                            "force": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Overwrite existing custom or ACME certificate files.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "key": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "PEM encoded private key.",
                              "optional": true,
                              "constraints": {
                                "format": "pem-string"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "restart": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Restart pveproxy.",
                              "optional": true,
                              "defaultValue": 0
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "filename": {
                                "type": "string",
                                "optional": true
                              },
                              "fingerprint": {
                                "type": "string",
                                "description": "Certificate SHA 256 fingerprint.",
                                "optional": true,
                                "constraints": {
                                  "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                                }
                              },
                              "issuer": {
                                "type": "string",
                                "description": "Certificate issuer name.",
                                "optional": true
                              },
                              "notafter": {
                                "type": "integer",
                                "description": "Certificate's notAfter timestamp (UNIX epoch).",
                                "optional": true,
                                "metadata": {
                                  "renderer": "timestamp"
                                }
                              },
                              "notbefore": {
                                "type": "integer",
                                "description": "Certificate's notBefore timestamp (UNIX epoch).",
                                "optional": true,
                                "metadata": {
                                  "renderer": "timestamp"
                                }
                              },
                              "pem": {
                                "type": "string",
                                "description": "Certificate in PEM format",
                                "optional": true,
                                "constraints": {
                                  "format": "pem-certificate"
                                }
                              },
                              "public-key-bits": {
                                "type": "integer",
                                "description": "Certificate's public key size",
                                "optional": true
                              },
                              "public-key-type": {
                                "type": "string",
                                "description": "Certificate's public key algorithm",
                                "optional": true
                              },
                              "san": {
                                "type": "array",
                                "description": "List of Certificate's SubjectAlternativeName entries.",
                                "optional": true,
                                "items": {
                                  "type": "string"
                                },
                                "metadata": {
                                  "renderer": "yaml"
                                }
                              },
                              "subject": {
                                "type": "string",
                                "description": "Certificate subject name.",
                                "optional": true
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-certificates-info",
                  "path": "/nodes/{node}/certificates/info",
                  "slug": "nodes-node-certificates-info",
                  "label": "info",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-certificates-info",
                      "operationId": "get-nodes-node-certificates-info",
                      "path": "/nodes/{node}/certificates/info",
                      "httpMethod": "GET",
                      "name": "info",
                      "description": "Get information about node's certificates.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "filename": {
                                  "type": "string",
                                  "optional": true
                                },
                                "fingerprint": {
                                  "type": "string",
                                  "description": "Certificate SHA 256 fingerprint.",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                                  }
                                },
                                "issuer": {
                                  "type": "string",
                                  "description": "Certificate issuer name.",
                                  "optional": true
                                },
                                "notafter": {
                                  "type": "integer",
                                  "description": "Certificate's notAfter timestamp (UNIX epoch).",
                                  "optional": true,
                                  "metadata": {
                                    "renderer": "timestamp"
                                  }
                                },
                                "notbefore": {
                                  "type": "integer",
                                  "description": "Certificate's notBefore timestamp (UNIX epoch).",
                                  "optional": true,
                                  "metadata": {
                                    "renderer": "timestamp"
                                  }
                                },
                                "pem": {
                                  "type": "string",
                                  "description": "Certificate in PEM format",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pem-certificate"
                                  }
                                },
                                "public-key-bits": {
                                  "type": "integer",
                                  "description": "Certificate's public key size",
                                  "optional": true
                                },
                                "public-key-type": {
                                  "type": "string",
                                  "description": "Certificate's public key algorithm",
                                  "optional": true
                                },
                                "san": {
                                  "type": "array",
                                  "description": "List of Certificate's SubjectAlternativeName entries.",
                                  "optional": true,
                                  "items": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "renderer": "yaml"
                                  }
                                },
                                "subject": {
                                  "type": "string",
                                  "description": "Certificate subject name.",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-config",
              "path": "/nodes/{node}/config",
              "slug": "nodes-node-config",
              "label": "config",
              "endpoints": [
                {
                  "id": "get-nodes-node-config",
                  "operationId": "get-nodes-node-config",
                  "path": "/nodes/{node}/config",
                  "httpMethod": "GET",
                  "name": "get_config",
                  "description": "Get node configuration options.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "property": {
                          "type": "string",
                          "description": "Return only a specific property from the node configuration.",
                          "optional": true,
                          "defaultValue": "all",
                          "enum": [
                            "acme",
                            "acmedomain0",
                            "acmedomain1",
                            "acmedomain2",
                            "acmedomain3",
                            "acmedomain4",
                            "acmedomain5",
                            "ballooning-target",
                            "description",
                            "startall-onboot-delay",
                            "wakeonlan"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "acme": {
                            "type": "string",
                            "description": "Node specific ACME settings.",
                            "optional": true
                          },
                          "acmedomain[n]": {
                            "type": "string",
                            "description": "ACME domain and validation plugin",
                            "optional": true
                          },
                          "ballooning-target": {
                            "type": "integer",
                            "description": "RAM usage target for ballooning (in percent of total memory)",
                            "optional": true,
                            "defaultValue": 80,
                            "constraints": {
                              "minimum": 0,
                              "maximum": 100
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Description for the Node. Shown in the web-interface node notes panel. This is saved as comment inside the configuration file.",
                            "optional": true,
                            "constraints": {
                              "maxLength": 65536
                            }
                          },
                          "digest": {
                            "type": "string",
                            "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                            "optional": true,
                            "constraints": {
                              "maxLength": 40
                            }
                          },
                          "startall-onboot-delay": {
                            "type": "integer",
                            "description": "Initial delay in seconds, before starting all the Virtual Guests with on-boot enabled.",
                            "optional": true,
                            "defaultValue": 0,
                            "constraints": {
                              "minimum": 0,
                              "maximum": 300
                            }
                          },
                          "wakeonlan": {
                            "type": "string",
                            "description": "Node specific wake on LAN settings.",
                            "optional": true
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "put-nodes-node-config",
                  "operationId": "put-nodes-node-config",
                  "path": "/nodes/{node}/config",
                  "httpMethod": "PUT",
                  "name": "set_options",
                  "description": "Set node configuration options.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "acme": {
                          "type": "string",
                          "typetext": "[account=<name>] [,domains=<domain[;domain;...]>]",
                          "description": "Node specific ACME settings.",
                          "optional": true
                        },
                        "acmedomain[n]": {
                          "type": "string",
                          "typetext": "[domain=]<domain> [,alias=<domain>] [,plugin=<name of the plugin configuration>]",
                          "description": "ACME domain and validation plugin",
                          "optional": true
                        },
                        "ballooning-target": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 100)",
                          "description": "RAM usage target for ballooning (in percent of total memory)",
                          "optional": true,
                          "defaultValue": 80,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 100
                          }
                        },
                        "delete": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "A list of settings you want to delete.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-configid-list"
                          }
                        },
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description for the Node. Shown in the web-interface node notes panel. This is saved as comment inside the configuration file.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 65536
                          }
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 40
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "startall-onboot-delay": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 300)",
                          "description": "Initial delay in seconds, before starting all the Virtual Guests with on-boot enabled.",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 300
                          }
                        },
                        "wakeonlan": {
                          "type": "string",
                          "typetext": "[mac=]<MAC address> [,bind-interface=<bind interface>] [,broadcast-address=<IPv4 broadcast address>]",
                          "description": "Node specific wake on LAN settings.",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-disks",
              "path": "/nodes/{node}/disks",
              "slug": "nodes-node-disks",
              "label": "disks",
              "endpoints": [
                {
                  "id": "get-nodes-node-disks",
                  "operationId": "get-nodes-node-disks",
                  "path": "/nodes/{node}/disks",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Node index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-disks-directory",
                  "path": "/nodes/{node}/disks/directory",
                  "slug": "nodes-node-disks-directory",
                  "label": "directory",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-disks-directory",
                      "operationId": "get-nodes-node-disks-directory",
                      "path": "/nodes/{node}/disks/directory",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "PVE Managed Directory storages.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "device": {
                                  "type": "string",
                                  "description": "The mounted device."
                                },
                                "options": {
                                  "type": "string",
                                  "description": "The mount options."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The mount path."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The filesystem type."
                                },
                                "unitfile": {
                                  "type": "string",
                                  "description": "The path of the mount unit."
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-disks-directory",
                      "operationId": "post-nodes-node-disks-directory",
                      "path": "/nodes/{node}/disks/directory",
                      "httpMethod": "POST",
                      "name": "create",
                      "description": "Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "add_storage": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Configure storage using the directory.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "device": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The block device you want to create the filesystem on."
                            },
                            "filesystem": {
                              "type": "string",
                              "description": "The desired filesystem.",
                              "optional": true,
                              "defaultValue": "ext4",
                              "enum": [
                                "ext4",
                                "xfs"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<storage ID>",
                              "description": "The storage identifier.",
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-disks-directory-name",
                      "path": "/nodes/{node}/disks/directory/{name}",
                      "slug": "nodes-node-disks-directory-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-disks-directory-name",
                          "operationId": "delete-nodes-node-disks-directory-name",
                          "path": "/nodes/{node}/disks/directory/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete",
                          "description": "Unmounts the storage and removes the mount unit.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cleanup-config": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "cleanup-disks": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Also wipe disk so it can be repurposed afterwards.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-disks-initgpt",
                  "path": "/nodes/{node}/disks/initgpt",
                  "slug": "nodes-node-disks-initgpt",
                  "label": "initgpt",
                  "endpoints": [
                    {
                      "id": "post-nodes-node-disks-initgpt",
                      "operationId": "post-nodes-node-disks-initgpt",
                      "path": "/nodes/{node}/disks/initgpt",
                      "httpMethod": "POST",
                      "name": "initgpt",
                      "description": "Initialize Disk with GPT",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "disk": {
                              "type": "string",
                              "description": "Block device name",
                              "constraints": {
                                "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "uuid": {
                              "type": "string",
                              "description": "UUID for the GPT table",
                              "optional": true,
                              "constraints": {
                                "maxLength": 36,
                                "pattern": "[a-fA-F0-9\\-]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-disks-list",
                  "path": "/nodes/{node}/disks/list",
                  "slug": "nodes-node-disks-list",
                  "label": "list",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-disks-list",
                      "operationId": "get-nodes-node-disks-list",
                      "path": "/nodes/{node}/disks/list",
                      "httpMethod": "GET",
                      "name": "list",
                      "description": "List local disks.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "or",
                                [
                                  "perm",
                                  "/",
                                  [
                                    "Sys.Audit"
                                  ]
                                ],
                                [
                                  "perm",
                                  "/nodes/{node}",
                                  [
                                    "Sys.Audit"
                                  ]
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "include-partitions": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Also include partitions.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "skipsmart": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Skip smart checks.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "type": {
                              "type": "string",
                              "description": "Only list specific types of disks.",
                              "optional": true,
                              "enum": [
                                "unused",
                                "journal_disks"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "devpath": {
                                  "type": "string",
                                  "description": "The device path"
                                },
                                "gpt": {
                                  "type": "boolean"
                                },
                                "health": {
                                  "type": "string",
                                  "optional": true
                                },
                                "model": {
                                  "type": "string",
                                  "optional": true
                                },
                                "mounted": {
                                  "type": "boolean"
                                },
                                "osdid": {
                                  "type": "integer"
                                },
                                "osdid-list": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  }
                                },
                                "parent": {
                                  "type": "string",
                                  "description": "For partitions only. The device path of the disk the partition resides on.",
                                  "optional": true
                                },
                                "serial": {
                                  "type": "string",
                                  "optional": true
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "used": {
                                  "type": "string",
                                  "optional": true
                                },
                                "vendor": {
                                  "type": "string",
                                  "optional": true
                                },
                                "wwn": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-disks-lvm",
                  "path": "/nodes/{node}/disks/lvm",
                  "slug": "nodes-node-disks-lvm",
                  "label": "lvm",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-disks-lvm",
                      "operationId": "get-nodes-node-disks-lvm",
                      "path": "/nodes/{node}/disks/lvm",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "List LVM Volume Groups",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "children": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "children": {
                                      "type": "array",
                                      "description": "The underlying physical volumes",
                                      "optional": true,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "free": {
                                            "type": "integer",
                                            "description": "The free bytes in the physical volume"
                                          },
                                          "leaf": {
                                            "type": "boolean"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the physical volume"
                                          },
                                          "size": {
                                            "type": "integer",
                                            "description": "The size of the physical volume in bytes"
                                          }
                                        }
                                      }
                                    },
                                    "free": {
                                      "type": "integer",
                                      "description": "The free bytes in the volume group"
                                    },
                                    "leaf": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the volume group"
                                    },
                                    "size": {
                                      "type": "integer",
                                      "description": "The size of the volume group in bytes"
                                    }
                                  }
                                }
                              },
                              "leaf": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-disks-lvm",
                      "operationId": "post-nodes-node-disks-lvm",
                      "path": "/nodes/{node}/disks/lvm",
                      "httpMethod": "POST",
                      "name": "create",
                      "description": "Create an LVM Volume Group",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "add_storage": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Configure storage using the Volume Group",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "device": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The block device you want to create the volume group on"
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<storage ID>",
                              "description": "The storage identifier.",
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-disks-lvm-name",
                      "path": "/nodes/{node}/disks/lvm/{name}",
                      "slug": "nodes-node-disks-lvm-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-disks-lvm-name",
                          "operationId": "delete-nodes-node-disks-lvm-name",
                          "path": "/nodes/{node}/disks/lvm/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete",
                          "description": "Remove an LVM Volume Group.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cleanup-config": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "cleanup-disks": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Also wipe disks so they can be repurposed afterwards.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-disks-lvmthin",
                  "path": "/nodes/{node}/disks/lvmthin",
                  "slug": "nodes-node-disks-lvmthin",
                  "label": "lvmthin",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-disks-lvmthin",
                      "operationId": "get-nodes-node-disks-lvmthin",
                      "path": "/nodes/{node}/disks/lvmthin",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "List LVM thinpools",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "lv": {
                                  "type": "string",
                                  "description": "The name of the thinpool."
                                },
                                "lv_size": {
                                  "type": "integer",
                                  "description": "The size of the thinpool in bytes."
                                },
                                "metadata_size": {
                                  "type": "integer",
                                  "description": "The size of the metadata lv in bytes."
                                },
                                "metadata_used": {
                                  "type": "integer",
                                  "description": "The used bytes of the metadata lv."
                                },
                                "used": {
                                  "type": "integer",
                                  "description": "The used bytes of the thinpool."
                                },
                                "vg": {
                                  "type": "string",
                                  "description": "The associated volume group."
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-disks-lvmthin",
                      "operationId": "post-nodes-node-disks-lvmthin",
                      "path": "/nodes/{node}/disks/lvmthin",
                      "httpMethod": "POST",
                      "name": "create",
                      "description": "Create an LVM thinpool",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "add_storage": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Configure storage using the thinpool.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "device": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The block device you want to create the thinpool on."
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<storage ID>",
                              "description": "The storage identifier.",
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-disks-lvmthin-name",
                      "path": "/nodes/{node}/disks/lvmthin/{name}",
                      "slug": "nodes-node-disks-lvmthin-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-disks-lvmthin-name",
                          "operationId": "delete-nodes-node-disks-lvmthin-name",
                          "path": "/nodes/{node}/disks/lvmthin/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete",
                          "description": "Remove an LVM thin pool.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cleanup-config": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "cleanup-disks": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Also wipe disks so they can be repurposed afterwards.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "volume-group": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                },
                {
                  "id": "nodes-node-disks-smart",
                  "path": "/nodes/{node}/disks/smart",
                  "slug": "nodes-node-disks-smart",
                  "label": "smart",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-disks-smart",
                      "operationId": "get-nodes-node-disks-smart",
                      "path": "/nodes/{node}/disks/smart",
                      "httpMethod": "GET",
                      "name": "smart",
                      "description": "Get SMART Health of a disk.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "disk": {
                              "type": "string",
                              "description": "Block device name",
                              "constraints": {
                                "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                              }
                            },
                            "healthonly": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "If true returns only the health status",
                              "optional": true
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "attributes": {
                                "type": "array",
                                "optional": true
                              },
                              "health": {
                                "type": "string"
                              },
                              "text": {
                                "type": "string",
                                "optional": true
                              },
                              "type": {
                                "type": "string",
                                "optional": true
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-disks-wipedisk",
                  "path": "/nodes/{node}/disks/wipedisk",
                  "slug": "nodes-node-disks-wipedisk",
                  "label": "wipedisk",
                  "endpoints": [
                    {
                      "id": "put-nodes-node-disks-wipedisk",
                      "operationId": "put-nodes-node-disks-wipedisk",
                      "path": "/nodes/{node}/disks/wipedisk",
                      "httpMethod": "PUT",
                      "name": "wipe_disk",
                      "description": "Wipe a disk or partition.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "disk": {
                              "type": "string",
                              "description": "Block device name",
                              "constraints": {
                                "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-disks-zfs",
                  "path": "/nodes/{node}/disks/zfs",
                  "slug": "nodes-node-disks-zfs",
                  "label": "zfs",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-disks-zfs",
                      "operationId": "get-nodes-node-disks-zfs",
                      "path": "/nodes/{node}/disks/zfs",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "List Zpools.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "alloc": {
                                  "type": "integer"
                                },
                                "dedup": {
                                  "type": "number"
                                },
                                "frag": {
                                  "type": "integer"
                                },
                                "free": {
                                  "type": "integer"
                                },
                                "health": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-disks-zfs",
                      "operationId": "post-nodes-node-disks-zfs",
                      "path": "/nodes/{node}/disks/zfs",
                      "httpMethod": "POST",
                      "name": "create",
                      "description": "Create a ZFS pool.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "add_storage": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Configure storage using the zpool.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "ashift": {
                              "type": "integer",
                              "typetext": "<integer> (9 - 16)",
                              "description": "Pool sector size exponent.",
                              "optional": true,
                              "defaultValue": 12,
                              "constraints": {
                                "minimum": 9,
                                "maximum": 16
                              }
                            },
                            "compression": {
                              "type": "string",
                              "description": "The compression algorithm to use.",
                              "optional": true,
                              "defaultValue": "on",
                              "enum": [
                                "on",
                                "off",
                                "gzip",
                                "lz4",
                                "lzjb",
                                "zle",
                                "zstd"
                              ]
                            },
                            "devices": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The block devices you want to create the zpool on.",
                              "constraints": {
                                "format": "string-list"
                              }
                            },
                            "draid-config": {
                              "type": "string",
                              "typetext": "data=<integer> ,spares=<integer>",
                              "optional": true
                            },
                            "name": {
                              "type": "string",
                              "typetext": "<storage ID>",
                              "description": "The storage identifier.",
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "raidlevel": {
                              "type": "string",
                              "description": "The RAID level to use.",
                              "enum": [
                                "single",
                                "mirror",
                                "raid10",
                                "raidz",
                                "raidz2",
                                "raidz3",
                                "draid",
                                "draid2",
                                "draid3"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-disks-zfs-name",
                      "path": "/nodes/{node}/disks/zfs/{name}",
                      "slug": "nodes-node-disks-zfs-name",
                      "label": "{name}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-disks-zfs-name",
                          "operationId": "delete-nodes-node-disks-zfs-name",
                          "path": "/nodes/{node}/disks/zfs/{name}",
                          "httpMethod": "DELETE",
                          "name": "delete",
                          "description": "Destroy a ZFS pool.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cleanup-config": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "cleanup-disks": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Also wipe disks so they can be repurposed afterwards.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-nodes-node-disks-zfs-name",
                          "operationId": "get-nodes-node-disks-zfs-name",
                          "path": "/nodes/{node}/disks/zfs/{name}",
                          "httpMethod": "GET",
                          "name": "detail",
                          "description": "Get details about a zpool.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "string",
                                    "description": "Information about the recommended action to fix the state.",
                                    "optional": true
                                  },
                                  "children": {
                                    "type": "array",
                                    "description": "The pool configuration information, including the vdevs for each section (e.g. spares, cache), may be nested.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "cksum": {
                                          "type": "number",
                                          "optional": true
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "An optional message about the vdev."
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the vdev or section."
                                        },
                                        "read": {
                                          "type": "number",
                                          "optional": true
                                        },
                                        "state": {
                                          "type": "string",
                                          "description": "The state of the vdev.",
                                          "optional": true
                                        },
                                        "write": {
                                          "type": "number",
                                          "optional": true
                                        }
                                      }
                                    }
                                  },
                                  "errors": {
                                    "type": "string",
                                    "description": "Information about the errors on the zpool."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the zpool."
                                  },
                                  "scan": {
                                    "type": "string",
                                    "description": "Information about the last/current scrub.",
                                    "optional": true
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "The state of the zpool."
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Information about the state of the zpool.",
                                    "optional": true
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-dns",
              "path": "/nodes/{node}/dns",
              "slug": "nodes-node-dns",
              "label": "dns",
              "endpoints": [
                {
                  "id": "get-nodes-node-dns",
                  "operationId": "get-nodes-node-dns",
                  "path": "/nodes/{node}/dns",
                  "httpMethod": "GET",
                  "name": "dns",
                  "description": "Read DNS settings.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "dns1": {
                            "type": "string",
                            "description": "First name server IP address.",
                            "optional": true
                          },
                          "dns2": {
                            "type": "string",
                            "description": "Second name server IP address.",
                            "optional": true
                          },
                          "dns3": {
                            "type": "string",
                            "description": "Third name server IP address.",
                            "optional": true
                          },
                          "search": {
                            "type": "string",
                            "description": "Search domain for host-name lookup.",
                            "optional": true
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "put-nodes-node-dns",
                  "operationId": "put-nodes-node-dns",
                  "path": "/nodes/{node}/dns",
                  "httpMethod": "PUT",
                  "name": "update_dns",
                  "description": "Write DNS settings.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "dns1": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "First name server IP address.",
                          "optional": true,
                          "constraints": {
                            "format": "ip"
                          }
                        },
                        "dns2": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Second name server IP address.",
                          "optional": true,
                          "constraints": {
                            "format": "ip"
                          }
                        },
                        "dns3": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Third name server IP address.",
                          "optional": true,
                          "constraints": {
                            "format": "ip"
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "search": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Search domain for host-name lookup."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-execute",
              "path": "/nodes/{node}/execute",
              "slug": "nodes-node-execute",
              "label": "execute",
              "endpoints": [
                {
                  "id": "post-nodes-node-execute",
                  "operationId": "post-nodes-node-execute",
                  "path": "/nodes/{node}/execute",
                  "httpMethod": "POST",
                  "name": "execute",
                  "description": "Execute multiple commands in order, root only.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "commands": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "JSON encoded array of commands.",
                          "verboseDescription": "JSON encoded array of commands, where each command is an object with the following properties:\n  args:      <object>\n\t     A set of parameter names and their values.\n\n  method:    (GET|POST|PUT|DELETE)\n\t     A method related to the API endpoint (GET, POST etc.).\n\n  path:      <string>\n\t     A relative path to an API endpoint on this node.\n\n",
                          "constraints": {
                            "format": "pve-command-batch"
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-firewall",
              "path": "/nodes/{node}/firewall",
              "slug": "nodes-node-firewall",
              "label": "firewall",
              "endpoints": [
                {
                  "id": "get-nodes-node-firewall",
                  "operationId": "get-nodes-node-firewall",
                  "path": "/nodes/{node}/firewall",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Directory index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-firewall-log",
                  "path": "/nodes/{node}/firewall/log",
                  "slug": "nodes-node-firewall-log",
                  "label": "log",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-firewall-log",
                      "operationId": "get-nodes-node-firewall-log",
                      "path": "/nodes/{node}/firewall/log",
                      "httpMethod": "GET",
                      "name": "log",
                      "description": "Read firewall log",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Syslog"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "limit": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "since": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Display log since this UNIX epoch.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "start": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "until": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Display log until this UNIX epoch.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "n": {
                                  "type": "integer",
                                  "description": "Line number"
                                },
                                "t": {
                                  "type": "string",
                                  "description": "Line text"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-firewall-options",
                  "path": "/nodes/{node}/firewall/options",
                  "slug": "nodes-node-firewall-options",
                  "label": "options",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-firewall-options",
                      "operationId": "get-nodes-node-firewall-options",
                      "path": "/nodes/{node}/firewall/options",
                      "httpMethod": "GET",
                      "name": "get_options",
                      "description": "Get host firewall options.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Enable host firewall rules.",
                                "optional": true
                              },
                              "log_level_forward": {
                                "type": "string",
                                "description": "Log level for forwarded traffic.",
                                "optional": true,
                                "enum": [
                                  "emerg",
                                  "alert",
                                  "crit",
                                  "err",
                                  "warning",
                                  "notice",
                                  "info",
                                  "debug",
                                  "nolog"
                                ]
                              },
                              "log_level_in": {
                                "type": "string",
                                "description": "Log level for incoming traffic.",
                                "optional": true,
                                "enum": [
                                  "emerg",
                                  "alert",
                                  "crit",
                                  "err",
                                  "warning",
                                  "notice",
                                  "info",
                                  "debug",
                                  "nolog"
                                ]
                              },
                              "log_level_out": {
                                "type": "string",
                                "description": "Log level for outgoing traffic.",
                                "optional": true,
                                "enum": [
                                  "emerg",
                                  "alert",
                                  "crit",
                                  "err",
                                  "warning",
                                  "notice",
                                  "info",
                                  "debug",
                                  "nolog"
                                ]
                              },
                              "log_nf_conntrack": {
                                "type": "boolean",
                                "description": "Enable logging of conntrack information.",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "ndp": {
                                "type": "boolean",
                                "description": "Enable NDP (Neighbor Discovery Protocol).",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "nf_conntrack_allow_invalid": {
                                "type": "boolean",
                                "description": "Allow invalid packets on connection tracking.",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "nf_conntrack_helpers": {
                                "type": "string",
                                "description": "Enable conntrack helpers for specific protocols. Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp, tftp",
                                "optional": true,
                                "defaultValue": "",
                                "constraints": {
                                  "format": "pve-fw-conntrack-helper"
                                }
                              },
                              "nf_conntrack_max": {
                                "type": "integer",
                                "description": "Maximum number of tracked connections.",
                                "optional": true,
                                "defaultValue": 262144,
                                "constraints": {
                                  "minimum": 32768
                                }
                              },
                              "nf_conntrack_tcp_timeout_established": {
                                "type": "integer",
                                "description": "Conntrack established timeout.",
                                "optional": true,
                                "defaultValue": 432000,
                                "constraints": {
                                  "minimum": 7875
                                }
                              },
                              "nf_conntrack_tcp_timeout_syn_recv": {
                                "type": "integer",
                                "description": "Conntrack syn recv timeout.",
                                "optional": true,
                                "defaultValue": 60,
                                "constraints": {
                                  "minimum": 30,
                                  "maximum": 60
                                }
                              },
                              "nftables": {
                                "type": "boolean",
                                "description": "Enable nftables based firewall (tech preview)",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "nosmurfs": {
                                "type": "boolean",
                                "description": "Enable SMURFS filter.",
                                "optional": true
                              },
                              "protection_synflood": {
                                "type": "boolean",
                                "description": "Enable synflood protection",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "protection_synflood_burst": {
                                "type": "integer",
                                "description": "Synflood protection rate burst by ip src.",
                                "optional": true,
                                "defaultValue": 1000
                              },
                              "protection_synflood_rate": {
                                "type": "integer",
                                "description": "Synflood protection rate syn/sec by ip src.",
                                "optional": true,
                                "defaultValue": 200
                              },
                              "smurf_log_level": {
                                "type": "string",
                                "description": "Log level for SMURFS filter.",
                                "optional": true,
                                "enum": [
                                  "emerg",
                                  "alert",
                                  "crit",
                                  "err",
                                  "warning",
                                  "notice",
                                  "info",
                                  "debug",
                                  "nolog"
                                ]
                              },
                              "tcp_flags_log_level": {
                                "type": "string",
                                "description": "Log level for illegal tcp flags filter.",
                                "optional": true,
                                "enum": [
                                  "emerg",
                                  "alert",
                                  "crit",
                                  "err",
                                  "warning",
                                  "notice",
                                  "info",
                                  "debug",
                                  "nolog"
                                ]
                              },
                              "tcpflags": {
                                "type": "boolean",
                                "description": "Filter illegal combinations of TCP flags.",
                                "optional": true,
                                "defaultValue": 0
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-nodes-node-firewall-options",
                      "operationId": "put-nodes-node-firewall-options",
                      "path": "/nodes/{node}/firewall/options",
                      "httpMethod": "PUT",
                      "name": "set_options",
                      "description": "Set Firewall options.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-configid-list"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "enable": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable host firewall rules.",
                              "optional": true
                            },
                            "log_level_forward": {
                              "type": "string",
                              "description": "Log level for forwarded traffic.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "log_level_in": {
                              "type": "string",
                              "description": "Log level for incoming traffic.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "log_level_out": {
                              "type": "string",
                              "description": "Log level for outgoing traffic.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "log_nf_conntrack": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable logging of conntrack information.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "ndp": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable NDP (Neighbor Discovery Protocol).",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "nf_conntrack_allow_invalid": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Allow invalid packets on connection tracking.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "nf_conntrack_helpers": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Enable conntrack helpers for specific protocols. Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp, tftp",
                              "optional": true,
                              "defaultValue": "",
                              "constraints": {
                                "format": "pve-fw-conntrack-helper"
                              }
                            },
                            "nf_conntrack_max": {
                              "type": "integer",
                              "typetext": "<integer> (32768 - N)",
                              "description": "Maximum number of tracked connections.",
                              "optional": true,
                              "defaultValue": 262144,
                              "constraints": {
                                "minimum": 32768
                              }
                            },
                            "nf_conntrack_tcp_timeout_established": {
                              "type": "integer",
                              "typetext": "<integer> (7875 - N)",
                              "description": "Conntrack established timeout.",
                              "optional": true,
                              "defaultValue": 432000,
                              "constraints": {
                                "minimum": 7875
                              }
                            },
                            "nf_conntrack_tcp_timeout_syn_recv": {
                              "type": "integer",
                              "typetext": "<integer> (30 - 60)",
                              "description": "Conntrack syn recv timeout.",
                              "optional": true,
                              "defaultValue": 60,
                              "constraints": {
                                "minimum": 30,
                                "maximum": 60
                              }
                            },
                            "nftables": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable nftables based firewall (tech preview)",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "nosmurfs": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable SMURFS filter.",
                              "optional": true
                            },
                            "protection_synflood": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable synflood protection",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "protection_synflood_burst": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "Synflood protection rate burst by ip src.",
                              "optional": true,
                              "defaultValue": 1000
                            },
                            "protection_synflood_rate": {
                              "type": "integer",
                              "typetext": "<integer>",
                              "description": "Synflood protection rate syn/sec by ip src.",
                              "optional": true,
                              "defaultValue": 200
                            },
                            "smurf_log_level": {
                              "type": "string",
                              "description": "Log level for SMURFS filter.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "tcp_flags_log_level": {
                              "type": "string",
                              "description": "Log level for illegal tcp flags filter.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "tcpflags": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Filter illegal combinations of TCP flags.",
                              "optional": true,
                              "defaultValue": 0
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-firewall-rules",
                  "path": "/nodes/{node}/firewall/rules",
                  "slug": "nodes-node-firewall-rules",
                  "label": "rules",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-firewall-rules",
                      "operationId": "get-nodes-node-firewall-rules",
                      "path": "/nodes/{node}/firewall/rules",
                      "httpMethod": "GET",
                      "name": "get_rules",
                      "description": "List rules.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pos": {
                                  "type": "integer"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{pos}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "post-nodes-node-firewall-rules",
                      "operationId": "post-nodes-node-firewall-rules",
                      "path": "/nodes/{node}/firewall/rules",
                      "httpMethod": "POST",
                      "name": "create_rule",
                      "description": "Create new rule.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "action": {
                              "type": "string",
                              "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                              "optional": false,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                              }
                            },
                            "comment": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Descriptive comment.",
                              "optional": true
                            },
                            "dest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512,
                                "format": "pve-fw-addr-spec"
                              }
                            },
                            "digest": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 64
                              }
                            },
                            "dport": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-dport-spec"
                              }
                            },
                            "enable": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Flag to enable/disable a rule.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "icmp-type": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-icmp-type-spec"
                              }
                            },
                            "iface": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                              "optional": true,
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "log": {
                              "type": "string",
                              "description": "Log level for firewall rule.",
                              "optional": true,
                              "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "err",
                                "warning",
                                "notice",
                                "info",
                                "debug",
                                "nolog"
                              ]
                            },
                            "macro": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Use predefined standard macro.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 128
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "pos": {
                              "type": "integer",
                              "typetext": "<integer> (0 - N)",
                              "description": "Update rule at position <pos>.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              }
                            },
                            "proto": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-protocol-spec"
                              }
                            },
                            "source": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 512,
                                "format": "pve-fw-addr-spec"
                              }
                            },
                            "sport": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-fw-sport-spec"
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "Rule type.",
                              "optional": false,
                              "enum": [
                                "in",
                                "out",
                                "forward",
                                "group"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-firewall-rules-pos",
                      "path": "/nodes/{node}/firewall/rules/{pos}",
                      "slug": "nodes-node-firewall-rules-pos",
                      "label": "{pos}",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-firewall-rules-pos",
                          "operationId": "delete-nodes-node-firewall-rules-pos",
                          "path": "/nodes/{node}/firewall/rules/{pos}",
                          "httpMethod": "DELETE",
                          "name": "delete_rule",
                          "description": "Delete rule.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pos": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Update rule at position <pos>.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-nodes-node-firewall-rules-pos",
                          "operationId": "get-nodes-node-firewall-rules-pos",
                          "path": "/nodes/{node}/firewall/rules/{pos}",
                          "httpMethod": "GET",
                          "name": "get_rule",
                          "description": "Get single rule data.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pos": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Update rule at position <pos>.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "string"
                                  },
                                  "comment": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "dest": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "dport": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "enable": {
                                    "type": "integer",
                                    "optional": true
                                  },
                                  "icmp-type": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "iface": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "ipversion": {
                                    "type": "integer",
                                    "optional": true
                                  },
                                  "log": {
                                    "type": "string",
                                    "description": "Log level for firewall rule",
                                    "optional": true,
                                    "enum": [
                                      "emerg",
                                      "alert",
                                      "crit",
                                      "err",
                                      "warning",
                                      "notice",
                                      "info",
                                      "debug",
                                      "nolog"
                                    ]
                                  },
                                  "macro": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "pos": {
                                    "type": "integer"
                                  },
                                  "proto": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "source": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "sport": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-nodes-node-firewall-rules-pos",
                          "operationId": "put-nodes-node-firewall-rules-pos",
                          "path": "/nodes/{node}/firewall/rules/{pos}",
                          "httpMethod": "PUT",
                          "name": "update_rule",
                          "description": "Modify rule data.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "action": {
                                  "type": "string",
                                  "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                  "optional": true,
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 20,
                                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                  }
                                },
                                "comment": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Descriptive comment.",
                                  "optional": true
                                },
                                "delete": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "dest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 512,
                                    "format": "pve-fw-addr-spec"
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 64
                                  }
                                },
                                "dport": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-dport-spec"
                                  }
                                },
                                "enable": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Flag to enable/disable a rule.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "icmp-type": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-icmp-type-spec"
                                  }
                                },
                                "iface": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                  "optional": true,
                                  "constraints": {
                                    "minLength": 2,
                                    "maxLength": 20,
                                    "format": "pve-iface"
                                  }
                                },
                                "log": {
                                  "type": "string",
                                  "description": "Log level for firewall rule.",
                                  "optional": true,
                                  "enum": [
                                    "emerg",
                                    "alert",
                                    "crit",
                                    "err",
                                    "warning",
                                    "notice",
                                    "info",
                                    "debug",
                                    "nolog"
                                  ]
                                },
                                "macro": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Use predefined standard macro.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 128
                                  }
                                },
                                "moveto": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pos": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Update rule at position <pos>.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "proto": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-protocol-spec"
                                  }
                                },
                                "source": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 512,
                                    "format": "pve-fw-addr-spec"
                                  }
                                },
                                "sport": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-fw-sport-spec"
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Rule type.",
                                  "optional": true,
                                  "enum": [
                                    "in",
                                    "out",
                                    "forward",
                                    "group"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-hardware",
              "path": "/nodes/{node}/hardware",
              "slug": "nodes-node-hardware",
              "label": "hardware",
              "endpoints": [
                {
                  "id": "get-nodes-node-hardware",
                  "operationId": "get-nodes-node-hardware",
                  "path": "/nodes/{node}/hardware",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Index of hardware types",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{type}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-hardware-pci",
                  "path": "/nodes/{node}/hardware/pci",
                  "slug": "nodes-node-hardware-pci",
                  "label": "pci",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-hardware-pci",
                      "operationId": "get-nodes-node-hardware-pci",
                      "path": "/nodes/{node}/hardware/pci",
                      "httpMethod": "GET",
                      "name": "pci_scan",
                      "description": "List local PCI devices.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Audit",
                                  "Sys.Modify"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "pci-class-blacklist": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of blacklisted PCI classes, which will not be returned. Following are filtered by default: Memory Controller (05), Bridge (06) and Processor (0b).",
                              "optional": true,
                              "defaultValue": "05;06;0b",
                              "constraints": {
                                "format": "string-list"
                              }
                            },
                            "verbose": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "If disabled, does only print the PCI IDs. Otherwise, additional information like vendor and device will be returned.",
                              "optional": true,
                              "defaultValue": 1
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "class": {
                                  "type": "string",
                                  "description": "The PCI Class of the device."
                                },
                                "device": {
                                  "type": "string",
                                  "description": "The Device ID."
                                },
                                "device_name": {
                                  "type": "string",
                                  "optional": true
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The PCI ID."
                                },
                                "iommugroup": {
                                  "type": "integer",
                                  "description": "The IOMMU group in which the device is in. If no IOMMU group is detected, it is set to -1."
                                },
                                "mdev": {
                                  "type": "boolean",
                                  "description": "If set, marks that the device is capable of creating mediated devices.",
                                  "optional": true
                                },
                                "subsystem_device": {
                                  "type": "string",
                                  "description": "The Subsystem Device ID.",
                                  "optional": true
                                },
                                "subsystem_device_name": {
                                  "type": "string",
                                  "optional": true
                                },
                                "subsystem_vendor": {
                                  "type": "string",
                                  "description": "The Subsystem Vendor ID.",
                                  "optional": true
                                },
                                "subsystem_vendor_name": {
                                  "type": "string",
                                  "optional": true
                                },
                                "vendor": {
                                  "type": "string",
                                  "description": "The Vendor ID."
                                },
                                "vendor_name": {
                                  "type": "string",
                                  "optional": true
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{id}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-hardware-pci-pci-id-or-mapping",
                      "path": "/nodes/{node}/hardware/pci/{pci-id-or-mapping}",
                      "slug": "nodes-node-hardware-pci-pci-id-or-mapping",
                      "label": "{pci-id-or-mapping}",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-hardware-pci-pci-id-or-mapping",
                          "operationId": "get-nodes-node-hardware-pci-pci-id-or-mapping",
                          "path": "/nodes/{node}/hardware/pci/{pci-id-or-mapping}",
                          "httpMethod": "GET",
                          "name": "pci_index",
                          "description": "Index of available pci methods",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pci-id-or-mapping": {
                                  "type": "string",
                                  "constraints": {
                                    "pattern": "(?:(?:[0-9a-fA-F]{4}:)?[0-9a-fA-F]{2}:[0-9a-fA-F]{2}\\.[0-9a-fA-F])|([a-zA-Z][a-zA-Z0-9_-]+)"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{method}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-hardware-pci-pci-id-or-mapping-mdev",
                          "path": "/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev",
                          "slug": "nodes-node-hardware-pci-pci-id-or-mapping-mdev",
                          "label": "mdev",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-hardware-pci-pci-id-or-mapping-mdev",
                              "operationId": "get-nodes-node-hardware-pci-pci-id-or-mapping-mdev",
                              "path": "/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev",
                              "httpMethod": "GET",
                              "name": "mdevscan",
                              "description": "List mediated device types for given PCI device.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Sys.Modify"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "pci-id-or-mapping": {
                                      "type": "string",
                                      "description": "The PCI ID or mapping to list the mdev types for.",
                                      "constraints": {
                                        "pattern": "(?:(?:[0-9a-fA-F]{4}:)?[0-9a-fA-F]{2}:[0-9a-fA-F]{2}\\.[0-9a-fA-F])|([a-zA-Z][a-zA-Z0-9_-]+)"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "available": {
                                          "type": "integer",
                                          "description": "The number of still available instances of this type."
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Additional description of the type."
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "A human readable name for the type.",
                                          "optional": true
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the mdev type."
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "id": "nodes-node-hardware-usb",
                  "path": "/nodes/{node}/hardware/usb",
                  "slug": "nodes-node-hardware-usb",
                  "label": "usb",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-hardware-usb",
                      "operationId": "get-nodes-node-hardware-usb",
                      "path": "/nodes/{node}/hardware/usb",
                      "httpMethod": "GET",
                      "name": "usbscan",
                      "description": "List local USB devices.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "busnum": {
                                  "type": "integer"
                                },
                                "class": {
                                  "type": "integer"
                                },
                                "devnum": {
                                  "type": "integer"
                                },
                                "level": {
                                  "type": "integer"
                                },
                                "manufacturer": {
                                  "type": "string",
                                  "optional": true
                                },
                                "port": {
                                  "type": "integer"
                                },
                                "prodid": {
                                  "type": "string"
                                },
                                "product": {
                                  "type": "string",
                                  "optional": true
                                },
                                "serial": {
                                  "type": "string",
                                  "optional": true
                                },
                                "speed": {
                                  "type": "string"
                                },
                                "usbpath": {
                                  "type": "string",
                                  "optional": true
                                },
                                "vendid": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-hosts",
              "path": "/nodes/{node}/hosts",
              "slug": "nodes-node-hosts",
              "label": "hosts",
              "endpoints": [
                {
                  "id": "get-nodes-node-hosts",
                  "operationId": "get-nodes-node-hosts",
                  "path": "/nodes/{node}/hosts",
                  "httpMethod": "GET",
                  "name": "get_etc_hosts",
                  "description": "Get the content of /etc/hosts.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "string",
                            "description": "The content of /etc/hosts."
                          },
                          "digest": {
                            "type": "string",
                            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                            "optional": true,
                            "constraints": {
                              "maxLength": 64
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-hosts",
                  "operationId": "post-nodes-node-hosts",
                  "path": "/nodes/{node}/hosts",
                  "httpMethod": "POST",
                  "name": "write_etc_hosts",
                  "description": "Write /etc/hosts.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "data": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The target content of /etc/hosts."
                        },
                        "digest": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 64
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-journal",
              "path": "/nodes/{node}/journal",
              "slug": "nodes-node-journal",
              "label": "journal",
              "endpoints": [
                {
                  "id": "get-nodes-node-journal",
                  "operationId": "get-nodes-node-journal",
                  "path": "/nodes/{node}/journal",
                  "httpMethod": "GET",
                  "name": "journal",
                  "description": "Read Journal",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Syslog"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "endcursor": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "End before the given Cursor. Conflicts with 'until'",
                          "optional": true
                        },
                        "lastentries": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Limit to the last X lines. Conflicts with a range.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "since": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Display all log since this UNIX epoch. Conflicts with 'startcursor'.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "startcursor": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Start after the given Cursor. Conflicts with 'since'",
                          "optional": true
                        },
                        "until": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Display all log until this UNIX epoch. Conflicts with 'endcursor'.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-lxc",
              "path": "/nodes/{node}/lxc",
              "slug": "nodes-node-lxc",
              "label": "lxc",
              "endpoints": [
                {
                  "id": "get-nodes-node-lxc",
                  "operationId": "get-nodes-node-lxc",
                  "path": "/nodes/{node}/lxc",
                  "httpMethod": "GET",
                  "name": "vmlist",
                  "description": "LXC container index (per node).",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list CTs where you have VM.Audit permission on /vms/<vmid>.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "type": "number",
                              "description": "Current CPU usage.",
                              "optional": true
                            },
                            "cpus": {
                              "type": "number",
                              "description": "Maximum usable CPUs.",
                              "optional": true
                            },
                            "disk": {
                              "type": "integer",
                              "description": "Root disk image space-usage in bytes.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0
                              },
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "diskread": {
                              "type": "integer",
                              "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "diskwrite": {
                              "type": "integer",
                              "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "lock": {
                              "type": "string",
                              "description": "The current config lock, if any.",
                              "optional": true
                            },
                            "maxdisk": {
                              "type": "integer",
                              "description": "Root disk image size in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "maxmem": {
                              "type": "integer",
                              "description": "Maximum memory in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "maxswap": {
                              "type": "integer",
                              "description": "Maximum SWAP memory in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "mem": {
                              "type": "integer",
                              "description": "Currently used memory in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "Container name.",
                              "optional": true
                            },
                            "netin": {
                              "type": "integer",
                              "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "netout": {
                              "type": "integer",
                              "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "pressurecpusome": {
                              "type": "number",
                              "description": "CPU Some pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressureiofull": {
                              "type": "number",
                              "description": "IO Full pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressureiosome": {
                              "type": "number",
                              "description": "IO Some pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressurememoryfull": {
                              "type": "number",
                              "description": "Memory Full pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressurememorysome": {
                              "type": "number",
                              "description": "Memory Some pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "status": {
                              "type": "string",
                              "description": "LXC Container status.",
                              "enum": [
                                "stopped",
                                "running"
                              ]
                            },
                            "tags": {
                              "type": "string",
                              "description": "The current configured tags, if any.",
                              "optional": true
                            },
                            "template": {
                              "type": "boolean",
                              "description": "Determines if the guest is a template.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "uptime": {
                              "type": "integer",
                              "description": "Uptime in seconds.",
                              "optional": true,
                              "metadata": {
                                "renderer": "duration"
                              }
                            },
                            "vmid": {
                              "type": "integer",
                              "description": "The (unique) ID of the VM.",
                              "constraints": {
                                "minimum": 100,
                                "maximum": 999999999,
                                "format": "pve-vmid"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{vmid}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-lxc",
                  "operationId": "post-nodes-node-lxc",
                  "path": "/nodes/{node}/lxc",
                  "httpMethod": "POST",
                  "name": "create_vm",
                  "description": "Create or restore a container.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "You need 'VM.Allocate' permission on /vms/{vmid} or on the VM pool /pool/{pool}. For restore, it is enough if the user has 'VM.Backup' permission and the VM already exists. You also need 'Datastore.AllocateSpace' permissions on the storage. For privileged containers, 'Sys.Modify' permissions on '/' are required.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "arch": {
                          "type": "string",
                          "description": "OS architecture type.",
                          "optional": true,
                          "defaultValue": "amd64",
                          "enum": [
                            "amd64",
                            "i386",
                            "arm64",
                            "armhf",
                            "riscv32",
                            "riscv64"
                          ]
                        },
                        "bwlimit": {
                          "type": "number",
                          "typetext": "<number> (0 - N)",
                          "description": "Override I/O bandwidth limit (in KiB/s).",
                          "optional": true,
                          "defaultValue": "restore limit from datacenter or storage config"
                        },
                        "cmode": {
                          "type": "string",
                          "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                          "optional": true,
                          "defaultValue": "tty",
                          "enum": [
                            "shell",
                            "console",
                            "tty"
                          ]
                        },
                        "console": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Attach a console device (/dev/console) to the container.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "cores": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 8192)",
                          "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1,
                            "maximum": 8192
                          }
                        },
                        "cpulimit": {
                          "type": "number",
                          "typetext": "<number> (0 - 8192)",
                          "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 8192
                          }
                        },
                        "cpuunits": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 500000)",
                          "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.",
                          "verboseDescription": "CPU weight for a container. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this container gets. Number is relative to the weights of all the other running guests.",
                          "optional": true,
                          "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                          "constraints": {
                            "minimum": 0,
                            "maximum": 500000
                          }
                        },
                        "debug": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 8192
                          }
                        },
                        "dev[n]": {
                          "type": "string",
                          "typetext": "[[path=]<Path>] [,deny-write=<1|0>] [,gid=<integer>] [,mode=<Octal access mode>] [,uid=<integer>]",
                          "description": "Device to pass through to the container",
                          "optional": true
                        },
                        "features": {
                          "type": "string",
                          "typetext": "[force_rw_sys=<1|0>] [,fuse=<1|0>] [,keyctl=<1|0>] [,mknod=<1|0>] [,mount=<fstype;fstype;...>] [,nesting=<1|0>]",
                          "description": "Allow containers access to advanced features.",
                          "optional": true
                        },
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Allow to overwrite existing container.",
                          "optional": true
                        },
                        "hookscript": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Script that will be executed during various steps in the containers lifetime.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-volume-id"
                          }
                        },
                        "hostname": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Set a host name for the container.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 255,
                            "format": "dns-name"
                          }
                        },
                        "ignore-unpack-errors": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Ignore errors when extracting the template.",
                          "optional": true
                        },
                        "lock": {
                          "type": "string",
                          "description": "Lock/unlock the container.",
                          "optional": true,
                          "enum": [
                            "backup",
                            "create",
                            "destroyed",
                            "disk",
                            "fstrim",
                            "migrate",
                            "mounted",
                            "rollback",
                            "snapshot",
                            "snapshot-delete"
                          ]
                        },
                        "memory": {
                          "type": "integer",
                          "typetext": "<integer> (16 - N)",
                          "description": "Amount of RAM for the container in MB.",
                          "optional": true,
                          "defaultValue": 512,
                          "constraints": {
                            "minimum": 16
                          }
                        },
                        "mp[n]": {
                          "type": "string",
                          "typetext": "[volume=]<volume> ,mp=<Path> [,acl=<1|0>] [,backup=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                          "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.",
                          "optional": true
                        },
                        "nameserver": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                          "optional": true,
                          "constraints": {
                            "format": "lxc-ip-with-ll-iface-list"
                          }
                        },
                        "net[n]": {
                          "type": "string",
                          "typetext": "name=<string> [,bridge=<bridge>] [,firewall=<1|0>] [,gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,hwaddr=<XX:XX:XX:XX:XX:XX>] [,ip=<(IPv4/CIDR|dhcp|manual)>] [,ip6=<(IPv6/CIDR|auto|dhcp|manual)>] [,link_down=<1|0>] [,mtu=<integer>] [,rate=<mbps>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,type=<veth>]",
                          "description": "Specifies network interfaces for the container.",
                          "optional": true
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "onboot": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Specifies whether a container will be started during system bootup.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "ostemplate": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The OS template or backup file.",
                          "constraints": {
                            "maxLength": 255
                          }
                        },
                        "ostype": {
                          "type": "string",
                          "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                          "optional": true,
                          "enum": [
                            "debian",
                            "devuan",
                            "ubuntu",
                            "centos",
                            "fedora",
                            "opensuse",
                            "archlinux",
                            "alpine",
                            "gentoo",
                            "nixos",
                            "unmanaged"
                          ]
                        },
                        "password": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Sets root password inside container.",
                          "optional": true,
                          "constraints": {
                            "minLength": 5
                          }
                        },
                        "pool": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Add the VM to the specified pool.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-poolid"
                          }
                        },
                        "protection": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "restore": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Mark this as restore task.",
                          "optional": true
                        },
                        "rootfs": {
                          "type": "string",
                          "typetext": "[volume=]<volume> [,acl=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                          "description": "Use volume as container root.",
                          "optional": true
                        },
                        "searchdomain": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                          "optional": true,
                          "constraints": {
                            "format": "dns-name-list"
                          }
                        },
                        "ssh-public-keys": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Setup public SSH keys (one key per line, OpenSSH format).",
                          "optional": true
                        },
                        "start": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Start the CT after its creation finished successfully.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "startup": {
                          "type": "string",
                          "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                          "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-startup-order"
                          }
                        },
                        "storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "Default Storage.",
                          "optional": true,
                          "defaultValue": "local",
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "swap": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Amount of SWAP for the container in MB.",
                          "optional": true,
                          "defaultValue": 512,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "tags": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Tags of the Container. This is only meta information.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-tag-list"
                          }
                        },
                        "template": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable Template.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "timezone": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab",
                          "optional": true,
                          "constraints": {
                            "format": "pve-ct-timezone"
                          }
                        },
                        "tty": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 6)",
                          "description": "Specify the number of tty available to the container",
                          "optional": true,
                          "defaultValue": 2,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 6
                          }
                        },
                        "unique": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Assign a unique random ethernet address.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "restore"
                            ]
                          }
                        },
                        "unprivileged": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "unused[n]": {
                          "type": "string",
                          "typetext": "[volume=]<volume>",
                          "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                          "optional": true
                        },
                        "vmid": {
                          "type": "integer",
                          "typetext": "<integer> (100 - 999999999)",
                          "description": "The (unique) ID of the VM.",
                          "constraints": {
                            "minimum": 100,
                            "maximum": 999999999,
                            "format": "pve-vmid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-lxc-vmid",
                  "path": "/nodes/{node}/lxc/{vmid}",
                  "slug": "nodes-node-lxc-vmid",
                  "label": "{vmid}",
                  "endpoints": [
                    {
                      "id": "delete-nodes-node-lxc-vmid",
                      "operationId": "delete-nodes-node-lxc-vmid",
                      "path": "/nodes/{node}/lxc/{vmid}",
                      "httpMethod": "DELETE",
                      "name": "destroy_vm",
                      "description": "Destroy the container (also delete all uses files).",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/vms/{vmid}",
                                [
                                  "VM.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "destroy-unreferenced-disks": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "If set, destroy additionally all disks with the VMID from all enabled storages which are not referenced in the config.",
                              "optional": true
                            },
                            "force": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Force destroy, even if running.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "purge": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Remove container from all related configurations. For example, backup jobs, replication jobs or HA. Related ACLs and Firewall entries will *always* be removed.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "vmid": {
                              "type": "integer",
                              "typetext": "<integer> (100 - 999999999)",
                              "description": "The (unique) ID of the VM.",
                              "constraints": {
                                "minimum": 100,
                                "maximum": 999999999,
                                "format": "pve-vmid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-nodes-node-lxc-vmid",
                      "operationId": "get-nodes-node-lxc-vmid",
                      "path": "/nodes/{node}/lxc/{vmid}",
                      "httpMethod": "GET",
                      "name": "vmdiridx",
                      "description": "Directory index",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "vmid": {
                              "type": "integer",
                              "typetext": "<integer> (100 - 999999999)",
                              "description": "The (unique) ID of the VM.",
                              "constraints": {
                                "minimum": 100,
                                "maximum": 999999999,
                                "format": "pve-vmid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "subdir": {
                                  "type": "string"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{subdir}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-lxc-vmid-clone",
                      "path": "/nodes/{node}/lxc/{vmid}/clone",
                      "slug": "nodes-node-lxc-vmid-clone",
                      "label": "clone",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-clone",
                          "operationId": "post-nodes-node-lxc-vmid-clone",
                          "path": "/nodes/{node}/lxc/{vmid}/clone",
                          "httpMethod": "POST",
                          "name": "clone_vm",
                          "description": "Create a container clone/copy",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Clone' permissions on /vms/{vmid}, and 'VM.Allocate' permissions on /vms/{newid} (or on the VM pool /pool/{pool}). You also need 'Datastore.AllocateSpace' on any used storage, and 'SDN.Use' on any bridge.",
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/vms/{vmid}",
                                      [
                                        "VM.Clone"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/vms/{newid}",
                                        [
                                          "VM.Allocate"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/pool/{pool}",
                                        [
                                          "VM.Allocate"
                                        ],
                                        "require_param",
                                        "pool"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "clone limit from datacenter or storage config"
                                },
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Description for the new CT.",
                                  "optional": true
                                },
                                "full": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Create a full copy of all disks. This is always done when you clone a normal CT. For CT templates, we try to create a linked clone by default.",
                                  "optional": true
                                },
                                "hostname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Set a hostname for the new CT.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "dns-name"
                                  }
                                },
                                "newid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "VMID for the clone.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pool": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Add the new CT to the specified pool.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-poolid"
                                  }
                                },
                                "snapname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the snapshot.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "Target storage for full clone.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "target": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node. Only allowed if the original VM is on shared storage.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-config",
                      "path": "/nodes/{node}/lxc/{vmid}/config",
                      "slug": "nodes-node-lxc-vmid-config",
                      "label": "config",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-config",
                          "operationId": "get-nodes-node-lxc-vmid-config",
                          "path": "/nodes/{node}/lxc/{vmid}/config",
                          "httpMethod": "GET",
                          "name": "vm_config",
                          "description": "Get container configuration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "current": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Get current values (instead of pending values).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "snapshot": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Fetch config values from given snapshot.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "arch": {
                                    "type": "string",
                                    "description": "OS architecture type.",
                                    "optional": true,
                                    "defaultValue": "amd64",
                                    "enum": [
                                      "amd64",
                                      "i386",
                                      "arm64",
                                      "armhf",
                                      "riscv32",
                                      "riscv64"
                                    ]
                                  },
                                  "cmode": {
                                    "type": "string",
                                    "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                                    "optional": true,
                                    "defaultValue": "tty",
                                    "enum": [
                                      "shell",
                                      "console",
                                      "tty"
                                    ]
                                  },
                                  "console": {
                                    "type": "boolean",
                                    "description": "Attach a console device (/dev/console) to the container.",
                                    "optional": true,
                                    "defaultValue": 1
                                  },
                                  "cores": {
                                    "type": "integer",
                                    "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                                    "optional": true,
                                    "constraints": {
                                      "minimum": 1,
                                      "maximum": 8192
                                    }
                                  },
                                  "cpulimit": {
                                    "type": "number",
                                    "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                                    "optional": true,
                                    "defaultValue": 0,
                                    "constraints": {
                                      "minimum": 0,
                                      "maximum": 8192
                                    }
                                  },
                                  "cpuunits": {
                                    "type": "integer",
                                    "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.",
                                    "verboseDescription": "CPU weight for a container. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this container gets. Number is relative to the weights of all the other running guests.",
                                    "optional": true,
                                    "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                                    "constraints": {
                                      "minimum": 0,
                                      "maximum": 500000
                                    }
                                  },
                                  "debug": {
                                    "type": "boolean",
                                    "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 8192
                                    }
                                  },
                                  "dev[n]": {
                                    "type": "string",
                                    "description": "Device to pass through to the container",
                                    "optional": true
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "SHA1 digest of configuration file. This can be used to prevent concurrent modifications."
                                  },
                                  "features": {
                                    "type": "string",
                                    "description": "Allow containers access to advanced features.",
                                    "optional": true
                                  },
                                  "hookscript": {
                                    "type": "string",
                                    "description": "Script that will be executed during various steps in the containers lifetime.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-volume-id"
                                    }
                                  },
                                  "hostname": {
                                    "type": "string",
                                    "description": "Set a host name for the container.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 255,
                                      "format": "dns-name"
                                    }
                                  },
                                  "lock": {
                                    "type": "string",
                                    "description": "Lock/unlock the container.",
                                    "optional": true,
                                    "enum": [
                                      "backup",
                                      "create",
                                      "destroyed",
                                      "disk",
                                      "fstrim",
                                      "migrate",
                                      "mounted",
                                      "rollback",
                                      "snapshot",
                                      "snapshot-delete"
                                    ]
                                  },
                                  "lxc": {
                                    "type": "array",
                                    "description": "Array of lxc low-level configurations ([[key1, value1], [key2, value2] ...]).",
                                    "optional": true,
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "memory": {
                                    "type": "integer",
                                    "description": "Amount of RAM for the container in MB.",
                                    "optional": true,
                                    "defaultValue": 512,
                                    "constraints": {
                                      "minimum": 16
                                    }
                                  },
                                  "mp[n]": {
                                    "type": "string",
                                    "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.",
                                    "optional": true
                                  },
                                  "nameserver": {
                                    "type": "string",
                                    "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "lxc-ip-with-ll-iface-list"
                                    }
                                  },
                                  "net[n]": {
                                    "type": "string",
                                    "description": "Specifies network interfaces for the container.",
                                    "optional": true
                                  },
                                  "onboot": {
                                    "type": "boolean",
                                    "description": "Specifies whether a container will be started during system bootup.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "ostype": {
                                    "type": "string",
                                    "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                                    "optional": true,
                                    "enum": [
                                      "debian",
                                      "devuan",
                                      "ubuntu",
                                      "centos",
                                      "fedora",
                                      "opensuse",
                                      "archlinux",
                                      "alpine",
                                      "gentoo",
                                      "nixos",
                                      "unmanaged"
                                    ]
                                  },
                                  "protection": {
                                    "type": "boolean",
                                    "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "rootfs": {
                                    "type": "string",
                                    "description": "Use volume as container root.",
                                    "optional": true
                                  },
                                  "searchdomain": {
                                    "type": "string",
                                    "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "dns-name-list"
                                    }
                                  },
                                  "startup": {
                                    "type": "string",
                                    "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-startup-order"
                                    }
                                  },
                                  "swap": {
                                    "type": "integer",
                                    "description": "Amount of SWAP for the container in MB.",
                                    "optional": true,
                                    "defaultValue": 512,
                                    "constraints": {
                                      "minimum": 0
                                    }
                                  },
                                  "tags": {
                                    "type": "string",
                                    "description": "Tags of the Container. This is only meta information.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-tag-list"
                                    }
                                  },
                                  "template": {
                                    "type": "boolean",
                                    "description": "Enable/disable Template.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "timezone": {
                                    "type": "string",
                                    "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-ct-timezone"
                                    }
                                  },
                                  "tty": {
                                    "type": "integer",
                                    "description": "Specify the number of tty available to the container",
                                    "optional": true,
                                    "defaultValue": 2,
                                    "constraints": {
                                      "minimum": 0,
                                      "maximum": 6
                                    }
                                  },
                                  "unprivileged": {
                                    "type": "boolean",
                                    "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "unused[n]": {
                                    "type": "string",
                                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                                    "optional": true
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-nodes-node-lxc-vmid-config",
                          "operationId": "put-nodes-node-lxc-vmid-config",
                          "path": "/nodes/{node}/lxc/{vmid}/config",
                          "httpMethod": "PUT",
                          "name": "update_vm",
                          "description": "Set container options.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "non-volume mount points in rootfs and mp[n] are restricted to root@pam",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk",
                                      "VM.Config.CPU",
                                      "VM.Config.Memory",
                                      "VM.Config.Network",
                                      "VM.Config.Options"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "arch": {
                                  "type": "string",
                                  "description": "OS architecture type.",
                                  "optional": true,
                                  "defaultValue": "amd64",
                                  "enum": [
                                    "amd64",
                                    "i386",
                                    "arm64",
                                    "armhf",
                                    "riscv32",
                                    "riscv64"
                                  ]
                                },
                                "cmode": {
                                  "type": "string",
                                  "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                                  "optional": true,
                                  "defaultValue": "tty",
                                  "enum": [
                                    "shell",
                                    "console",
                                    "tty"
                                  ]
                                },
                                "console": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Attach a console device (/dev/console) to the container.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "cores": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 8192)",
                                  "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 8192
                                  }
                                },
                                "cpulimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - 8192)",
                                  "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 8192
                                  }
                                },
                                "cpuunits": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - 500000)",
                                  "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.",
                                  "verboseDescription": "CPU weight for a container. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this container gets. Number is relative to the weights of all the other running guests.",
                                  "optional": true,
                                  "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 500000
                                  }
                                },
                                "debug": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "delete": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 8192
                                  }
                                },
                                "dev[n]": {
                                  "type": "string",
                                  "typetext": "[[path=]<Path>] [,deny-write=<1|0>] [,gid=<integer>] [,mode=<Octal access mode>] [,uid=<integer>]",
                                  "description": "Device to pass through to the container",
                                  "optional": true
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "features": {
                                  "type": "string",
                                  "typetext": "[force_rw_sys=<1|0>] [,fuse=<1|0>] [,keyctl=<1|0>] [,mknod=<1|0>] [,mount=<fstype;fstype;...>] [,nesting=<1|0>]",
                                  "description": "Allow containers access to advanced features.",
                                  "optional": true
                                },
                                "hookscript": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Script that will be executed during various steps in the containers lifetime.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-volume-id"
                                  }
                                },
                                "hostname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Set a host name for the container.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 255,
                                    "format": "dns-name"
                                  }
                                },
                                "lock": {
                                  "type": "string",
                                  "description": "Lock/unlock the container.",
                                  "optional": true,
                                  "enum": [
                                    "backup",
                                    "create",
                                    "destroyed",
                                    "disk",
                                    "fstrim",
                                    "migrate",
                                    "mounted",
                                    "rollback",
                                    "snapshot",
                                    "snapshot-delete"
                                  ]
                                },
                                "memory": {
                                  "type": "integer",
                                  "typetext": "<integer> (16 - N)",
                                  "description": "Amount of RAM for the container in MB.",
                                  "optional": true,
                                  "defaultValue": 512,
                                  "constraints": {
                                    "minimum": 16
                                  }
                                },
                                "mp[n]": {
                                  "type": "string",
                                  "typetext": "[volume=]<volume> ,mp=<Path> [,acl=<1|0>] [,backup=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                                  "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.",
                                  "optional": true
                                },
                                "nameserver": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "lxc-ip-with-ll-iface-list"
                                  }
                                },
                                "net[n]": {
                                  "type": "string",
                                  "typetext": "name=<string> [,bridge=<bridge>] [,firewall=<1|0>] [,gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,hwaddr=<XX:XX:XX:XX:XX:XX>] [,ip=<(IPv4/CIDR|dhcp|manual)>] [,ip6=<(IPv6/CIDR|auto|dhcp|manual)>] [,link_down=<1|0>] [,mtu=<integer>] [,rate=<mbps>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,type=<veth>]",
                                  "description": "Specifies network interfaces for the container.",
                                  "optional": true
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "onboot": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Specifies whether a container will be started during system bootup.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "ostype": {
                                  "type": "string",
                                  "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                                  "optional": true,
                                  "enum": [
                                    "debian",
                                    "devuan",
                                    "ubuntu",
                                    "centos",
                                    "fedora",
                                    "opensuse",
                                    "archlinux",
                                    "alpine",
                                    "gentoo",
                                    "nixos",
                                    "unmanaged"
                                  ]
                                },
                                "protection": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "revert": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Revert a pending change.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "rootfs": {
                                  "type": "string",
                                  "typetext": "[volume=]<volume> [,acl=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                                  "description": "Use volume as container root.",
                                  "optional": true
                                },
                                "searchdomain": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "dns-name-list"
                                  }
                                },
                                "startup": {
                                  "type": "string",
                                  "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                                  "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-startup-order"
                                  }
                                },
                                "swap": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Amount of SWAP for the container in MB.",
                                  "optional": true,
                                  "defaultValue": 512,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "tags": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Tags of the Container. This is only meta information.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-tag-list"
                                  }
                                },
                                "template": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable Template.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "timezone": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-ct-timezone"
                                  }
                                },
                                "tty": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - 6)",
                                  "description": "Specify the number of tty available to the container",
                                  "optional": true,
                                  "defaultValue": 2,
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 6
                                  }
                                },
                                "unprivileged": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "unused[n]": {
                                  "type": "string",
                                  "typetext": "[volume=]<volume>",
                                  "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                                  "optional": true
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-feature",
                      "path": "/nodes/{node}/lxc/{vmid}/feature",
                      "slug": "nodes-node-lxc-vmid-feature",
                      "label": "feature",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-feature",
                          "operationId": "get-nodes-node-lxc-vmid-feature",
                          "path": "/nodes/{node}/lxc/{vmid}/feature",
                          "httpMethod": "GET",
                          "name": "vm_feature",
                          "description": "Check if feature for virtual machine is available.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "feature": {
                                  "type": "string",
                                  "description": "Feature to check.",
                                  "enum": [
                                    "snapshot",
                                    "clone",
                                    "copy"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "snapname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the snapshot.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "hasFeature": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-firewall",
                      "path": "/nodes/{node}/lxc/{vmid}/firewall",
                      "slug": "nodes-node-lxc-vmid-firewall",
                      "label": "firewall",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-firewall",
                          "operationId": "get-nodes-node-lxc-vmid-firewall",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "Directory index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-lxc-vmid-firewall-aliases",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases",
                          "slug": "nodes-node-lxc-vmid-firewall-aliases",
                          "label": "aliases",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-firewall-aliases",
                              "operationId": "get-nodes-node-lxc-vmid-firewall-aliases",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases",
                              "httpMethod": "GET",
                              "name": "get_aliases",
                              "description": "List aliases",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "cidr": {
                                          "type": "string"
                                        },
                                        "comment": {
                                          "type": "string",
                                          "optional": true
                                        },
                                        "digest": {
                                          "type": "string",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": false,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{name}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-lxc-vmid-firewall-aliases",
                              "operationId": "post-nodes-node-lxc-vmid-firewall-aliases",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases",
                              "httpMethod": "POST",
                              "name": "create_alias",
                              "description": "Create IP or Network Alias.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "cidr": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Network/IP specification in CIDR format.",
                                      "constraints": {
                                        "format": "IPorCIDR"
                                      }
                                    },
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "optional": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Alias name.",
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 64,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-lxc-vmid-firewall-aliases-name",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}",
                              "slug": "nodes-node-lxc-vmid-firewall-aliases-name",
                              "label": "{name}",
                              "endpoints": [
                                {
                                  "id": "delete-nodes-node-lxc-vmid-firewall-aliases-name",
                                  "operationId": "delete-nodes-node-lxc-vmid-firewall-aliases-name",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}",
                                  "httpMethod": "DELETE",
                                  "name": "remove_alias",
                                  "description": "Remove IP or Network alias.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Alias name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-nodes-node-lxc-vmid-firewall-aliases-name",
                                  "operationId": "get-nodes-node-lxc-vmid-firewall-aliases-name",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}",
                                  "httpMethod": "GET",
                                  "name": "read_alias",
                                  "description": "Read alias.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Audit"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Alias name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-nodes-node-lxc-vmid-firewall-aliases-name",
                                  "operationId": "put-nodes-node-lxc-vmid-firewall-aliases-name",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}",
                                  "httpMethod": "PUT",
                                  "name": "update_alias",
                                  "description": "Update IP or Network alias.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network/IP specification in CIDR format.",
                                          "constraints": {
                                            "format": "IPorCIDR"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "optional": true
                                        },
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Alias name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "rename": {
                                          "type": "string",
                                          "description": "Rename an existing alias.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        },
                        {
                          "id": "nodes-node-lxc-vmid-firewall-ipset",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset",
                          "slug": "nodes-node-lxc-vmid-firewall-ipset",
                          "label": "ipset",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-firewall-ipset",
                              "operationId": "get-nodes-node-lxc-vmid-firewall-ipset",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset",
                              "httpMethod": "GET",
                              "name": "ipset_index",
                              "description": "List IPSets",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "comment": {
                                          "type": "string",
                                          "optional": true
                                        },
                                        "digest": {
                                          "type": "string",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": false,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{name}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-lxc-vmid-firewall-ipset",
                              "operationId": "post-nodes-node-lxc-vmid-firewall-ipset",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset",
                              "httpMethod": "POST",
                              "name": "create_ipset",
                              "description": "Create new IPSet",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "optional": true
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "IP set name.",
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 64,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "rename": {
                                      "type": "string",
                                      "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                                      "optional": true,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 64,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-lxc-vmid-firewall-ipset-name",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}",
                              "slug": "nodes-node-lxc-vmid-firewall-ipset-name",
                              "label": "{name}",
                              "endpoints": [
                                {
                                  "id": "delete-nodes-node-lxc-vmid-firewall-ipset-name",
                                  "operationId": "delete-nodes-node-lxc-vmid-firewall-ipset-name",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}",
                                  "httpMethod": "DELETE",
                                  "name": "delete_ipset",
                                  "description": "Delete IPSet",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "force": {
                                          "type": "boolean",
                                          "typetext": "<boolean>",
                                          "description": "Delete all members of the IPSet, if there are any.",
                                          "optional": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-nodes-node-lxc-vmid-firewall-ipset-name",
                                  "operationId": "get-nodes-node-lxc-vmid-firewall-ipset-name",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}",
                                  "httpMethod": "GET",
                                  "name": "get_ipset",
                                  "description": "List IPSet content",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Audit"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "cidr": {
                                              "type": "string"
                                            },
                                            "comment": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "digest": {
                                              "type": "string",
                                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                              "optional": false,
                                              "constraints": {
                                                "maxLength": 64
                                              }
                                            },
                                            "nomatch": {
                                              "type": "boolean",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "metadata": {
                                          "links": [
                                            {
                                              "href": "{cidr}",
                                              "rel": "child"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "post-nodes-node-lxc-vmid-firewall-ipset-name",
                                  "operationId": "post-nodes-node-lxc-vmid-firewall-ipset-name",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}",
                                  "httpMethod": "POST",
                                  "name": "create_ip",
                                  "description": "Add IP or Network to IPSet.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network/IP specification in CIDR format.",
                                          "constraints": {
                                            "format": "IPorCIDRorAlias"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "optional": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "nomatch": {
                                          "type": "boolean",
                                          "typetext": "<boolean>",
                                          "optional": true
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": [
                                {
                                  "id": "nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}",
                                  "slug": "nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                  "label": "{cidr}",
                                  "endpoints": [
                                    {
                                      "id": "delete-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                      "operationId": "delete-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                      "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}",
                                      "httpMethod": "DELETE",
                                      "name": "remove_ip",
                                      "description": "Remove IP or Network from IPSet.",
                                      "security": {
                                        "allowToken": true,
                                        "requiresAuthentication": true,
                                        "permissions": {
                                          "all": [
                                            {
                                              "check": [
                                                "perm",
                                                "/vms/{vmid}",
                                                [
                                                  "VM.Config.Network"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "features": {
                                        "proxy": false,
                                        "download": false,
                                        "upload": false
                                      },
                                      "request": {
                                        "schema": {
                                          "properties": {
                                            "cidr": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Network/IP specification in CIDR format.",
                                              "constraints": {
                                                "format": "IPorCIDRorAlias"
                                              }
                                            },
                                            "digest": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                              "optional": true,
                                              "constraints": {
                                                "maxLength": 64
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "IP set name.",
                                              "constraints": {
                                                "minLength": 2,
                                                "maxLength": 64,
                                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                              }
                                            },
                                            "node": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "The cluster node name.",
                                              "constraints": {
                                                "format": "pve-node"
                                              }
                                            },
                                            "vmid": {
                                              "type": "integer",
                                              "typetext": "<integer> (100 - 999999999)",
                                              "description": "The (unique) ID of the VM.",
                                              "constraints": {
                                                "minimum": 100,
                                                "maximum": 999999999,
                                                "format": "pve-vmid"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "responses": [
                                        {
                                          "schema": {
                                            "type": "null"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "id": "get-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                      "operationId": "get-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                      "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}",
                                      "httpMethod": "GET",
                                      "name": "read_ip",
                                      "description": "Read IP or Network settings from IPSet.",
                                      "security": {
                                        "allowToken": true,
                                        "requiresAuthentication": true,
                                        "permissions": {
                                          "all": [
                                            {
                                              "check": [
                                                "perm",
                                                "/vms/{vmid}",
                                                [
                                                  "VM.Audit"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "features": {
                                        "proxy": false,
                                        "download": false,
                                        "upload": false
                                      },
                                      "request": {
                                        "schema": {
                                          "properties": {
                                            "cidr": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Network/IP specification in CIDR format.",
                                              "constraints": {
                                                "format": "IPorCIDRorAlias"
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "IP set name.",
                                              "constraints": {
                                                "minLength": 2,
                                                "maxLength": 64,
                                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                              }
                                            },
                                            "node": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "The cluster node name.",
                                              "constraints": {
                                                "format": "pve-node"
                                              }
                                            },
                                            "vmid": {
                                              "type": "integer",
                                              "typetext": "<integer> (100 - 999999999)",
                                              "description": "The (unique) ID of the VM.",
                                              "constraints": {
                                                "minimum": 100,
                                                "maximum": 999999999,
                                                "format": "pve-vmid"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "responses": [
                                        {
                                          "schema": {
                                            "type": "object"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "id": "put-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                      "operationId": "put-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
                                      "path": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}",
                                      "httpMethod": "PUT",
                                      "name": "update_ip",
                                      "description": "Update IP or Network settings",
                                      "security": {
                                        "allowToken": true,
                                        "requiresAuthentication": true,
                                        "permissions": {
                                          "all": [
                                            {
                                              "check": [
                                                "perm",
                                                "/vms/{vmid}",
                                                [
                                                  "VM.Config.Network"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "features": {
                                        "proxy": false,
                                        "download": false,
                                        "upload": false
                                      },
                                      "request": {
                                        "schema": {
                                          "properties": {
                                            "cidr": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Network/IP specification in CIDR format.",
                                              "constraints": {
                                                "format": "IPorCIDRorAlias"
                                              }
                                            },
                                            "comment": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "optional": true
                                            },
                                            "digest": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                              "optional": true,
                                              "constraints": {
                                                "maxLength": 64
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "IP set name.",
                                              "constraints": {
                                                "minLength": 2,
                                                "maxLength": 64,
                                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                              }
                                            },
                                            "node": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "The cluster node name.",
                                              "constraints": {
                                                "format": "pve-node"
                                              }
                                            },
                                            "nomatch": {
                                              "type": "boolean",
                                              "typetext": "<boolean>",
                                              "optional": true
                                            },
                                            "vmid": {
                                              "type": "integer",
                                              "typetext": "<integer> (100 - 999999999)",
                                              "description": "The (unique) ID of the VM.",
                                              "constraints": {
                                                "minimum": 100,
                                                "maximum": 999999999,
                                                "format": "pve-vmid"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "responses": [
                                        {
                                          "schema": {
                                            "type": "null"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": "nodes-node-lxc-vmid-firewall-log",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall/log",
                          "slug": "nodes-node-lxc-vmid-firewall-log",
                          "label": "log",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-firewall-log",
                              "operationId": "get-nodes-node-lxc-vmid-firewall-log",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/log",
                              "httpMethod": "GET",
                              "name": "log",
                              "description": "Read firewall log",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Console"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "limit": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "since": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Display log since this UNIX epoch.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "start": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "until": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Display log until this UNIX epoch.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "n": {
                                          "type": "integer",
                                          "description": "Line number"
                                        },
                                        "t": {
                                          "type": "string",
                                          "description": "Line text"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-firewall-options",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall/options",
                          "slug": "nodes-node-lxc-vmid-firewall-options",
                          "label": "options",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-firewall-options",
                              "operationId": "get-nodes-node-lxc-vmid-firewall-options",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/options",
                              "httpMethod": "GET",
                              "name": "get_options",
                              "description": "Get VM firewall options.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "dhcp": {
                                        "type": "boolean",
                                        "description": "Enable DHCP.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "enable": {
                                        "type": "boolean",
                                        "description": "Enable/disable firewall rules.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "ipfilter": {
                                        "type": "boolean",
                                        "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                                        "optional": true
                                      },
                                      "log_level_in": {
                                        "type": "string",
                                        "description": "Log level for incoming traffic.",
                                        "optional": true,
                                        "enum": [
                                          "emerg",
                                          "alert",
                                          "crit",
                                          "err",
                                          "warning",
                                          "notice",
                                          "info",
                                          "debug",
                                          "nolog"
                                        ]
                                      },
                                      "log_level_out": {
                                        "type": "string",
                                        "description": "Log level for outgoing traffic.",
                                        "optional": true,
                                        "enum": [
                                          "emerg",
                                          "alert",
                                          "crit",
                                          "err",
                                          "warning",
                                          "notice",
                                          "info",
                                          "debug",
                                          "nolog"
                                        ]
                                      },
                                      "macfilter": {
                                        "type": "boolean",
                                        "description": "Enable/disable MAC address filter.",
                                        "optional": true,
                                        "defaultValue": 1
                                      },
                                      "ndp": {
                                        "type": "boolean",
                                        "description": "Enable NDP (Neighbor Discovery Protocol).",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "policy_in": {
                                        "type": "string",
                                        "description": "Input policy.",
                                        "optional": true,
                                        "enum": [
                                          "ACCEPT",
                                          "REJECT",
                                          "DROP"
                                        ]
                                      },
                                      "policy_out": {
                                        "type": "string",
                                        "description": "Output policy.",
                                        "optional": true,
                                        "enum": [
                                          "ACCEPT",
                                          "REJECT",
                                          "DROP"
                                        ]
                                      },
                                      "radv": {
                                        "type": "boolean",
                                        "description": "Allow sending Router Advertisement.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "put-nodes-node-lxc-vmid-firewall-options",
                              "operationId": "put-nodes-node-lxc-vmid-firewall-options",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/options",
                              "httpMethod": "PUT",
                              "name": "set_options",
                              "description": "Set Firewall options.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "delete": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "A list of settings you want to delete.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-configid-list"
                                      }
                                    },
                                    "dhcp": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable DHCP.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "enable": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable/disable firewall rules.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "ipfilter": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                                      "optional": true
                                    },
                                    "log_level_in": {
                                      "type": "string",
                                      "description": "Log level for incoming traffic.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "log_level_out": {
                                      "type": "string",
                                      "description": "Log level for outgoing traffic.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "macfilter": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable/disable MAC address filter.",
                                      "optional": true,
                                      "defaultValue": 1
                                    },
                                    "ndp": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable NDP (Neighbor Discovery Protocol).",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "policy_in": {
                                      "type": "string",
                                      "description": "Input policy.",
                                      "optional": true,
                                      "enum": [
                                        "ACCEPT",
                                        "REJECT",
                                        "DROP"
                                      ]
                                    },
                                    "policy_out": {
                                      "type": "string",
                                      "description": "Output policy.",
                                      "optional": true,
                                      "enum": [
                                        "ACCEPT",
                                        "REJECT",
                                        "DROP"
                                      ]
                                    },
                                    "radv": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Allow sending Router Advertisement.",
                                      "optional": true
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-firewall-refs",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall/refs",
                          "slug": "nodes-node-lxc-vmid-firewall-refs",
                          "label": "refs",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-firewall-refs",
                              "operationId": "get-nodes-node-lxc-vmid-firewall-refs",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/refs",
                              "httpMethod": "GET",
                              "name": "refs",
                              "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Only list references of specified type.",
                                      "optional": true,
                                      "enum": [
                                        "alias",
                                        "ipset"
                                      ]
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "comment": {
                                          "type": "string",
                                          "optional": true
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "ref": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "alias",
                                            "ipset"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-firewall-rules",
                          "path": "/nodes/{node}/lxc/{vmid}/firewall/rules",
                          "slug": "nodes-node-lxc-vmid-firewall-rules",
                          "label": "rules",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-firewall-rules",
                              "operationId": "get-nodes-node-lxc-vmid-firewall-rules",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/rules",
                              "httpMethod": "GET",
                              "name": "get_rules",
                              "description": "List rules.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "pos": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{pos}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-lxc-vmid-firewall-rules",
                              "operationId": "post-nodes-node-lxc-vmid-firewall-rules",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/rules",
                              "httpMethod": "POST",
                              "name": "create_rule",
                              "description": "Create new rule.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "action": {
                                      "type": "string",
                                      "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                      "optional": false,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 20,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Descriptive comment.",
                                      "optional": true
                                    },
                                    "dest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 512,
                                        "format": "pve-fw-addr-spec"
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "dport": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-dport-spec"
                                      }
                                    },
                                    "enable": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Flag to enable/disable a rule.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "icmp-type": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-icmp-type-spec"
                                      }
                                    },
                                    "iface": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                      "optional": true,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 20,
                                        "format": "pve-iface"
                                      }
                                    },
                                    "log": {
                                      "type": "string",
                                      "description": "Log level for firewall rule.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "macro": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Use predefined standard macro.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 128
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "pos": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Update rule at position <pos>.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "proto": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-protocol-spec"
                                      }
                                    },
                                    "source": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 512,
                                        "format": "pve-fw-addr-spec"
                                      }
                                    },
                                    "sport": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-sport-spec"
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Rule type.",
                                      "optional": false,
                                      "enum": [
                                        "in",
                                        "out",
                                        "forward",
                                        "group"
                                      ]
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-lxc-vmid-firewall-rules-pos",
                              "path": "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}",
                              "slug": "nodes-node-lxc-vmid-firewall-rules-pos",
                              "label": "{pos}",
                              "endpoints": [
                                {
                                  "id": "delete-nodes-node-lxc-vmid-firewall-rules-pos",
                                  "operationId": "delete-nodes-node-lxc-vmid-firewall-rules-pos",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}",
                                  "httpMethod": "DELETE",
                                  "name": "delete_rule",
                                  "description": "Delete rule.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-nodes-node-lxc-vmid-firewall-rules-pos",
                                  "operationId": "get-nodes-node-lxc-vmid-firewall-rules-pos",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}",
                                  "httpMethod": "GET",
                                  "name": "get_rule",
                                  "description": "Get single rule data.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Audit"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "string"
                                          },
                                          "comment": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "dest": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "dport": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "enable": {
                                            "type": "integer",
                                            "optional": true
                                          },
                                          "icmp-type": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "iface": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "ipversion": {
                                            "type": "integer",
                                            "optional": true
                                          },
                                          "log": {
                                            "type": "string",
                                            "description": "Log level for firewall rule",
                                            "optional": true,
                                            "enum": [
                                              "emerg",
                                              "alert",
                                              "crit",
                                              "err",
                                              "warning",
                                              "notice",
                                              "info",
                                              "debug",
                                              "nolog"
                                            ]
                                          },
                                          "macro": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "pos": {
                                            "type": "integer"
                                          },
                                          "proto": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "source": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "sport": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-nodes-node-lxc-vmid-firewall-rules-pos",
                                  "operationId": "put-nodes-node-lxc-vmid-firewall-rules-pos",
                                  "path": "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}",
                                  "httpMethod": "PUT",
                                  "name": "update_rule",
                                  "description": "Modify rule data.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "action": {
                                          "type": "string",
                                          "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Descriptive comment.",
                                          "optional": true
                                        },
                                        "delete": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "A list of settings you want to delete.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-configid-list"
                                          }
                                        },
                                        "dest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 512,
                                            "format": "pve-fw-addr-spec"
                                          }
                                        },
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "dport": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-dport-spec"
                                          }
                                        },
                                        "enable": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Flag to enable/disable a rule.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "icmp-type": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-icmp-type-spec"
                                          }
                                        },
                                        "iface": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "format": "pve-iface"
                                          }
                                        },
                                        "log": {
                                          "type": "string",
                                          "description": "Log level for firewall rule.",
                                          "optional": true,
                                          "enum": [
                                            "emerg",
                                            "alert",
                                            "crit",
                                            "err",
                                            "warning",
                                            "notice",
                                            "info",
                                            "debug",
                                            "nolog"
                                          ]
                                        },
                                        "macro": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Use predefined standard macro.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 128
                                          }
                                        },
                                        "moveto": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "proto": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-protocol-spec"
                                          }
                                        },
                                        "source": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 512,
                                            "format": "pve-fw-addr-spec"
                                          }
                                        },
                                        "sport": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-sport-spec"
                                          }
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Rule type.",
                                          "optional": true,
                                          "enum": [
                                            "in",
                                            "out",
                                            "forward",
                                            "group"
                                          ]
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-lxc-vmid-interfaces",
                      "path": "/nodes/{node}/lxc/{vmid}/interfaces",
                      "slug": "nodes-node-lxc-vmid-interfaces",
                      "label": "interfaces",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-interfaces",
                          "operationId": "get-nodes-node-lxc-vmid-interfaces",
                          "path": "/nodes/{node}/lxc/{vmid}/interfaces",
                          "httpMethod": "GET",
                          "name": "ip",
                          "description": "Get IP addresses of the specified container interface.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hardware-address": {
                                      "type": "string",
                                      "description": "The MAC address of the interface",
                                      "optional": false
                                    },
                                    "hwaddr": {
                                      "type": "string",
                                      "description": "The MAC address of the interface",
                                      "optional": false
                                    },
                                    "inet": {
                                      "type": "string",
                                      "description": "The IPv4 address of the interface",
                                      "optional": true
                                    },
                                    "inet6": {
                                      "type": "string",
                                      "description": "The IPv6 address of the interface",
                                      "optional": true
                                    },
                                    "ip-addresses": {
                                      "type": "array",
                                      "description": "The addresses of the interface",
                                      "optional": false,
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ip-address": {
                                            "type": "string",
                                            "description": "IP-Address",
                                            "optional": true
                                          },
                                          "ip-address-type": {
                                            "type": "string",
                                            "description": "IP-Family",
                                            "optional": true
                                          },
                                          "prefix": {
                                            "type": "integer",
                                            "description": "IP-Prefix",
                                            "optional": true
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the interface",
                                      "optional": false
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-migrate",
                      "path": "/nodes/{node}/lxc/{vmid}/migrate",
                      "slug": "nodes-node-lxc-vmid-migrate",
                      "label": "migrate",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-migrate",
                          "operationId": "get-nodes-node-lxc-vmid-migrate",
                          "path": "/nodes/{node}/lxc/{vmid}/migrate",
                          "httpMethod": "GET",
                          "name": "migrate_vm_precondition",
                          "description": "Get preconditions for migration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "target": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "allowed-nodes": {
                                    "type": "array",
                                    "description": "List of nodes allowed for migration.",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "description": "An allowed node"
                                    }
                                  },
                                  "dependent-ha-resources": {
                                    "type": "array",
                                    "description": "HA resources, which will be migrated to the same target node as the VM, because these are in positive affinity with the VM.",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "description": "The '<ty>:<id>' resource IDs of a HA resource with a positive affinity rule to this CT."
                                    }
                                  },
                                  "not-allowed-nodes": {
                                    "type": "object",
                                    "description": "List of not allowed nodes with additional information.",
                                    "optional": true,
                                    "properties": {
                                      "blocking-ha-resources": {
                                        "type": "array",
                                        "description": "HA resources, which are blocking the container from being migrated to the node.",
                                        "optional": true,
                                        "items": {
                                          "type": "object",
                                          "description": "A blocking HA resource",
                                          "properties": {
                                            "cause": {
                                              "type": "string",
                                              "description": "The reason why the HA resource is blocking the migration.",
                                              "enum": [
                                                "resource-affinity"
                                              ]
                                            },
                                            "sid": {
                                              "type": "string",
                                              "description": "The blocking HA resource id"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "running": {
                                    "type": "boolean",
                                    "description": "Determines if the container is running."
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-lxc-vmid-migrate",
                          "operationId": "post-nodes-node-lxc-vmid-migrate",
                          "path": "/nodes/{node}/lxc/{vmid}/migrate",
                          "httpMethod": "POST",
                          "name": "migrate_vm",
                          "description": "Migrate the container to another node. Creates a new migration task.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "migrate limit from datacenter or storage config"
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "online": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use online/live migration.",
                                  "optional": true
                                },
                                "restart": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use restart migration",
                                  "optional": true
                                },
                                "target": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "target-storage": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "storage-pair-list"
                                  }
                                },
                                "timeout": {
                                  "type": "integer",
                                  "typetext": "<integer>",
                                  "description": "Timeout in seconds for shutdown for restart migration",
                                  "optional": true,
                                  "defaultValue": 180
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-move-volume",
                      "path": "/nodes/{node}/lxc/{vmid}/move_volume",
                      "slug": "nodes-node-lxc-vmid-move-volume",
                      "label": "move_volume",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-move-volume",
                          "operationId": "post-nodes-node-lxc-vmid-move-volume",
                          "path": "/nodes/{node}/lxc/{vmid}/move_volume",
                          "httpMethod": "POST",
                          "name": "move_volume",
                          "description": "Move a rootfs-/mp-volume to a different storage or to a different container.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Config.Disk' permissions on /vms/{vmid}, and 'Datastore.AllocateSpace' permissions on the storage. To move a volume to another container, you need the permissions on the target container as well.",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "clone limit from datacenter or storage config"
                                },
                                "delete": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Delete the original volume after successful copy. By default the original is kept as an unused volume entry.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1 \" .\n\t\t    \"digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "Target Storage.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "target-digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file of the target \" .\n\t\t    \"container has a different SHA1 digest. This can be used to prevent \" .\n\t\t    \"concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "target-vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "target-volume": {
                                  "type": "string",
                                  "description": "The config key the volume will be moved to. Default is the source volume key.",
                                  "optional": true,
                                  "enum": [
                                    "rootfs",
                                    "mp0",
                                    "mp1",
                                    "mp2",
                                    "mp3",
                                    "mp4",
                                    "mp5",
                                    "mp6",
                                    "mp7",
                                    "mp8",
                                    "mp9",
                                    "mp10",
                                    "mp11",
                                    "mp12",
                                    "mp13",
                                    "mp14",
                                    "mp15",
                                    "mp16",
                                    "mp17",
                                    "mp18",
                                    "mp19",
                                    "mp20",
                                    "mp21",
                                    "mp22",
                                    "mp23",
                                    "mp24",
                                    "mp25",
                                    "mp26",
                                    "mp27",
                                    "mp28",
                                    "mp29",
                                    "mp30",
                                    "mp31",
                                    "mp32",
                                    "mp33",
                                    "mp34",
                                    "mp35",
                                    "mp36",
                                    "mp37",
                                    "mp38",
                                    "mp39",
                                    "mp40",
                                    "mp41",
                                    "mp42",
                                    "mp43",
                                    "mp44",
                                    "mp45",
                                    "mp46",
                                    "mp47",
                                    "mp48",
                                    "mp49",
                                    "mp50",
                                    "mp51",
                                    "mp52",
                                    "mp53",
                                    "mp54",
                                    "mp55",
                                    "mp56",
                                    "mp57",
                                    "mp58",
                                    "mp59",
                                    "mp60",
                                    "mp61",
                                    "mp62",
                                    "mp63",
                                    "mp64",
                                    "mp65",
                                    "mp66",
                                    "mp67",
                                    "mp68",
                                    "mp69",
                                    "mp70",
                                    "mp71",
                                    "mp72",
                                    "mp73",
                                    "mp74",
                                    "mp75",
                                    "mp76",
                                    "mp77",
                                    "mp78",
                                    "mp79",
                                    "mp80",
                                    "mp81",
                                    "mp82",
                                    "mp83",
                                    "mp84",
                                    "mp85",
                                    "mp86",
                                    "mp87",
                                    "mp88",
                                    "mp89",
                                    "mp90",
                                    "mp91",
                                    "mp92",
                                    "mp93",
                                    "mp94",
                                    "mp95",
                                    "mp96",
                                    "mp97",
                                    "mp98",
                                    "mp99",
                                    "mp100",
                                    "mp101",
                                    "mp102",
                                    "mp103",
                                    "mp104",
                                    "mp105",
                                    "mp106",
                                    "mp107",
                                    "mp108",
                                    "mp109",
                                    "mp110",
                                    "mp111",
                                    "mp112",
                                    "mp113",
                                    "mp114",
                                    "mp115",
                                    "mp116",
                                    "mp117",
                                    "mp118",
                                    "mp119",
                                    "mp120",
                                    "mp121",
                                    "mp122",
                                    "mp123",
                                    "mp124",
                                    "mp125",
                                    "mp126",
                                    "mp127",
                                    "mp128",
                                    "mp129",
                                    "mp130",
                                    "mp131",
                                    "mp132",
                                    "mp133",
                                    "mp134",
                                    "mp135",
                                    "mp136",
                                    "mp137",
                                    "mp138",
                                    "mp139",
                                    "mp140",
                                    "mp141",
                                    "mp142",
                                    "mp143",
                                    "mp144",
                                    "mp145",
                                    "mp146",
                                    "mp147",
                                    "mp148",
                                    "mp149",
                                    "mp150",
                                    "mp151",
                                    "mp152",
                                    "mp153",
                                    "mp154",
                                    "mp155",
                                    "mp156",
                                    "mp157",
                                    "mp158",
                                    "mp159",
                                    "mp160",
                                    "mp161",
                                    "mp162",
                                    "mp163",
                                    "mp164",
                                    "mp165",
                                    "mp166",
                                    "mp167",
                                    "mp168",
                                    "mp169",
                                    "mp170",
                                    "mp171",
                                    "mp172",
                                    "mp173",
                                    "mp174",
                                    "mp175",
                                    "mp176",
                                    "mp177",
                                    "mp178",
                                    "mp179",
                                    "mp180",
                                    "mp181",
                                    "mp182",
                                    "mp183",
                                    "mp184",
                                    "mp185",
                                    "mp186",
                                    "mp187",
                                    "mp188",
                                    "mp189",
                                    "mp190",
                                    "mp191",
                                    "mp192",
                                    "mp193",
                                    "mp194",
                                    "mp195",
                                    "mp196",
                                    "mp197",
                                    "mp198",
                                    "mp199",
                                    "mp200",
                                    "mp201",
                                    "mp202",
                                    "mp203",
                                    "mp204",
                                    "mp205",
                                    "mp206",
                                    "mp207",
                                    "mp208",
                                    "mp209",
                                    "mp210",
                                    "mp211",
                                    "mp212",
                                    "mp213",
                                    "mp214",
                                    "mp215",
                                    "mp216",
                                    "mp217",
                                    "mp218",
                                    "mp219",
                                    "mp220",
                                    "mp221",
                                    "mp222",
                                    "mp223",
                                    "mp224",
                                    "mp225",
                                    "mp226",
                                    "mp227",
                                    "mp228",
                                    "mp229",
                                    "mp230",
                                    "mp231",
                                    "mp232",
                                    "mp233",
                                    "mp234",
                                    "mp235",
                                    "mp236",
                                    "mp237",
                                    "mp238",
                                    "mp239",
                                    "mp240",
                                    "mp241",
                                    "mp242",
                                    "mp243",
                                    "mp244",
                                    "mp245",
                                    "mp246",
                                    "mp247",
                                    "mp248",
                                    "mp249",
                                    "mp250",
                                    "mp251",
                                    "mp252",
                                    "mp253",
                                    "mp254",
                                    "mp255",
                                    "unused0",
                                    "unused1",
                                    "unused2",
                                    "unused3",
                                    "unused4",
                                    "unused5",
                                    "unused6",
                                    "unused7",
                                    "unused8",
                                    "unused9",
                                    "unused10",
                                    "unused11",
                                    "unused12",
                                    "unused13",
                                    "unused14",
                                    "unused15",
                                    "unused16",
                                    "unused17",
                                    "unused18",
                                    "unused19",
                                    "unused20",
                                    "unused21",
                                    "unused22",
                                    "unused23",
                                    "unused24",
                                    "unused25",
                                    "unused26",
                                    "unused27",
                                    "unused28",
                                    "unused29",
                                    "unused30",
                                    "unused31",
                                    "unused32",
                                    "unused33",
                                    "unused34",
                                    "unused35",
                                    "unused36",
                                    "unused37",
                                    "unused38",
                                    "unused39",
                                    "unused40",
                                    "unused41",
                                    "unused42",
                                    "unused43",
                                    "unused44",
                                    "unused45",
                                    "unused46",
                                    "unused47",
                                    "unused48",
                                    "unused49",
                                    "unused50",
                                    "unused51",
                                    "unused52",
                                    "unused53",
                                    "unused54",
                                    "unused55",
                                    "unused56",
                                    "unused57",
                                    "unused58",
                                    "unused59",
                                    "unused60",
                                    "unused61",
                                    "unused62",
                                    "unused63",
                                    "unused64",
                                    "unused65",
                                    "unused66",
                                    "unused67",
                                    "unused68",
                                    "unused69",
                                    "unused70",
                                    "unused71",
                                    "unused72",
                                    "unused73",
                                    "unused74",
                                    "unused75",
                                    "unused76",
                                    "unused77",
                                    "unused78",
                                    "unused79",
                                    "unused80",
                                    "unused81",
                                    "unused82",
                                    "unused83",
                                    "unused84",
                                    "unused85",
                                    "unused86",
                                    "unused87",
                                    "unused88",
                                    "unused89",
                                    "unused90",
                                    "unused91",
                                    "unused92",
                                    "unused93",
                                    "unused94",
                                    "unused95",
                                    "unused96",
                                    "unused97",
                                    "unused98",
                                    "unused99",
                                    "unused100",
                                    "unused101",
                                    "unused102",
                                    "unused103",
                                    "unused104",
                                    "unused105",
                                    "unused106",
                                    "unused107",
                                    "unused108",
                                    "unused109",
                                    "unused110",
                                    "unused111",
                                    "unused112",
                                    "unused113",
                                    "unused114",
                                    "unused115",
                                    "unused116",
                                    "unused117",
                                    "unused118",
                                    "unused119",
                                    "unused120",
                                    "unused121",
                                    "unused122",
                                    "unused123",
                                    "unused124",
                                    "unused125",
                                    "unused126",
                                    "unused127",
                                    "unused128",
                                    "unused129",
                                    "unused130",
                                    "unused131",
                                    "unused132",
                                    "unused133",
                                    "unused134",
                                    "unused135",
                                    "unused136",
                                    "unused137",
                                    "unused138",
                                    "unused139",
                                    "unused140",
                                    "unused141",
                                    "unused142",
                                    "unused143",
                                    "unused144",
                                    "unused145",
                                    "unused146",
                                    "unused147",
                                    "unused148",
                                    "unused149",
                                    "unused150",
                                    "unused151",
                                    "unused152",
                                    "unused153",
                                    "unused154",
                                    "unused155",
                                    "unused156",
                                    "unused157",
                                    "unused158",
                                    "unused159",
                                    "unused160",
                                    "unused161",
                                    "unused162",
                                    "unused163",
                                    "unused164",
                                    "unused165",
                                    "unused166",
                                    "unused167",
                                    "unused168",
                                    "unused169",
                                    "unused170",
                                    "unused171",
                                    "unused172",
                                    "unused173",
                                    "unused174",
                                    "unused175",
                                    "unused176",
                                    "unused177",
                                    "unused178",
                                    "unused179",
                                    "unused180",
                                    "unused181",
                                    "unused182",
                                    "unused183",
                                    "unused184",
                                    "unused185",
                                    "unused186",
                                    "unused187",
                                    "unused188",
                                    "unused189",
                                    "unused190",
                                    "unused191",
                                    "unused192",
                                    "unused193",
                                    "unused194",
                                    "unused195",
                                    "unused196",
                                    "unused197",
                                    "unused198",
                                    "unused199",
                                    "unused200",
                                    "unused201",
                                    "unused202",
                                    "unused203",
                                    "unused204",
                                    "unused205",
                                    "unused206",
                                    "unused207",
                                    "unused208",
                                    "unused209",
                                    "unused210",
                                    "unused211",
                                    "unused212",
                                    "unused213",
                                    "unused214",
                                    "unused215",
                                    "unused216",
                                    "unused217",
                                    "unused218",
                                    "unused219",
                                    "unused220",
                                    "unused221",
                                    "unused222",
                                    "unused223",
                                    "unused224",
                                    "unused225",
                                    "unused226",
                                    "unused227",
                                    "unused228",
                                    "unused229",
                                    "unused230",
                                    "unused231",
                                    "unused232",
                                    "unused233",
                                    "unused234",
                                    "unused235",
                                    "unused236",
                                    "unused237",
                                    "unused238",
                                    "unused239",
                                    "unused240",
                                    "unused241",
                                    "unused242",
                                    "unused243",
                                    "unused244",
                                    "unused245",
                                    "unused246",
                                    "unused247",
                                    "unused248",
                                    "unused249",
                                    "unused250",
                                    "unused251",
                                    "unused252",
                                    "unused253",
                                    "unused254",
                                    "unused255"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "volume": {
                                  "type": "string",
                                  "description": "Volume which will be moved.",
                                  "enum": [
                                    "rootfs",
                                    "mp0",
                                    "mp1",
                                    "mp2",
                                    "mp3",
                                    "mp4",
                                    "mp5",
                                    "mp6",
                                    "mp7",
                                    "mp8",
                                    "mp9",
                                    "mp10",
                                    "mp11",
                                    "mp12",
                                    "mp13",
                                    "mp14",
                                    "mp15",
                                    "mp16",
                                    "mp17",
                                    "mp18",
                                    "mp19",
                                    "mp20",
                                    "mp21",
                                    "mp22",
                                    "mp23",
                                    "mp24",
                                    "mp25",
                                    "mp26",
                                    "mp27",
                                    "mp28",
                                    "mp29",
                                    "mp30",
                                    "mp31",
                                    "mp32",
                                    "mp33",
                                    "mp34",
                                    "mp35",
                                    "mp36",
                                    "mp37",
                                    "mp38",
                                    "mp39",
                                    "mp40",
                                    "mp41",
                                    "mp42",
                                    "mp43",
                                    "mp44",
                                    "mp45",
                                    "mp46",
                                    "mp47",
                                    "mp48",
                                    "mp49",
                                    "mp50",
                                    "mp51",
                                    "mp52",
                                    "mp53",
                                    "mp54",
                                    "mp55",
                                    "mp56",
                                    "mp57",
                                    "mp58",
                                    "mp59",
                                    "mp60",
                                    "mp61",
                                    "mp62",
                                    "mp63",
                                    "mp64",
                                    "mp65",
                                    "mp66",
                                    "mp67",
                                    "mp68",
                                    "mp69",
                                    "mp70",
                                    "mp71",
                                    "mp72",
                                    "mp73",
                                    "mp74",
                                    "mp75",
                                    "mp76",
                                    "mp77",
                                    "mp78",
                                    "mp79",
                                    "mp80",
                                    "mp81",
                                    "mp82",
                                    "mp83",
                                    "mp84",
                                    "mp85",
                                    "mp86",
                                    "mp87",
                                    "mp88",
                                    "mp89",
                                    "mp90",
                                    "mp91",
                                    "mp92",
                                    "mp93",
                                    "mp94",
                                    "mp95",
                                    "mp96",
                                    "mp97",
                                    "mp98",
                                    "mp99",
                                    "mp100",
                                    "mp101",
                                    "mp102",
                                    "mp103",
                                    "mp104",
                                    "mp105",
                                    "mp106",
                                    "mp107",
                                    "mp108",
                                    "mp109",
                                    "mp110",
                                    "mp111",
                                    "mp112",
                                    "mp113",
                                    "mp114",
                                    "mp115",
                                    "mp116",
                                    "mp117",
                                    "mp118",
                                    "mp119",
                                    "mp120",
                                    "mp121",
                                    "mp122",
                                    "mp123",
                                    "mp124",
                                    "mp125",
                                    "mp126",
                                    "mp127",
                                    "mp128",
                                    "mp129",
                                    "mp130",
                                    "mp131",
                                    "mp132",
                                    "mp133",
                                    "mp134",
                                    "mp135",
                                    "mp136",
                                    "mp137",
                                    "mp138",
                                    "mp139",
                                    "mp140",
                                    "mp141",
                                    "mp142",
                                    "mp143",
                                    "mp144",
                                    "mp145",
                                    "mp146",
                                    "mp147",
                                    "mp148",
                                    "mp149",
                                    "mp150",
                                    "mp151",
                                    "mp152",
                                    "mp153",
                                    "mp154",
                                    "mp155",
                                    "mp156",
                                    "mp157",
                                    "mp158",
                                    "mp159",
                                    "mp160",
                                    "mp161",
                                    "mp162",
                                    "mp163",
                                    "mp164",
                                    "mp165",
                                    "mp166",
                                    "mp167",
                                    "mp168",
                                    "mp169",
                                    "mp170",
                                    "mp171",
                                    "mp172",
                                    "mp173",
                                    "mp174",
                                    "mp175",
                                    "mp176",
                                    "mp177",
                                    "mp178",
                                    "mp179",
                                    "mp180",
                                    "mp181",
                                    "mp182",
                                    "mp183",
                                    "mp184",
                                    "mp185",
                                    "mp186",
                                    "mp187",
                                    "mp188",
                                    "mp189",
                                    "mp190",
                                    "mp191",
                                    "mp192",
                                    "mp193",
                                    "mp194",
                                    "mp195",
                                    "mp196",
                                    "mp197",
                                    "mp198",
                                    "mp199",
                                    "mp200",
                                    "mp201",
                                    "mp202",
                                    "mp203",
                                    "mp204",
                                    "mp205",
                                    "mp206",
                                    "mp207",
                                    "mp208",
                                    "mp209",
                                    "mp210",
                                    "mp211",
                                    "mp212",
                                    "mp213",
                                    "mp214",
                                    "mp215",
                                    "mp216",
                                    "mp217",
                                    "mp218",
                                    "mp219",
                                    "mp220",
                                    "mp221",
                                    "mp222",
                                    "mp223",
                                    "mp224",
                                    "mp225",
                                    "mp226",
                                    "mp227",
                                    "mp228",
                                    "mp229",
                                    "mp230",
                                    "mp231",
                                    "mp232",
                                    "mp233",
                                    "mp234",
                                    "mp235",
                                    "mp236",
                                    "mp237",
                                    "mp238",
                                    "mp239",
                                    "mp240",
                                    "mp241",
                                    "mp242",
                                    "mp243",
                                    "mp244",
                                    "mp245",
                                    "mp246",
                                    "mp247",
                                    "mp248",
                                    "mp249",
                                    "mp250",
                                    "mp251",
                                    "mp252",
                                    "mp253",
                                    "mp254",
                                    "mp255",
                                    "unused0",
                                    "unused1",
                                    "unused2",
                                    "unused3",
                                    "unused4",
                                    "unused5",
                                    "unused6",
                                    "unused7",
                                    "unused8",
                                    "unused9",
                                    "unused10",
                                    "unused11",
                                    "unused12",
                                    "unused13",
                                    "unused14",
                                    "unused15",
                                    "unused16",
                                    "unused17",
                                    "unused18",
                                    "unused19",
                                    "unused20",
                                    "unused21",
                                    "unused22",
                                    "unused23",
                                    "unused24",
                                    "unused25",
                                    "unused26",
                                    "unused27",
                                    "unused28",
                                    "unused29",
                                    "unused30",
                                    "unused31",
                                    "unused32",
                                    "unused33",
                                    "unused34",
                                    "unused35",
                                    "unused36",
                                    "unused37",
                                    "unused38",
                                    "unused39",
                                    "unused40",
                                    "unused41",
                                    "unused42",
                                    "unused43",
                                    "unused44",
                                    "unused45",
                                    "unused46",
                                    "unused47",
                                    "unused48",
                                    "unused49",
                                    "unused50",
                                    "unused51",
                                    "unused52",
                                    "unused53",
                                    "unused54",
                                    "unused55",
                                    "unused56",
                                    "unused57",
                                    "unused58",
                                    "unused59",
                                    "unused60",
                                    "unused61",
                                    "unused62",
                                    "unused63",
                                    "unused64",
                                    "unused65",
                                    "unused66",
                                    "unused67",
                                    "unused68",
                                    "unused69",
                                    "unused70",
                                    "unused71",
                                    "unused72",
                                    "unused73",
                                    "unused74",
                                    "unused75",
                                    "unused76",
                                    "unused77",
                                    "unused78",
                                    "unused79",
                                    "unused80",
                                    "unused81",
                                    "unused82",
                                    "unused83",
                                    "unused84",
                                    "unused85",
                                    "unused86",
                                    "unused87",
                                    "unused88",
                                    "unused89",
                                    "unused90",
                                    "unused91",
                                    "unused92",
                                    "unused93",
                                    "unused94",
                                    "unused95",
                                    "unused96",
                                    "unused97",
                                    "unused98",
                                    "unused99",
                                    "unused100",
                                    "unused101",
                                    "unused102",
                                    "unused103",
                                    "unused104",
                                    "unused105",
                                    "unused106",
                                    "unused107",
                                    "unused108",
                                    "unused109",
                                    "unused110",
                                    "unused111",
                                    "unused112",
                                    "unused113",
                                    "unused114",
                                    "unused115",
                                    "unused116",
                                    "unused117",
                                    "unused118",
                                    "unused119",
                                    "unused120",
                                    "unused121",
                                    "unused122",
                                    "unused123",
                                    "unused124",
                                    "unused125",
                                    "unused126",
                                    "unused127",
                                    "unused128",
                                    "unused129",
                                    "unused130",
                                    "unused131",
                                    "unused132",
                                    "unused133",
                                    "unused134",
                                    "unused135",
                                    "unused136",
                                    "unused137",
                                    "unused138",
                                    "unused139",
                                    "unused140",
                                    "unused141",
                                    "unused142",
                                    "unused143",
                                    "unused144",
                                    "unused145",
                                    "unused146",
                                    "unused147",
                                    "unused148",
                                    "unused149",
                                    "unused150",
                                    "unused151",
                                    "unused152",
                                    "unused153",
                                    "unused154",
                                    "unused155",
                                    "unused156",
                                    "unused157",
                                    "unused158",
                                    "unused159",
                                    "unused160",
                                    "unused161",
                                    "unused162",
                                    "unused163",
                                    "unused164",
                                    "unused165",
                                    "unused166",
                                    "unused167",
                                    "unused168",
                                    "unused169",
                                    "unused170",
                                    "unused171",
                                    "unused172",
                                    "unused173",
                                    "unused174",
                                    "unused175",
                                    "unused176",
                                    "unused177",
                                    "unused178",
                                    "unused179",
                                    "unused180",
                                    "unused181",
                                    "unused182",
                                    "unused183",
                                    "unused184",
                                    "unused185",
                                    "unused186",
                                    "unused187",
                                    "unused188",
                                    "unused189",
                                    "unused190",
                                    "unused191",
                                    "unused192",
                                    "unused193",
                                    "unused194",
                                    "unused195",
                                    "unused196",
                                    "unused197",
                                    "unused198",
                                    "unused199",
                                    "unused200",
                                    "unused201",
                                    "unused202",
                                    "unused203",
                                    "unused204",
                                    "unused205",
                                    "unused206",
                                    "unused207",
                                    "unused208",
                                    "unused209",
                                    "unused210",
                                    "unused211",
                                    "unused212",
                                    "unused213",
                                    "unused214",
                                    "unused215",
                                    "unused216",
                                    "unused217",
                                    "unused218",
                                    "unused219",
                                    "unused220",
                                    "unused221",
                                    "unused222",
                                    "unused223",
                                    "unused224",
                                    "unused225",
                                    "unused226",
                                    "unused227",
                                    "unused228",
                                    "unused229",
                                    "unused230",
                                    "unused231",
                                    "unused232",
                                    "unused233",
                                    "unused234",
                                    "unused235",
                                    "unused236",
                                    "unused237",
                                    "unused238",
                                    "unused239",
                                    "unused240",
                                    "unused241",
                                    "unused242",
                                    "unused243",
                                    "unused244",
                                    "unused245",
                                    "unused246",
                                    "unused247",
                                    "unused248",
                                    "unused249",
                                    "unused250",
                                    "unused251",
                                    "unused252",
                                    "unused253",
                                    "unused254",
                                    "unused255"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-mtunnel",
                      "path": "/nodes/{node}/lxc/{vmid}/mtunnel",
                      "slug": "nodes-node-lxc-vmid-mtunnel",
                      "label": "mtunnel",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-mtunnel",
                          "operationId": "post-nodes-node-lxc-vmid-mtunnel",
                          "path": "/nodes/{node}/lxc/{vmid}/mtunnel",
                          "httpMethod": "POST",
                          "name": "mtunnel",
                          "description": "Migration tunnel endpoint - only for internal use by CT migration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Allocate' permissions on '/vms/{vmid}' and Sys.Incoming on '/'. Further permission checks happen during the actual migration.",
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/vms/{vmid}",
                                      [
                                        "VM.Allocate"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/",
                                      [
                                        "Sys.Incoming"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bridges": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "List of network bridges to check availability. Will be checked again for actually used bridges during migration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-bridge-id-list"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storages": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "List of storages to check permission and availability. Will be checked again for all actually used storages during migration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id-list"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "properties": {
                                  "socket": {
                                    "type": "string"
                                  },
                                  "ticket": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-mtunnelwebsocket",
                      "path": "/nodes/{node}/lxc/{vmid}/mtunnelwebsocket",
                      "slug": "nodes-node-lxc-vmid-mtunnelwebsocket",
                      "label": "mtunnelwebsocket",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-mtunnelwebsocket",
                          "operationId": "get-nodes-node-lxc-vmid-mtunnelwebsocket",
                          "path": "/nodes/{node}/lxc/{vmid}/mtunnelwebsocket",
                          "httpMethod": "GET",
                          "name": "mtunnelwebsocket",
                          "description": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need to pass a ticket valid for the selected socket. Tickets can be created via the mtunnel API call, which will check permissions accordingly.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "socket": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "unix socket to forward to"
                                },
                                "ticket": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command"
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "socket": {
                                    "type": "string",
                                    "optional": true
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-pending",
                      "path": "/nodes/{node}/lxc/{vmid}/pending",
                      "slug": "nodes-node-lxc-vmid-pending",
                      "label": "pending",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-pending",
                          "operationId": "get-nodes-node-lxc-vmid-pending",
                          "path": "/nodes/{node}/lxc/{vmid}/pending",
                          "httpMethod": "GET",
                          "name": "vm_pending",
                          "description": "Get container configuration, including pending changes.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "delete": {
                                      "type": "integer",
                                      "description": "Indicates a pending delete request if present and not 0.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0,
                                        "maximum": 2
                                      }
                                    },
                                    "key": {
                                      "type": "string",
                                      "description": "Configuration option name."
                                    },
                                    "pending": {
                                      "type": "string",
                                      "description": "Pending value.",
                                      "optional": true
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Current value.",
                                      "optional": true
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-remote-migrate",
                      "path": "/nodes/{node}/lxc/{vmid}/remote_migrate",
                      "slug": "nodes-node-lxc-vmid-remote-migrate",
                      "label": "remote_migrate",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-remote-migrate",
                          "operationId": "post-nodes-node-lxc-vmid-remote-migrate",
                          "path": "/nodes/{node}/lxc/{vmid}/remote_migrate",
                          "httpMethod": "POST",
                          "name": "remote_migrate_vm",
                          "description": "Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "migrate limit from datacenter or storage config"
                                },
                                "delete": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Delete the original CT and related data after successful migration. By default the original CT is kept on the source cluster in a stopped state.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "online": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use online/live migration.",
                                  "optional": true
                                },
                                "restart": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use restart migration",
                                  "optional": true
                                },
                                "target-bridge": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Mapping from source to target bridges. Providing only a single bridge ID maps all source bridges to that bridge. Providing the special value '1' will map each source bridge to itself.",
                                  "constraints": {
                                    "format": "bridge-pair-list"
                                  }
                                },
                                "target-endpoint": {
                                  "type": "string",
                                  "typetext": "apitoken=<PVEAPIToken=user@realm!token=SECRET> ,host=<ADDRESS> [,fingerprint=<FINGERPRINT>] [,port=<PORT>]",
                                  "description": "Remote target endpoint",
                                  "constraints": {
                                    "format": "proxmox-remote"
                                  }
                                },
                                "target-storage": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                                  "optional": false,
                                  "constraints": {
                                    "format": "storage-pair-list"
                                  }
                                },
                                "target-vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "timeout": {
                                  "type": "integer",
                                  "typetext": "<integer>",
                                  "description": "Timeout in seconds for shutdown for restart migration",
                                  "optional": true,
                                  "defaultValue": 180
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-resize",
                      "path": "/nodes/{node}/lxc/{vmid}/resize",
                      "slug": "nodes-node-lxc-vmid-resize",
                      "label": "resize",
                      "endpoints": [
                        {
                          "id": "put-nodes-node-lxc-vmid-resize",
                          "operationId": "put-nodes-node-lxc-vmid-resize",
                          "path": "/nodes/{node}/lxc/{vmid}/resize",
                          "httpMethod": "PUT",
                          "name": "resize_vm",
                          "description": "Resize a container mount point.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "disk": {
                                  "type": "string",
                                  "description": "The disk you want to resize.",
                                  "enum": [
                                    "rootfs",
                                    "mp0",
                                    "mp1",
                                    "mp2",
                                    "mp3",
                                    "mp4",
                                    "mp5",
                                    "mp6",
                                    "mp7",
                                    "mp8",
                                    "mp9",
                                    "mp10",
                                    "mp11",
                                    "mp12",
                                    "mp13",
                                    "mp14",
                                    "mp15",
                                    "mp16",
                                    "mp17",
                                    "mp18",
                                    "mp19",
                                    "mp20",
                                    "mp21",
                                    "mp22",
                                    "mp23",
                                    "mp24",
                                    "mp25",
                                    "mp26",
                                    "mp27",
                                    "mp28",
                                    "mp29",
                                    "mp30",
                                    "mp31",
                                    "mp32",
                                    "mp33",
                                    "mp34",
                                    "mp35",
                                    "mp36",
                                    "mp37",
                                    "mp38",
                                    "mp39",
                                    "mp40",
                                    "mp41",
                                    "mp42",
                                    "mp43",
                                    "mp44",
                                    "mp45",
                                    "mp46",
                                    "mp47",
                                    "mp48",
                                    "mp49",
                                    "mp50",
                                    "mp51",
                                    "mp52",
                                    "mp53",
                                    "mp54",
                                    "mp55",
                                    "mp56",
                                    "mp57",
                                    "mp58",
                                    "mp59",
                                    "mp60",
                                    "mp61",
                                    "mp62",
                                    "mp63",
                                    "mp64",
                                    "mp65",
                                    "mp66",
                                    "mp67",
                                    "mp68",
                                    "mp69",
                                    "mp70",
                                    "mp71",
                                    "mp72",
                                    "mp73",
                                    "mp74",
                                    "mp75",
                                    "mp76",
                                    "mp77",
                                    "mp78",
                                    "mp79",
                                    "mp80",
                                    "mp81",
                                    "mp82",
                                    "mp83",
                                    "mp84",
                                    "mp85",
                                    "mp86",
                                    "mp87",
                                    "mp88",
                                    "mp89",
                                    "mp90",
                                    "mp91",
                                    "mp92",
                                    "mp93",
                                    "mp94",
                                    "mp95",
                                    "mp96",
                                    "mp97",
                                    "mp98",
                                    "mp99",
                                    "mp100",
                                    "mp101",
                                    "mp102",
                                    "mp103",
                                    "mp104",
                                    "mp105",
                                    "mp106",
                                    "mp107",
                                    "mp108",
                                    "mp109",
                                    "mp110",
                                    "mp111",
                                    "mp112",
                                    "mp113",
                                    "mp114",
                                    "mp115",
                                    "mp116",
                                    "mp117",
                                    "mp118",
                                    "mp119",
                                    "mp120",
                                    "mp121",
                                    "mp122",
                                    "mp123",
                                    "mp124",
                                    "mp125",
                                    "mp126",
                                    "mp127",
                                    "mp128",
                                    "mp129",
                                    "mp130",
                                    "mp131",
                                    "mp132",
                                    "mp133",
                                    "mp134",
                                    "mp135",
                                    "mp136",
                                    "mp137",
                                    "mp138",
                                    "mp139",
                                    "mp140",
                                    "mp141",
                                    "mp142",
                                    "mp143",
                                    "mp144",
                                    "mp145",
                                    "mp146",
                                    "mp147",
                                    "mp148",
                                    "mp149",
                                    "mp150",
                                    "mp151",
                                    "mp152",
                                    "mp153",
                                    "mp154",
                                    "mp155",
                                    "mp156",
                                    "mp157",
                                    "mp158",
                                    "mp159",
                                    "mp160",
                                    "mp161",
                                    "mp162",
                                    "mp163",
                                    "mp164",
                                    "mp165",
                                    "mp166",
                                    "mp167",
                                    "mp168",
                                    "mp169",
                                    "mp170",
                                    "mp171",
                                    "mp172",
                                    "mp173",
                                    "mp174",
                                    "mp175",
                                    "mp176",
                                    "mp177",
                                    "mp178",
                                    "mp179",
                                    "mp180",
                                    "mp181",
                                    "mp182",
                                    "mp183",
                                    "mp184",
                                    "mp185",
                                    "mp186",
                                    "mp187",
                                    "mp188",
                                    "mp189",
                                    "mp190",
                                    "mp191",
                                    "mp192",
                                    "mp193",
                                    "mp194",
                                    "mp195",
                                    "mp196",
                                    "mp197",
                                    "mp198",
                                    "mp199",
                                    "mp200",
                                    "mp201",
                                    "mp202",
                                    "mp203",
                                    "mp204",
                                    "mp205",
                                    "mp206",
                                    "mp207",
                                    "mp208",
                                    "mp209",
                                    "mp210",
                                    "mp211",
                                    "mp212",
                                    "mp213",
                                    "mp214",
                                    "mp215",
                                    "mp216",
                                    "mp217",
                                    "mp218",
                                    "mp219",
                                    "mp220",
                                    "mp221",
                                    "mp222",
                                    "mp223",
                                    "mp224",
                                    "mp225",
                                    "mp226",
                                    "mp227",
                                    "mp228",
                                    "mp229",
                                    "mp230",
                                    "mp231",
                                    "mp232",
                                    "mp233",
                                    "mp234",
                                    "mp235",
                                    "mp236",
                                    "mp237",
                                    "mp238",
                                    "mp239",
                                    "mp240",
                                    "mp241",
                                    "mp242",
                                    "mp243",
                                    "mp244",
                                    "mp245",
                                    "mp246",
                                    "mp247",
                                    "mp248",
                                    "mp249",
                                    "mp250",
                                    "mp251",
                                    "mp252",
                                    "mp253",
                                    "mp254",
                                    "mp255"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "size": {
                                  "type": "string",
                                  "description": "The new size. With the '+' sign the value is added to the actual size of the volume and without it, the value is taken as an absolute one. Shrinking disk size is not supported.",
                                  "constraints": {
                                    "pattern": "\\+?\\d+(\\.\\d+)?[KMGT]?"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-rrd",
                      "path": "/nodes/{node}/lxc/{vmid}/rrd",
                      "slug": "nodes-node-lxc-vmid-rrd",
                      "label": "rrd",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-rrd",
                          "operationId": "get-nodes-node-lxc-vmid-rrd",
                          "path": "/nodes/{node}/lxc/{vmid}/rrd",
                          "httpMethod": "GET",
                          "name": "rrd",
                          "description": "Read VM RRD statistics (returns PNG)",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cf": {
                                  "type": "string",
                                  "description": "The RRD consolidation function",
                                  "optional": true,
                                  "enum": [
                                    "AVERAGE",
                                    "MAX"
                                  ]
                                },
                                "ds": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The list of datasources you want to display.",
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "timeframe": {
                                  "type": "string",
                                  "description": "Specify the time frame you are interested in.",
                                  "enum": [
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-rrddata",
                      "path": "/nodes/{node}/lxc/{vmid}/rrddata",
                      "slug": "nodes-node-lxc-vmid-rrddata",
                      "label": "rrddata",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-rrddata",
                          "operationId": "get-nodes-node-lxc-vmid-rrddata",
                          "path": "/nodes/{node}/lxc/{vmid}/rrddata",
                          "httpMethod": "GET",
                          "name": "rrddata",
                          "description": "Read VM RRD statistics",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cf": {
                                  "type": "string",
                                  "description": "The RRD consolidation function",
                                  "optional": true,
                                  "enum": [
                                    "AVERAGE",
                                    "MAX"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "timeframe": {
                                  "type": "string",
                                  "description": "Specify the time frame you are interested in.",
                                  "enum": [
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-snapshot",
                      "path": "/nodes/{node}/lxc/{vmid}/snapshot",
                      "slug": "nodes-node-lxc-vmid-snapshot",
                      "label": "snapshot",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-snapshot",
                          "operationId": "get-nodes-node-lxc-vmid-snapshot",
                          "path": "/nodes/{node}/lxc/{vmid}/snapshot",
                          "httpMethod": "GET",
                          "name": "list",
                          "description": "List all snapshots.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "Snapshot description."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Snapshot identifier. Value 'current' identifies the current VM."
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Parent snapshot identifier.",
                                      "optional": true
                                    },
                                    "snaptime": {
                                      "type": "integer",
                                      "description": "Snapshot creation time",
                                      "optional": true,
                                      "metadata": {
                                        "renderer": "timestamp"
                                      }
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-lxc-vmid-snapshot",
                          "operationId": "post-nodes-node-lxc-vmid-snapshot",
                          "path": "/nodes/{node}/lxc/{vmid}/snapshot",
                          "httpMethod": "POST",
                          "name": "snapshot",
                          "description": "Snapshot a container.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Snapshot"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A textual description or comment.",
                                  "optional": true
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "snapname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the snapshot.",
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-lxc-vmid-snapshot-snapname",
                          "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}",
                          "slug": "nodes-node-lxc-vmid-snapshot-snapname",
                          "label": "{snapname}",
                          "endpoints": [
                            {
                              "id": "delete-nodes-node-lxc-vmid-snapshot-snapname",
                              "operationId": "delete-nodes-node-lxc-vmid-snapshot-snapname",
                              "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}",
                              "httpMethod": "DELETE",
                              "name": "delsnapshot",
                              "description": "Delete a LXC snapshot.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Snapshot"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "force": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "For removal from config file, even if removing disk snapshots fails.",
                                      "optional": true
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "snapname": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The name of the snapshot.",
                                      "constraints": {
                                        "maxLength": 40,
                                        "format": "pve-configid"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "the task ID.",
                                  "schema": {
                                    "type": "string",
                                    "description": "the task ID."
                                  }
                                }
                              ]
                            },
                            {
                              "id": "get-nodes-node-lxc-vmid-snapshot-snapname",
                              "operationId": "get-nodes-node-lxc-vmid-snapshot-snapname",
                              "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}",
                              "httpMethod": "GET",
                              "name": "snapshot_cmd_idx",
                              "description": "",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "snapname": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The name of the snapshot.",
                                      "constraints": {
                                        "maxLength": 40,
                                        "format": "pve-configid"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{cmd}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-lxc-vmid-snapshot-snapname-config",
                              "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config",
                              "slug": "nodes-node-lxc-vmid-snapshot-snapname-config",
                              "label": "config",
                              "endpoints": [
                                {
                                  "id": "get-nodes-node-lxc-vmid-snapshot-snapname-config",
                                  "operationId": "get-nodes-node-lxc-vmid-snapshot-snapname-config",
                                  "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config",
                                  "httpMethod": "GET",
                                  "name": "get_snapshot_config",
                                  "description": "Get snapshot configuration",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Snapshot",
                                              "VM.Snapshot.Rollback",
                                              "VM.Audit"
                                            ],
                                            "any",
                                            1
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "snapname": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The name of the snapshot.",
                                          "constraints": {
                                            "maxLength": 40,
                                            "format": "pve-configid"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-nodes-node-lxc-vmid-snapshot-snapname-config",
                                  "operationId": "put-nodes-node-lxc-vmid-snapshot-snapname-config",
                                  "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config",
                                  "httpMethod": "PUT",
                                  "name": "update_snapshot_config",
                                  "description": "Update snapshot metadata.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Snapshot"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "description": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "A textual description or comment.",
                                          "optional": true
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "snapname": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The name of the snapshot.",
                                          "constraints": {
                                            "maxLength": 40,
                                            "format": "pve-configid"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            },
                            {
                              "id": "nodes-node-lxc-vmid-snapshot-snapname-rollback",
                              "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback",
                              "slug": "nodes-node-lxc-vmid-snapshot-snapname-rollback",
                              "label": "rollback",
                              "endpoints": [
                                {
                                  "id": "post-nodes-node-lxc-vmid-snapshot-snapname-rollback",
                                  "operationId": "post-nodes-node-lxc-vmid-snapshot-snapname-rollback",
                                  "path": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback",
                                  "httpMethod": "POST",
                                  "name": "rollback",
                                  "description": "Rollback LXC state to specified snapshot.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Snapshot",
                                              "VM.Snapshot.Rollback"
                                            ],
                                            "any",
                                            1
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "snapname": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The name of the snapshot.",
                                          "constraints": {
                                            "maxLength": 40,
                                            "format": "pve-configid"
                                          }
                                        },
                                        "start": {
                                          "type": "boolean",
                                          "typetext": "<boolean>",
                                          "description": "Whether the container should get started after rolling back successfully",
                                          "optional": true,
                                          "defaultValue": 0
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "description": "the task ID.",
                                      "schema": {
                                        "type": "string",
                                        "description": "the task ID."
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-lxc-vmid-spiceproxy",
                      "path": "/nodes/{node}/lxc/{vmid}/spiceproxy",
                      "slug": "nodes-node-lxc-vmid-spiceproxy",
                      "label": "spiceproxy",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-spiceproxy",
                          "operationId": "post-nodes-node-lxc-vmid-spiceproxy",
                          "path": "/nodes/{node}/lxc/{vmid}/spiceproxy",
                          "httpMethod": "POST",
                          "name": "spiceproxy",
                          "description": "Returns a SPICE configuration to connect to the CT.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "proxy": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI).",
                                  "optional": true,
                                  "constraints": {
                                    "format": "address"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                              "schema": {
                                "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "proxy": {
                                    "type": "string"
                                  },
                                  "tls-port": {
                                    "type": "integer"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": true
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-status",
                      "path": "/nodes/{node}/lxc/{vmid}/status",
                      "slug": "nodes-node-lxc-vmid-status",
                      "label": "status",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-status",
                          "operationId": "get-nodes-node-lxc-vmid-status",
                          "path": "/nodes/{node}/lxc/{vmid}/status",
                          "httpMethod": "GET",
                          "name": "vmcmdidx",
                          "description": "Directory index",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "subdir": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{subdir}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-lxc-vmid-status-current",
                          "path": "/nodes/{node}/lxc/{vmid}/status/current",
                          "slug": "nodes-node-lxc-vmid-status-current",
                          "label": "current",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-lxc-vmid-status-current",
                              "operationId": "get-nodes-node-lxc-vmid-status-current",
                              "path": "/nodes/{node}/lxc/{vmid}/status/current",
                              "httpMethod": "GET",
                              "name": "vm_status",
                              "description": "Get virtual machine status.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "cpu": {
                                        "type": "number",
                                        "description": "Current CPU usage.",
                                        "optional": true
                                      },
                                      "cpus": {
                                        "type": "number",
                                        "description": "Maximum usable CPUs.",
                                        "optional": true
                                      },
                                      "disk": {
                                        "type": "integer",
                                        "description": "Root disk image space-usage in bytes.",
                                        "optional": true,
                                        "constraints": {
                                          "minimum": 0
                                        },
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "diskread": {
                                        "type": "integer",
                                        "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "diskwrite": {
                                        "type": "integer",
                                        "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "ha": {
                                        "type": "object",
                                        "description": "HA manager service status."
                                      },
                                      "lock": {
                                        "type": "string",
                                        "description": "The current config lock, if any.",
                                        "optional": true
                                      },
                                      "maxdisk": {
                                        "type": "integer",
                                        "description": "Root disk image size in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "maxmem": {
                                        "type": "integer",
                                        "description": "Maximum memory in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "maxswap": {
                                        "type": "integer",
                                        "description": "Maximum SWAP memory in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "mem": {
                                        "type": "integer",
                                        "description": "Currently used memory in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Container name.",
                                        "optional": true
                                      },
                                      "netin": {
                                        "type": "integer",
                                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "netout": {
                                        "type": "integer",
                                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "pressurecpusome": {
                                        "type": "number",
                                        "description": "CPU Some pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressureiofull": {
                                        "type": "number",
                                        "description": "IO Full pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressureiosome": {
                                        "type": "number",
                                        "description": "IO Some pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressurememoryfull": {
                                        "type": "number",
                                        "description": "Memory Full pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressurememorysome": {
                                        "type": "number",
                                        "description": "Memory Some pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "LXC Container status.",
                                        "enum": [
                                          "stopped",
                                          "running"
                                        ]
                                      },
                                      "tags": {
                                        "type": "string",
                                        "description": "The current configured tags, if any.",
                                        "optional": true
                                      },
                                      "template": {
                                        "type": "boolean",
                                        "description": "Determines if the guest is a template.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "uptime": {
                                        "type": "integer",
                                        "description": "Uptime in seconds.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "duration"
                                        }
                                      },
                                      "vmid": {
                                        "type": "integer",
                                        "description": "The (unique) ID of the VM.",
                                        "constraints": {
                                          "minimum": 100,
                                          "maximum": 999999999,
                                          "format": "pve-vmid"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-status-reboot",
                          "path": "/nodes/{node}/lxc/{vmid}/status/reboot",
                          "slug": "nodes-node-lxc-vmid-status-reboot",
                          "label": "reboot",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-lxc-vmid-status-reboot",
                              "operationId": "post-nodes-node-lxc-vmid-status-reboot",
                              "path": "/nodes/{node}/lxc/{vmid}/status/reboot",
                              "httpMethod": "POST",
                              "name": "vm_reboot",
                              "description": "Reboot the container by shutting it down, and starting it again. Applies pending changes.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Wait maximal timeout seconds for the shutdown.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-status-resume",
                          "path": "/nodes/{node}/lxc/{vmid}/status/resume",
                          "slug": "nodes-node-lxc-vmid-status-resume",
                          "label": "resume",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-lxc-vmid-status-resume",
                              "operationId": "post-nodes-node-lxc-vmid-status-resume",
                              "path": "/nodes/{node}/lxc/{vmid}/status/resume",
                              "httpMethod": "POST",
                              "name": "vm_resume",
                              "description": "Resume the container.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-status-shutdown",
                          "path": "/nodes/{node}/lxc/{vmid}/status/shutdown",
                          "slug": "nodes-node-lxc-vmid-status-shutdown",
                          "label": "shutdown",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-lxc-vmid-status-shutdown",
                              "operationId": "post-nodes-node-lxc-vmid-status-shutdown",
                              "path": "/nodes/{node}/lxc/{vmid}/status/shutdown",
                              "httpMethod": "POST",
                              "name": "vm_shutdown",
                              "description": "Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "forceStop": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Make sure the Container stops.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Wait maximal timeout seconds.",
                                      "optional": true,
                                      "defaultValue": 60,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-status-start",
                          "path": "/nodes/{node}/lxc/{vmid}/status/start",
                          "slug": "nodes-node-lxc-vmid-status-start",
                          "label": "start",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-lxc-vmid-status-start",
                              "operationId": "post-nodes-node-lxc-vmid-status-start",
                              "path": "/nodes/{node}/lxc/{vmid}/status/start",
                              "httpMethod": "POST",
                              "name": "vm_start",
                              "description": "Start the container.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "debug": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "If set, enables very verbose debug log-level on start.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-status-stop",
                          "path": "/nodes/{node}/lxc/{vmid}/status/stop",
                          "slug": "nodes-node-lxc-vmid-status-stop",
                          "label": "stop",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-lxc-vmid-status-stop",
                              "operationId": "post-nodes-node-lxc-vmid-status-stop",
                              "path": "/nodes/{node}/lxc/{vmid}/status/stop",
                              "httpMethod": "POST",
                              "name": "vm_stop",
                              "description": "Stop the container. This will abruptly stop all processes running in the container.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "overrule-shutdown": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Try to abort active 'vzshutdown' tasks before stopping.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-lxc-vmid-status-suspend",
                          "path": "/nodes/{node}/lxc/{vmid}/status/suspend",
                          "slug": "nodes-node-lxc-vmid-status-suspend",
                          "label": "suspend",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-lxc-vmid-status-suspend",
                              "operationId": "post-nodes-node-lxc-vmid-status-suspend",
                              "path": "/nodes/{node}/lxc/{vmid}/status/suspend",
                              "httpMethod": "POST",
                              "name": "vm_suspend",
                              "description": "Suspend the container. This is experimental.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-lxc-vmid-template",
                      "path": "/nodes/{node}/lxc/{vmid}/template",
                      "slug": "nodes-node-lxc-vmid-template",
                      "label": "template",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-template",
                          "operationId": "post-nodes-node-lxc-vmid-template",
                          "path": "/nodes/{node}/lxc/{vmid}/template",
                          "httpMethod": "POST",
                          "name": "template",
                          "description": "Create a Template.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Allocate' permissions on /vms/{vmid}",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-termproxy",
                      "path": "/nodes/{node}/lxc/{vmid}/termproxy",
                      "slug": "nodes-node-lxc-vmid-termproxy",
                      "label": "termproxy",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-termproxy",
                          "operationId": "post-nodes-node-lxc-vmid-termproxy",
                          "path": "/nodes/{node}/lxc/{vmid}/termproxy",
                          "httpMethod": "POST",
                          "name": "termproxy",
                          "description": "Creates a TCP proxy connection.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "properties": {
                                  "port": {
                                    "type": "integer"
                                  },
                                  "ticket": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-vncproxy",
                      "path": "/nodes/{node}/lxc/{vmid}/vncproxy",
                      "slug": "nodes-node-lxc-vmid-vncproxy",
                      "label": "vncproxy",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-lxc-vmid-vncproxy",
                          "operationId": "post-nodes-node-lxc-vmid-vncproxy",
                          "path": "/nodes/{node}/lxc/{vmid}/vncproxy",
                          "httpMethod": "POST",
                          "name": "vncproxy",
                          "description": "Creates a TCP VNC proxy connections.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "height": {
                                  "type": "integer",
                                  "typetext": "<integer> (16 - 2160)",
                                  "description": "sets the height of the console in pixels.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 16,
                                    "maximum": 2160
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "websocket": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "use websocket instead of standard VNC.",
                                  "optional": true
                                },
                                "width": {
                                  "type": "integer",
                                  "typetext": "<integer> (16 - 4096)",
                                  "description": "sets the width of the console in pixels.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 16,
                                    "maximum": 4096
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "properties": {
                                  "cert": {
                                    "type": "string"
                                  },
                                  "port": {
                                    "type": "integer"
                                  },
                                  "ticket": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-lxc-vmid-vncwebsocket",
                      "path": "/nodes/{node}/lxc/{vmid}/vncwebsocket",
                      "slug": "nodes-node-lxc-vmid-vncwebsocket",
                      "label": "vncwebsocket",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-lxc-vmid-vncwebsocket",
                          "operationId": "get-nodes-node-lxc-vmid-vncwebsocket",
                          "path": "/nodes/{node}/lxc/{vmid}/vncwebsocket",
                          "httpMethod": "GET",
                          "name": "vncwebsocket",
                          "description": "Opens a weksocket for VNC traffic.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You also need to pass a valid ticket (vncticket).",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "typetext": "<integer> (5900 - 5999)",
                                  "description": "Port number returned by previous vncproxy call.",
                                  "constraints": {
                                    "minimum": 5900,
                                    "maximum": 5999
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vncticket": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Ticket from previous call to vncproxy.",
                                  "constraints": {
                                    "maxLength": 512
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-migrateall",
              "path": "/nodes/{node}/migrateall",
              "slug": "nodes-node-migrateall",
              "label": "migrateall",
              "endpoints": [
                {
                  "id": "post-nodes-node-migrateall",
                  "operationId": "post-nodes-node-migrateall",
                  "path": "/nodes/{node}/migrateall",
                  "httpMethod": "POST",
                  "name": "migrateall",
                  "description": "Migrate all VMs and Containers.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "The 'VM.Migrate' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "maxworkers": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "Maximal number of parallel migration job. If not set, uses'max_workers' from datacenter.cfg. One of both must be set!",
                          "optional": true,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "target": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Target node.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "vms": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only consider Guests with these IDs.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        },
                        "with-local-disks": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable live storage migration for local disk",
                          "optional": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-netstat",
              "path": "/nodes/{node}/netstat",
              "slug": "nodes-node-netstat",
              "label": "netstat",
              "endpoints": [
                {
                  "id": "get-nodes-node-netstat",
                  "operationId": "get-nodes-node-netstat",
                  "path": "/nodes/{node}/netstat",
                  "httpMethod": "GET",
                  "name": "netstat",
                  "description": "Read tap/vm network device interface counters",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-network",
              "path": "/nodes/{node}/network",
              "slug": "nodes-node-network",
              "label": "network",
              "endpoints": [
                {
                  "id": "delete-nodes-node-network",
                  "operationId": "delete-nodes-node-network",
                  "path": "/nodes/{node}/network",
                  "httpMethod": "DELETE",
                  "name": "revert_network_changes",
                  "description": "Revert network configuration changes.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-nodes-node-network",
                  "operationId": "get-nodes-node-network",
                  "path": "/nodes/{node}/network",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "List available networks",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "Only list specific interface types.",
                          "optional": true,
                          "enum": [
                            "bridge",
                            "bond",
                            "eth",
                            "alias",
                            "vlan",
                            "fabric",
                            "OVSBridge",
                            "OVSBond",
                            "OVSPort",
                            "OVSIntPort",
                            "vnet",
                            "any_bridge",
                            "any_local_bridge",
                            "include_sdn"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean",
                              "description": "Set to true if the interface is active.",
                              "optional": true
                            },
                            "address": {
                              "type": "string",
                              "description": "IP address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv4",
                                "requires": [
                                  "netmask"
                                ]
                              }
                            },
                            "address6": {
                              "type": "string",
                              "description": "IP address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv6",
                                "requires": [
                                  "netmask6"
                                ]
                              }
                            },
                            "autostart": {
                              "type": "boolean",
                              "description": "Automatically start interface on boot.",
                              "optional": true
                            },
                            "bond-primary": {
                              "type": "string",
                              "description": "Specify the primary interface for active-backup bond.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface"
                              }
                            },
                            "bond_mode": {
                              "type": "string",
                              "description": "Bonding mode.",
                              "optional": true,
                              "enum": [
                                "balance-rr",
                                "active-backup",
                                "balance-xor",
                                "broadcast",
                                "802.3ad",
                                "balance-tlb",
                                "balance-alb",
                                "balance-slb",
                                "lacp-balance-slb",
                                "lacp-balance-tcp"
                              ]
                            },
                            "bond_xmit_hash_policy": {
                              "type": "string",
                              "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                              "optional": true,
                              "enum": [
                                "layer2",
                                "layer2+3",
                                "layer3+4"
                              ]
                            },
                            "bridge-access": {
                              "type": "integer",
                              "description": "The bridge port access VLAN.",
                              "optional": true
                            },
                            "bridge-arp-nd-suppress": {
                              "type": "boolean",
                              "description": "Bridge port ARP/ND suppress flag.",
                              "optional": true
                            },
                            "bridge-learning": {
                              "type": "boolean",
                              "description": "Bridge port learning flag.",
                              "optional": true
                            },
                            "bridge-multicast-flood": {
                              "type": "boolean",
                              "description": "Bridge port multicast flood flag.",
                              "optional": true
                            },
                            "bridge-unicast-flood": {
                              "type": "boolean",
                              "description": "Bridge port unicast flood flag.",
                              "optional": true
                            },
                            "bridge_ports": {
                              "type": "string",
                              "description": "Specify the interfaces you want to add to your bridge.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "bridge_vids": {
                              "type": "string",
                              "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-vlan-id-or-range-list"
                              }
                            },
                            "bridge_vlan_aware": {
                              "type": "boolean",
                              "description": "Enable bridge vlan support.",
                              "optional": true
                            },
                            "cidr": {
                              "type": "string",
                              "description": "IPv4 CIDR.",
                              "optional": true,
                              "constraints": {
                                "format": "CIDRv4"
                              }
                            },
                            "cidr6": {
                              "type": "string",
                              "description": "IPv6 CIDR.",
                              "optional": true,
                              "constraints": {
                                "format": "CIDRv6"
                              }
                            },
                            "comments": {
                              "type": "string",
                              "description": "Comments",
                              "optional": true
                            },
                            "comments6": {
                              "type": "string",
                              "description": "Comments",
                              "optional": true
                            },
                            "exists": {
                              "type": "boolean",
                              "description": "Set to true if the interface physically exists.",
                              "optional": true
                            },
                            "families": {
                              "type": "array",
                              "description": "The network families.",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "description": "A network family.",
                                "enum": [
                                  "inet",
                                  "inet6"
                                ]
                              }
                            },
                            "gateway": {
                              "type": "string",
                              "description": "Default gateway address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv4"
                              }
                            },
                            "gateway6": {
                              "type": "string",
                              "description": "Default ipv6 gateway address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv6"
                              }
                            },
                            "iface": {
                              "type": "string",
                              "description": "Network interface name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "link-type": {
                              "type": "string",
                              "description": "The link type.",
                              "optional": true
                            },
                            "method": {
                              "type": "string",
                              "description": "The network configuration method for IPv4.",
                              "optional": true,
                              "enum": [
                                "loopback",
                                "dhcp",
                                "manual",
                                "static",
                                "auto"
                              ]
                            },
                            "method6": {
                              "type": "string",
                              "description": "The network configuration method for IPv6.",
                              "optional": true,
                              "enum": [
                                "loopback",
                                "dhcp",
                                "manual",
                                "static",
                                "auto"
                              ]
                            },
                            "mtu": {
                              "type": "integer",
                              "description": "MTU.",
                              "optional": true,
                              "constraints": {
                                "minimum": 1280,
                                "maximum": 65520
                              }
                            },
                            "netmask": {
                              "type": "string",
                              "description": "Network mask.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv4mask",
                                "requires": [
                                  "address"
                                ]
                              }
                            },
                            "netmask6": {
                              "type": "integer",
                              "description": "Network mask.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0,
                                "maximum": 128,
                                "requires": [
                                  "address6"
                                ]
                              }
                            },
                            "options": {
                              "type": "array",
                              "description": "A list of additional interface options for IPv4.",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "description": "An interface property."
                              }
                            },
                            "options6": {
                              "type": "array",
                              "description": "A list of additional interface options for IPv6.",
                              "optional": true,
                              "items": {
                                "type": "string",
                                "description": "An interface property."
                              }
                            },
                            "ovs_bonds": {
                              "type": "string",
                              "description": "Specify the interfaces used by the bonding device.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "ovs_bridge": {
                              "type": "string",
                              "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface"
                              }
                            },
                            "ovs_options": {
                              "type": "string",
                              "description": "OVS interface options.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 1024
                              }
                            },
                            "ovs_ports": {
                              "type": "string",
                              "description": "Specify the interfaces you want to add to your bridge.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "ovs_tag": {
                              "type": "integer",
                              "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 4094
                              }
                            },
                            "priority": {
                              "type": "integer",
                              "description": "The order of the interface.",
                              "optional": true
                            },
                            "slaves": {
                              "type": "string",
                              "description": "Specify the interfaces used by the bonding device.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "Network interface type",
                              "enum": [
                                "bridge",
                                "bond",
                                "eth",
                                "alias",
                                "vlan",
                                "fabric",
                                "OVSBridge",
                                "OVSBond",
                                "OVSPort",
                                "OVSIntPort",
                                "vnet",
                                "unknown"
                              ]
                            },
                            "uplink-id": {
                              "type": "string",
                              "description": "The uplink ID.",
                              "optional": true
                            },
                            "vlan-id": {
                              "type": "integer",
                              "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 4094
                              }
                            },
                            "vlan-protocol": {
                              "type": "string",
                              "description": "The VLAN protocol.",
                              "optional": true,
                              "enum": [
                                "802.1ad",
                                "802.1q"
                              ]
                            },
                            "vlan-raw-device": {
                              "type": "string",
                              "description": "Specify the raw interface for the vlan interface.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface"
                              }
                            },
                            "vxlan-id": {
                              "type": "integer",
                              "description": "The VXLAN ID.",
                              "optional": true
                            },
                            "vxlan-local-tunnelip": {
                              "type": "string",
                              "description": "The VXLAN local tunnel IP.",
                              "optional": true
                            },
                            "vxlan-physdev": {
                              "type": "string",
                              "description": "The physical device for the VXLAN tunnel.",
                              "optional": true
                            },
                            "vxlan-svcnodeip": {
                              "type": "string",
                              "description": "The VXLAN SVC node IP.",
                              "optional": true
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{iface}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-network",
                  "operationId": "post-nodes-node-network",
                  "path": "/nodes/{node}/network",
                  "httpMethod": "POST",
                  "name": "create_network",
                  "description": "Create network device configuration",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "address": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "IP address.",
                          "optional": true,
                          "constraints": {
                            "format": "ipv4",
                            "requires": [
                              "netmask"
                            ]
                          }
                        },
                        "address6": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "IP address.",
                          "optional": true,
                          "constraints": {
                            "format": "ipv6",
                            "requires": [
                              "netmask6"
                            ]
                          }
                        },
                        "autostart": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Automatically start interface on boot.",
                          "optional": true
                        },
                        "bond-primary": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the primary interface for active-backup bond.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface"
                          }
                        },
                        "bond_mode": {
                          "type": "string",
                          "description": "Bonding mode.",
                          "optional": true,
                          "enum": [
                            "balance-rr",
                            "active-backup",
                            "balance-xor",
                            "broadcast",
                            "802.3ad",
                            "balance-tlb",
                            "balance-alb",
                            "balance-slb",
                            "lacp-balance-slb",
                            "lacp-balance-tcp"
                          ]
                        },
                        "bond_xmit_hash_policy": {
                          "type": "string",
                          "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                          "optional": true,
                          "enum": [
                            "layer2",
                            "layer2+3",
                            "layer3+4"
                          ]
                        },
                        "bridge_ports": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the interfaces you want to add to your bridge.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface-list"
                          }
                        },
                        "bridge_vids": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vlan-id-or-range-list"
                          }
                        },
                        "bridge_vlan_aware": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable bridge vlan support.",
                          "optional": true
                        },
                        "cidr": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "IPv4 CIDR.",
                          "optional": true,
                          "constraints": {
                            "format": "CIDRv4"
                          }
                        },
                        "cidr6": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "IPv6 CIDR.",
                          "optional": true,
                          "constraints": {
                            "format": "CIDRv6"
                          }
                        },
                        "comments": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Comments",
                          "optional": true
                        },
                        "comments6": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Comments",
                          "optional": true
                        },
                        "gateway": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Default gateway address.",
                          "optional": true,
                          "constraints": {
                            "format": "ipv4"
                          }
                        },
                        "gateway6": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Default ipv6 gateway address.",
                          "optional": true,
                          "constraints": {
                            "format": "ipv6"
                          }
                        },
                        "iface": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Network interface name.",
                          "constraints": {
                            "minLength": 2,
                            "maxLength": 20,
                            "format": "pve-iface"
                          }
                        },
                        "mtu": {
                          "type": "integer",
                          "typetext": "<integer> (1280 - 65520)",
                          "description": "MTU.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1280,
                            "maximum": 65520
                          }
                        },
                        "netmask": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Network mask.",
                          "optional": true,
                          "constraints": {
                            "format": "ipv4mask",
                            "requires": [
                              "address"
                            ]
                          }
                        },
                        "netmask6": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 128)",
                          "description": "Network mask.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 128,
                            "requires": [
                              "address6"
                            ]
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "ovs_bonds": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the interfaces used by the bonding device.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface-list"
                          }
                        },
                        "ovs_bridge": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface"
                          }
                        },
                        "ovs_options": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "OVS interface options.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024
                          }
                        },
                        "ovs_ports": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the interfaces you want to add to your bridge.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface-list"
                          }
                        },
                        "ovs_tag": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 4094)",
                          "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                          "optional": true,
                          "constraints": {
                            "minimum": 1,
                            "maximum": 4094
                          }
                        },
                        "slaves": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the interfaces used by the bonding device.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface-list"
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "Network interface type",
                          "enum": [
                            "bridge",
                            "bond",
                            "eth",
                            "alias",
                            "vlan",
                            "fabric",
                            "OVSBridge",
                            "OVSBond",
                            "OVSPort",
                            "OVSIntPort",
                            "vnet",
                            "unknown"
                          ]
                        },
                        "vlan-id": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 4094)",
                          "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                          "optional": true,
                          "constraints": {
                            "minimum": 1,
                            "maximum": 4094
                          }
                        },
                        "vlan-raw-device": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Specify the raw interface for the vlan interface.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-iface"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "put-nodes-node-network",
                  "operationId": "put-nodes-node-network",
                  "path": "/nodes/{node}/network",
                  "httpMethod": "PUT",
                  "name": "reload_network_config",
                  "description": "Reload network configuration",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "regenerate-frr": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Whether FRR config generation should get skipped or not.",
                          "optional": true,
                          "defaultValue": 0
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-network-iface",
                  "path": "/nodes/{node}/network/{iface}",
                  "slug": "nodes-node-network-iface",
                  "label": "{iface}",
                  "endpoints": [
                    {
                      "id": "delete-nodes-node-network-iface",
                      "operationId": "delete-nodes-node-network-iface",
                      "path": "/nodes/{node}/network/{iface}",
                      "httpMethod": "DELETE",
                      "name": "delete_network",
                      "description": "Delete network device configuration",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "iface": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network interface name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-nodes-node-network-iface",
                      "operationId": "get-nodes-node-network-iface",
                      "path": "/nodes/{node}/network/{iface}",
                      "httpMethod": "GET",
                      "name": "network_config",
                      "description": "Read network device configuration",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "iface": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network interface name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": "put-nodes-node-network-iface",
                      "operationId": "put-nodes-node-network-iface",
                      "path": "/nodes/{node}/network/{iface}",
                      "httpMethod": "PUT",
                      "name": "update_network",
                      "description": "Update network device configuration",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Modify"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "address": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IP address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv4",
                                "requires": [
                                  "netmask"
                                ]
                              }
                            },
                            "address6": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IP address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv6",
                                "requires": [
                                  "netmask6"
                                ]
                              }
                            },
                            "autostart": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Automatically start interface on boot.",
                              "optional": true
                            },
                            "bond-primary": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the primary interface for active-backup bond.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface"
                              }
                            },
                            "bond_mode": {
                              "type": "string",
                              "description": "Bonding mode.",
                              "optional": true,
                              "enum": [
                                "balance-rr",
                                "active-backup",
                                "balance-xor",
                                "broadcast",
                                "802.3ad",
                                "balance-tlb",
                                "balance-alb",
                                "balance-slb",
                                "lacp-balance-slb",
                                "lacp-balance-tcp"
                              ]
                            },
                            "bond_xmit_hash_policy": {
                              "type": "string",
                              "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                              "optional": true,
                              "enum": [
                                "layer2",
                                "layer2+3",
                                "layer3+4"
                              ]
                            },
                            "bridge_ports": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the interfaces you want to add to your bridge.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "bridge_vids": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-vlan-id-or-range-list"
                              }
                            },
                            "bridge_vlan_aware": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Enable bridge vlan support.",
                              "optional": true
                            },
                            "cidr": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IPv4 CIDR.",
                              "optional": true,
                              "constraints": {
                                "format": "CIDRv4"
                              }
                            },
                            "cidr6": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "IPv6 CIDR.",
                              "optional": true,
                              "constraints": {
                                "format": "CIDRv6"
                              }
                            },
                            "comments": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comments",
                              "optional": true
                            },
                            "comments6": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Comments",
                              "optional": true
                            },
                            "delete": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "A list of settings you want to delete.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-configid-list"
                              }
                            },
                            "gateway": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Default gateway address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv4"
                              }
                            },
                            "gateway6": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Default ipv6 gateway address.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv6"
                              }
                            },
                            "iface": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network interface name.",
                              "constraints": {
                                "minLength": 2,
                                "maxLength": 20,
                                "format": "pve-iface"
                              }
                            },
                            "mtu": {
                              "type": "integer",
                              "typetext": "<integer> (1280 - 65520)",
                              "description": "MTU.",
                              "optional": true,
                              "constraints": {
                                "minimum": 1280,
                                "maximum": 65520
                              }
                            },
                            "netmask": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Network mask.",
                              "optional": true,
                              "constraints": {
                                "format": "ipv4mask",
                                "requires": [
                                  "address"
                                ]
                              }
                            },
                            "netmask6": {
                              "type": "integer",
                              "typetext": "<integer> (0 - 128)",
                              "description": "Network mask.",
                              "optional": true,
                              "constraints": {
                                "minimum": 0,
                                "maximum": 128,
                                "requires": [
                                  "address6"
                                ]
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "ovs_bonds": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the interfaces used by the bonding device.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "ovs_bridge": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface"
                              }
                            },
                            "ovs_options": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "OVS interface options.",
                              "optional": true,
                              "constraints": {
                                "maxLength": 1024
                              }
                            },
                            "ovs_ports": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the interfaces you want to add to your bridge.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "ovs_tag": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 4094)",
                              "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 4094
                              }
                            },
                            "slaves": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the interfaces used by the bonding device.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface-list"
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "Network interface type",
                              "enum": [
                                "bridge",
                                "bond",
                                "eth",
                                "alias",
                                "vlan",
                                "fabric",
                                "OVSBridge",
                                "OVSBond",
                                "OVSPort",
                                "OVSIntPort",
                                "vnet",
                                "unknown"
                              ]
                            },
                            "vlan-id": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 4094)",
                              "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                              "optional": true,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 4094
                              }
                            },
                            "vlan-raw-device": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Specify the raw interface for the vlan interface.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-iface"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-qemu",
              "path": "/nodes/{node}/qemu",
              "slug": "nodes-node-qemu",
              "label": "qemu",
              "endpoints": [
                {
                  "id": "get-nodes-node-qemu",
                  "operationId": "get-nodes-node-qemu",
                  "path": "/nodes/{node}/qemu",
                  "httpMethod": "GET",
                  "name": "vmlist",
                  "description": "Virtual machine index (per node).",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list VMs where you have VM.Audit permissions on /vms/<vmid>.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "full": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Determine the full status of active VMs.",
                          "optional": true
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "type": "number",
                              "description": "Current CPU usage.",
                              "optional": true
                            },
                            "cpus": {
                              "type": "number",
                              "description": "Maximum usable CPUs.",
                              "optional": true
                            },
                            "diskread": {
                              "type": "integer",
                              "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "diskwrite": {
                              "type": "integer",
                              "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "lock": {
                              "type": "string",
                              "description": "The current config lock, if any.",
                              "optional": true
                            },
                            "maxdisk": {
                              "type": "integer",
                              "description": "Root disk size in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "maxmem": {
                              "type": "integer",
                              "description": "Maximum memory in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "mem": {
                              "type": "integer",
                              "description": "Currently used memory in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "memhost": {
                              "type": "integer",
                              "description": "Current memory usage on the host.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "name": {
                              "type": "string",
                              "description": "VM (host)name.",
                              "optional": true
                            },
                            "netin": {
                              "type": "integer",
                              "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "netout": {
                              "type": "integer",
                              "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "pid": {
                              "type": "integer",
                              "description": "PID of the QEMU process, if the VM is running.",
                              "optional": true
                            },
                            "pressurecpufull": {
                              "type": "number",
                              "description": "CPU Full pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressurecpusome": {
                              "type": "number",
                              "description": "CPU Some pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressureiofull": {
                              "type": "number",
                              "description": "IO Full pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressureiosome": {
                              "type": "number",
                              "description": "IO Some pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressurememoryfull": {
                              "type": "number",
                              "description": "Memory Full pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "pressurememorysome": {
                              "type": "number",
                              "description": "Memory Some pressure stall average over the last 10 seconds.",
                              "optional": true
                            },
                            "qmpstatus": {
                              "type": "string",
                              "description": "VM run state from the 'query-status' QMP monitor command.",
                              "optional": true
                            },
                            "running-machine": {
                              "type": "string",
                              "description": "The currently running machine type (if running).",
                              "optional": true
                            },
                            "running-qemu": {
                              "type": "string",
                              "description": "The QEMU version the VM is currently using (if running).",
                              "optional": true
                            },
                            "serial": {
                              "type": "boolean",
                              "description": "Guest has serial device configured.",
                              "optional": true
                            },
                            "status": {
                              "type": "string",
                              "description": "QEMU process status.",
                              "enum": [
                                "stopped",
                                "running"
                              ]
                            },
                            "tags": {
                              "type": "string",
                              "description": "The current configured tags, if any",
                              "optional": true
                            },
                            "template": {
                              "type": "boolean",
                              "description": "Determines if the guest is a template.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "uptime": {
                              "type": "integer",
                              "description": "Uptime in seconds.",
                              "optional": true,
                              "metadata": {
                                "renderer": "duration"
                              }
                            },
                            "vmid": {
                              "type": "integer",
                              "description": "The (unique) ID of the VM.",
                              "constraints": {
                                "minimum": 100,
                                "maximum": 999999999,
                                "format": "pve-vmid"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{vmid}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-qemu",
                  "operationId": "post-nodes-node-qemu",
                  "path": "/nodes/{node}/qemu",
                  "httpMethod": "POST",
                  "name": "create_vm",
                  "description": "Create or restore a virtual machine.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "You need 'VM.Allocate' permissions on /vms/{vmid} or on the VM pool /pool/{pool}. For restore (option 'archive'), it is enough if the user has 'VM.Backup' permission and the VM already exists. If you create disks you need 'Datastore.AllocateSpace' on any used storage.If you use a bridge/vlan, you need 'SDN.Use' on any used bridge/vlan.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "acpi": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable ACPI.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "affinity": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                          "optional": true,
                          "constraints": {
                            "format": "pve-cpuset"
                          }
                        },
                        "agent": {
                          "type": "string",
                          "typetext": "[enabled=]<1|0> [,freeze-fs-on-backup=<1|0>] [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]",
                          "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                          "optional": true
                        },
                        "amd-sev": {
                          "type": "string",
                          "typetext": "[type=]<sev-type> [,allow-smt=<1|0>] [,kernel-hashes=<1|0>] [,no-debug=<1|0>] [,no-key-sharing=<1|0>]",
                          "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qemu-sev-fmt"
                          }
                        },
                        "arch": {
                          "type": "string",
                          "description": "Virtual processor architecture. Defaults to the host.",
                          "optional": true,
                          "enum": [
                            "x86_64",
                            "aarch64"
                          ]
                        },
                        "archive": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The backup archive. Either the file system path to a .tar or .vma file (use '-' to pipe data from stdin) or a proxmox storage backup volume identifier.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 255
                          }
                        },
                        "args": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Arbitrary arguments passed to kvm.",
                          "verboseDescription": "Arbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                          "optional": true
                        },
                        "audio0": {
                          "type": "string",
                          "typetext": "device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]",
                          "description": "Configure a audio device, useful in combination with QXL/Spice.",
                          "optional": true
                        },
                        "autostart": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Automatic restart after crash (currently ignored).",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "balloon": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "bios": {
                          "type": "string",
                          "description": "Select BIOS implementation.",
                          "optional": true,
                          "defaultValue": "seabios",
                          "enum": [
                            "seabios",
                            "ovmf"
                          ]
                        },
                        "boot": {
                          "type": "string",
                          "typetext": "[[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]",
                          "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-boot"
                          }
                        },
                        "bootdisk": {
                          "type": "string",
                          "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                          "optional": true,
                          "constraints": {
                            "pattern": "(ide|sata|scsi|virtio)\\d+",
                            "format": "pve-qm-bootdisk"
                          }
                        },
                        "bwlimit": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Override I/O bandwidth limit (in KiB/s).",
                          "optional": true,
                          "defaultValue": "restore limit from datacenter or storage config"
                        },
                        "cdrom": {
                          "type": "string",
                          "typetext": "<volume>",
                          "description": "This is an alias for option -ide2",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-ide"
                          }
                        },
                        "cicustom": {
                          "type": "string",
                          "typetext": "[meta=<volume>] [,network=<volume>] [,user=<volume>] [,vendor=<volume>]",
                          "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-cicustom"
                          }
                        },
                        "cipassword": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                          "optional": true
                        },
                        "citype": {
                          "type": "string",
                          "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                          "optional": true,
                          "enum": [
                            "configdrive2",
                            "nocloud",
                            "opennebula"
                          ]
                        },
                        "ciupgrade": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "cloud-init: do an automatic package upgrade after the first boot.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "ciuser": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                          "optional": true
                        },
                        "cores": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "The number of cores per socket.",
                          "optional": true,
                          "defaultValue": 1,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "cpu": {
                          "type": "string",
                          "typetext": "[[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>] [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>] [,phys-bits=<8-64|host>] [,reported-model=<enum>]",
                          "description": "Emulated CPU type.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vm-cpu-conf"
                          }
                        },
                        "cpulimit": {
                          "type": "number",
                          "typetext": "<number> (0 - 128)",
                          "description": "Limit of CPU usage.",
                          "verboseDescription": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 128
                          }
                        },
                        "cpuunits": {
                          "type": "integer",
                          "typetext": "<integer> (1 - 262144)",
                          "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                          "verboseDescription": "CPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                          "optional": true,
                          "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                          "constraints": {
                            "minimum": 1,
                            "maximum": 262144
                          }
                        },
                        "description": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 8192
                          }
                        },
                        "efidisk0": {
                          "type": "string",
                          "typetext": "[file=]<volume> [,efitype=<2m|4m>] [,format=<enum>] [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>] [,size=<DiskSize>]",
                          "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                          "optional": true
                        },
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Allow to overwrite existing VM.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "archive"
                            ]
                          }
                        },
                        "freeze": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                          "optional": true
                        },
                        "hookscript": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Script that will be executed during various steps in the vms lifetime.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-volume-id"
                          }
                        },
                        "hostpci[n]": {
                          "type": "string",
                          "typetext": "[[host=]<HOSTPCIID[;HOSTPCIID2...]>] [,device-id=<hex id>] [,legacy-igd=<1|0>] [,mapping=<mapping-id>] [,mdev=<string>] [,pcie=<1|0>] [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>] [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]",
                          "description": "Map host PCI devices into guest.",
                          "verboseDescription": "Map host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-hostpci"
                          }
                        },
                        "hotplug": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                          "optional": true,
                          "defaultValue": "network,disk,usb",
                          "constraints": {
                            "format": "pve-hotplug-features"
                          }
                        },
                        "hugepages": {
                          "type": "string",
                          "description": "Enable/disable hugepages memory.",
                          "optional": true,
                          "enum": [
                            "any",
                            "2",
                            "1024"
                          ]
                        },
                        "ide[n]": {
                          "type": "string",
                          "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                          "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                          "optional": true
                        },
                        "import-working-storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "A file-based storage with 'images' content-type enabled, which is used as an intermediary extraction storage during import. Defaults to the source storage.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "ipconfig[n]": {
                          "type": "string",
                          "typetext": "[gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]",
                          "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-ipconfig"
                          }
                        },
                        "ivshmem": {
                          "type": "string",
                          "typetext": "size=<integer> [,name=<string>]",
                          "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                          "optional": true
                        },
                        "keephugepages": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "keyboard": {
                          "type": "string",
                          "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                          "optional": true,
                          "defaultValue": null,
                          "enum": [
                            "de",
                            "de-ch",
                            "da",
                            "en-gb",
                            "en-us",
                            "es",
                            "fi",
                            "fr",
                            "fr-be",
                            "fr-ca",
                            "fr-ch",
                            "hu",
                            "is",
                            "it",
                            "ja",
                            "lt",
                            "mk",
                            "nl",
                            "no",
                            "pl",
                            "pt",
                            "pt-br",
                            "sv",
                            "sl",
                            "tr"
                          ]
                        },
                        "kvm": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable KVM hardware virtualization.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "live-restore": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Start the VM immediately while importing or restoring in the background.",
                          "optional": true
                        },
                        "localtime": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                          "optional": true
                        },
                        "lock": {
                          "type": "string",
                          "description": "Lock/unlock the VM.",
                          "optional": true,
                          "enum": [
                            "backup",
                            "clone",
                            "create",
                            "migrate",
                            "rollback",
                            "snapshot",
                            "snapshot-delete",
                            "suspending",
                            "suspended"
                          ]
                        },
                        "machine": {
                          "type": "string",
                          "typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                          "description": "Specify the QEMU machine.",
                          "optional": true
                        },
                        "memory": {
                          "type": "string",
                          "typetext": "[current=]<integer>",
                          "description": "Memory properties.",
                          "optional": true
                        },
                        "migrate_downtime": {
                          "type": "number",
                          "typetext": "<number> (0 - N)",
                          "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                          "optional": true,
                          "defaultValue": 0.1,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "migrate_speed": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "name": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Set a name for the VM. Only used on the configuration web interface.",
                          "optional": true,
                          "constraints": {
                            "format": "dns-name"
                          }
                        },
                        "nameserver": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                          "optional": true,
                          "constraints": {
                            "format": "address-list"
                          }
                        },
                        "net[n]": {
                          "type": "string",
                          "typetext": "[model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>] [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>] [,mtu=<integer>] [,queues=<integer>] [,rate=<number>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,<model>=<macaddr>]",
                          "description": "Specify network devices.",
                          "optional": true
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "numa": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable NUMA.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "numa[n]": {
                          "type": "string",
                          "typetext": "cpus=<id[-id];...> [,hostnodes=<id[-id];...>] [,memory=<number>] [,policy=<preferred|bind|interleave>]",
                          "description": "NUMA topology.",
                          "optional": true
                        },
                        "onboot": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Specifies whether a VM will be started during system bootup.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "ostype": {
                          "type": "string",
                          "description": "Specify guest operating system.",
                          "verboseDescription": "Specify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                          "optional": true,
                          "enum": [
                            "other",
                            "wxp",
                            "w2k",
                            "w2k3",
                            "w2k8",
                            "wvista",
                            "win7",
                            "win8",
                            "win10",
                            "win11",
                            "l24",
                            "l26",
                            "solaris"
                          ]
                        },
                        "parallel[n]": {
                          "type": "string",
                          "description": "Map host parallel devices (n is 0 to 2).",
                          "verboseDescription": "Map host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                          "optional": true,
                          "constraints": {
                            "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                          }
                        },
                        "pool": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Add the VM to the specified pool.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-poolid"
                          }
                        },
                        "protection": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "reboot": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "rng0": {
                          "type": "string",
                          "typetext": "[source=]</dev/urandom|/dev/random|/dev/hwrng> [,max_bytes=<integer>] [,period=<integer>]",
                          "description": "Configure a VirtIO-based Random Number Generator.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-rng"
                          }
                        },
                        "sata[n]": {
                          "type": "string",
                          "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                          "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                          "optional": true
                        },
                        "scsi[n]": {
                          "type": "string",
                          "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,product=<product>] [,queues=<integer>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,vendor=<vendor>] [,werror=<enum>] [,wwn=<wwn>]",
                          "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                          "optional": true
                        },
                        "scsihw": {
                          "type": "string",
                          "description": "SCSI controller model",
                          "optional": true,
                          "defaultValue": "lsi",
                          "enum": [
                            "lsi",
                            "lsi53c810",
                            "virtio-scsi-pci",
                            "virtio-scsi-single",
                            "megasas",
                            "pvscsi"
                          ]
                        },
                        "searchdomain": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                          "optional": true
                        },
                        "serial[n]": {
                          "type": "string",
                          "description": "Create a serial device inside the VM (n is 0 to 3)",
                          "verboseDescription": "Create a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                          "optional": true,
                          "constraints": {
                            "pattern": "(/dev/.+|socket)"
                          }
                        },
                        "shares": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 50000)",
                          "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                          "optional": true,
                          "defaultValue": 1000,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 50000
                          }
                        },
                        "smbios1": {
                          "type": "string",
                          "typetext": "[base64=<1|0>] [,family=<Base64 encoded string>] [,manufacturer=<Base64 encoded string>] [,product=<Base64 encoded string>] [,serial=<Base64 encoded string>] [,sku=<Base64 encoded string>] [,uuid=<UUID>] [,version=<Base64 encoded string>]",
                          "description": "Specify SMBIOS type 1 fields.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 512,
                            "format": "pve-qm-smbios1"
                          }
                        },
                        "smp": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "The number of CPUs. Please use option -sockets instead.",
                          "optional": true,
                          "defaultValue": 1,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "sockets": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "The number of CPU sockets.",
                          "optional": true,
                          "defaultValue": 1,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "spice_enhancements": {
                          "type": "string",
                          "typetext": "[foldersharing=<1|0>] [,videostreaming=<off|all|filter>]",
                          "description": "Configure additional enhancements for SPICE.",
                          "optional": true
                        },
                        "sshkeys": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                          "optional": true,
                          "constraints": {
                            "format": "urlencoded"
                          }
                        },
                        "start": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Start VM after it was created successfully.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "startdate": {
                          "type": "string",
                          "typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                          "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                          "optional": true,
                          "defaultValue": "now",
                          "constraints": {
                            "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)"
                          }
                        },
                        "startup": {
                          "type": "string",
                          "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                          "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-startup-order"
                          }
                        },
                        "storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "Default storage.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "tablet": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable the USB tablet device.",
                          "verboseDescription": "Enable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "tags": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Tags of the VM. This is only meta information.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-tag-list"
                          }
                        },
                        "tdf": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable time drift fix.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "template": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Enable/disable Template.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "tpmstate0": {
                          "type": "string",
                          "typetext": "[file=]<volume> [,import-from=<source volume>] [,size=<DiskSize>] [,version=<v1.2|v2.0>]",
                          "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                          "optional": true
                        },
                        "unique": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Assign a unique random ethernet address.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "archive"
                            ]
                          }
                        },
                        "unused[n]": {
                          "type": "string",
                          "typetext": "[file=]<volume>",
                          "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                          "optional": true
                        },
                        "usb[n]": {
                          "type": "string",
                          "typetext": "[[host=]<HOSTUSBDEVICE|spice>] [,mapping=<mapping-id>] [,usb3=<1|0>]",
                          "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                          "optional": true
                        },
                        "vcpus": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "Number of hotplugged vcpus.",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "vga": {
                          "type": "string",
                          "typetext": "[[type=]<enum>] [,clipboard=<vnc>] [,memory=<integer>]",
                          "description": "Configure the VGA hardware.",
                          "verboseDescription": "Configure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                          "optional": true
                        },
                        "virtio[n]": {
                          "type": "string",
                          "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,werror=<enum>]",
                          "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                          "optional": true
                        },
                        "virtiofs[n]": {
                          "type": "string",
                          "typetext": "[dirid=]<mapping-id> [,cache=<enum>] [,direct-io=<1|0>] [,expose-acl=<1|0>] [,expose-xattr=<1|0>]",
                          "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                          "optional": true
                        },
                        "vmgenid": {
                          "type": "string",
                          "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                          "verboseDescription": "The VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                          "optional": true,
                          "defaultValue": "1 (autogenerated)",
                          "constraints": {
                            "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                            "formatDescription": "UUID"
                          }
                        },
                        "vmid": {
                          "type": "integer",
                          "typetext": "<integer> (100 - 999999999)",
                          "description": "The (unique) ID of the VM.",
                          "constraints": {
                            "minimum": 100,
                            "maximum": 999999999,
                            "format": "pve-vmid"
                          }
                        },
                        "vmstatestorage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "Default storage for VM state volumes/files.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "watchdog": {
                          "type": "string",
                          "typetext": "[[model=]<i6300esb|ib700>] [,action=<enum>]",
                          "description": "Create a virtual hardware watchdog device.",
                          "verboseDescription": "Create a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                          "optional": true,
                          "constraints": {
                            "format": "pve-qm-watchdog"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-qemu-vmid",
                  "path": "/nodes/{node}/qemu/{vmid}",
                  "slug": "nodes-node-qemu-vmid",
                  "label": "{vmid}",
                  "endpoints": [
                    {
                      "id": "delete-nodes-node-qemu-vmid",
                      "operationId": "delete-nodes-node-qemu-vmid",
                      "path": "/nodes/{node}/qemu/{vmid}",
                      "httpMethod": "DELETE",
                      "name": "destroy_vm",
                      "description": "Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/vms/{vmid}",
                                [
                                  "VM.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "destroy-unreferenced-disks": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "If set, destroy additionally all disks not referenced in the config but with a matching VMID from all enabled storages.",
                              "optional": true,
                              "defaultValue": 0
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "purge": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Remove VMID from configurations, like backup & replication jobs and HA.",
                              "optional": true
                            },
                            "skiplock": {
                              "type": "boolean",
                              "typetext": "<boolean>",
                              "description": "Ignore locks - only root is allowed to use this option.",
                              "optional": true
                            },
                            "vmid": {
                              "type": "integer",
                              "typetext": "<integer> (100 - 999999999)",
                              "description": "The (unique) ID of the VM.",
                              "constraints": {
                                "minimum": 100,
                                "maximum": 999999999,
                                "format": "pve-vmid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-nodes-node-qemu-vmid",
                      "operationId": "get-nodes-node-qemu-vmid",
                      "path": "/nodes/{node}/qemu/{vmid}",
                      "httpMethod": "GET",
                      "name": "vmdiridx",
                      "description": "Directory index",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "vmid": {
                              "type": "integer",
                              "typetext": "<integer> (100 - 999999999)",
                              "description": "The (unique) ID of the VM.",
                              "constraints": {
                                "minimum": 100,
                                "maximum": 999999999,
                                "format": "pve-vmid"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "subdir": {
                                  "type": "string"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{subdir}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-qemu-vmid-agent",
                      "path": "/nodes/{node}/qemu/{vmid}/agent",
                      "slug": "nodes-node-qemu-vmid-agent",
                      "label": "agent",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-agent",
                          "operationId": "get-nodes-node-qemu-vmid-agent",
                          "path": "/nodes/{node}/qemu/{vmid}/agent",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "QEMU Guest Agent command index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": true
                            }
                          },
                          "responses": [
                            {
                              "description": "Returns the list of QEMU Guest Agent commands",
                              "schema": {
                                "type": "array",
                                "description": "Returns the list of QEMU Guest Agent commands",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-qemu-vmid-agent",
                          "operationId": "post-nodes-node-qemu-vmid-agent",
                          "path": "/nodes/{node}/qemu/{vmid}/agent",
                          "httpMethod": "POST",
                          "name": "agent",
                          "description": "Execute QEMU Guest Agent commands.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.GuestAgent.Unrestricted",
                                      "VM.GuestAgent.Unrestricted"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "command": {
                                  "type": "string",
                                  "description": "The QGA command.",
                                  "enum": [
                                    "fsfreeze-freeze",
                                    "fsfreeze-status",
                                    "fsfreeze-thaw",
                                    "fstrim",
                                    "get-fsinfo",
                                    "get-host-name",
                                    "get-memory-block-info",
                                    "get-memory-blocks",
                                    "get-osinfo",
                                    "get-time",
                                    "get-timezone",
                                    "get-users",
                                    "get-vcpus",
                                    "info",
                                    "network-get-interfaces",
                                    "ping",
                                    "shutdown",
                                    "suspend-disk",
                                    "suspend-hybrid",
                                    "suspend-ram"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Returns an object with a single `result` property.",
                              "schema": {
                                "type": "object",
                                "description": "Returns an object with a single `result` property."
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-qemu-vmid-agent-exec",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/exec",
                          "slug": "nodes-node-qemu-vmid-agent-exec",
                          "label": "exec",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-exec",
                              "operationId": "post-nodes-node-qemu-vmid-agent-exec",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/exec",
                              "httpMethod": "POST",
                              "name": "exec",
                              "description": "Executes the given command in the vm via the guest-agent and returns an object with the pid.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Unrestricted"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "command": {
                                      "type": "array",
                                      "typetext": "<array>",
                                      "description": "The command as a list of program + arguments.",
                                      "items": {
                                        "description": "A single part of the program + arguments.",
                                        "constraints": {
                                          "format": "string"
                                        }
                                      }
                                    },
                                    "input-data": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Data to pass as 'input-data' to the guest. Usually treated as STDIN to 'command'.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 65536
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "pid": {
                                        "type": "integer",
                                        "description": "The PID of the process started by the guest-agent."
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-exec-status",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/exec-status",
                          "slug": "nodes-node-qemu-vmid-agent-exec-status",
                          "label": "exec-status",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-exec-status",
                              "operationId": "get-nodes-node-qemu-vmid-agent-exec-status",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/exec-status",
                              "httpMethod": "GET",
                              "name": "exec-status",
                              "description": "Gets the status of the given pid started by the guest-agent",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Unrestricted"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "pid": {
                                      "type": "integer",
                                      "typetext": "<integer>",
                                      "description": "The PID to query"
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "err-data": {
                                        "type": "string",
                                        "description": "stderr of the process",
                                        "optional": true
                                      },
                                      "err-truncated": {
                                        "type": "boolean",
                                        "description": "true if stderr was not fully captured",
                                        "optional": true
                                      },
                                      "exitcode": {
                                        "type": "integer",
                                        "description": "process exit code if it was normally terminated.",
                                        "optional": true
                                      },
                                      "exited": {
                                        "type": "boolean",
                                        "description": "Tells if the given command has exited yet."
                                      },
                                      "out-data": {
                                        "type": "string",
                                        "description": "stdout of the process",
                                        "optional": true
                                      },
                                      "out-truncated": {
                                        "type": "boolean",
                                        "description": "true if stdout was not fully captured",
                                        "optional": true
                                      },
                                      "signal": {
                                        "type": "integer",
                                        "description": "signal number or exception code if the process was abnormally terminated.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-file-read",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/file-read",
                          "slug": "nodes-node-qemu-vmid-agent-file-read",
                          "label": "file-read",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-file-read",
                              "operationId": "get-nodes-node-qemu-vmid-agent-file-read",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/file-read",
                              "httpMethod": "GET",
                              "name": "file-read",
                              "description": "Reads the given file via guest agent. Is limited to 16777216 bytes.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.FileRead",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "file": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The path to the file"
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a `content` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a `content` property.",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "description": "The content of the file, maximum 16777216"
                                      },
                                      "truncated": {
                                        "type": "boolean",
                                        "description": "If set to 1, the output is truncated and not complete",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-file-write",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/file-write",
                          "slug": "nodes-node-qemu-vmid-agent-file-write",
                          "label": "file-write",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-file-write",
                              "operationId": "post-nodes-node-qemu-vmid-agent-file-write",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/file-write",
                              "httpMethod": "POST",
                              "name": "file-write",
                              "description": "Writes the given file via guest agent.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.FileWrite",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "content": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The content to write into the file.",
                                      "constraints": {
                                        "maxLength": 61440
                                      }
                                    },
                                    "encode": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "If set, the content will be encoded as base64 (required by QEMU).Otherwise the content needs to be encoded beforehand - defaults to true.",
                                      "optional": true,
                                      "defaultValue": 1
                                    },
                                    "file": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The path to the file."
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-fsfreeze-freeze",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze",
                          "slug": "nodes-node-qemu-vmid-agent-fsfreeze-freeze",
                          "label": "fsfreeze-freeze",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-fsfreeze-freeze",
                              "operationId": "post-nodes-node-qemu-vmid-agent-fsfreeze-freeze",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze",
                              "httpMethod": "POST",
                              "name": "fsfreeze-freeze",
                              "description": "Execute fsfreeze-freeze.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.FileSystemMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-fsfreeze-status",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status",
                          "slug": "nodes-node-qemu-vmid-agent-fsfreeze-status",
                          "label": "fsfreeze-status",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-fsfreeze-status",
                              "operationId": "post-nodes-node-qemu-vmid-agent-fsfreeze-status",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status",
                              "httpMethod": "POST",
                              "name": "fsfreeze-status",
                              "description": "Execute fsfreeze-status.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.FileSystemMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-fsfreeze-thaw",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw",
                          "slug": "nodes-node-qemu-vmid-agent-fsfreeze-thaw",
                          "label": "fsfreeze-thaw",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-fsfreeze-thaw",
                              "operationId": "post-nodes-node-qemu-vmid-agent-fsfreeze-thaw",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw",
                              "httpMethod": "POST",
                              "name": "fsfreeze-thaw",
                              "description": "Execute fsfreeze-thaw.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.FileSystemMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-fstrim",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/fstrim",
                          "slug": "nodes-node-qemu-vmid-agent-fstrim",
                          "label": "fstrim",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-fstrim",
                              "operationId": "post-nodes-node-qemu-vmid-agent-fstrim",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/fstrim",
                              "httpMethod": "POST",
                              "name": "fstrim",
                              "description": "Execute fstrim.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.FileSystemMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-fsinfo",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-fsinfo",
                          "slug": "nodes-node-qemu-vmid-agent-get-fsinfo",
                          "label": "get-fsinfo",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-fsinfo",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-fsinfo",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-fsinfo",
                              "httpMethod": "GET",
                              "name": "get-fsinfo",
                              "description": "Execute get-fsinfo.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-host-name",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-host-name",
                          "slug": "nodes-node-qemu-vmid-agent-get-host-name",
                          "label": "get-host-name",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-host-name",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-host-name",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-host-name",
                              "httpMethod": "GET",
                              "name": "get-host-name",
                              "description": "Execute get-host-name.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-memory-block-info",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info",
                          "slug": "nodes-node-qemu-vmid-agent-get-memory-block-info",
                          "label": "get-memory-block-info",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-memory-block-info",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-memory-block-info",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info",
                              "httpMethod": "GET",
                              "name": "get-memory-block-info",
                              "description": "Execute get-memory-block-info.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-memory-blocks",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks",
                          "slug": "nodes-node-qemu-vmid-agent-get-memory-blocks",
                          "label": "get-memory-blocks",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-memory-blocks",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-memory-blocks",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks",
                              "httpMethod": "GET",
                              "name": "get-memory-blocks",
                              "description": "Execute get-memory-blocks.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-osinfo",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-osinfo",
                          "slug": "nodes-node-qemu-vmid-agent-get-osinfo",
                          "label": "get-osinfo",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-osinfo",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-osinfo",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-osinfo",
                              "httpMethod": "GET",
                              "name": "get-osinfo",
                              "description": "Execute get-osinfo.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-time",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-time",
                          "slug": "nodes-node-qemu-vmid-agent-get-time",
                          "label": "get-time",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-time",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-time",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-time",
                              "httpMethod": "GET",
                              "name": "get-time",
                              "description": "Execute get-time.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-timezone",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-timezone",
                          "slug": "nodes-node-qemu-vmid-agent-get-timezone",
                          "label": "get-timezone",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-timezone",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-timezone",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-timezone",
                              "httpMethod": "GET",
                              "name": "get-timezone",
                              "description": "Execute get-timezone.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-users",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-users",
                          "slug": "nodes-node-qemu-vmid-agent-get-users",
                          "label": "get-users",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-users",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-users",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-users",
                              "httpMethod": "GET",
                              "name": "get-users",
                              "description": "Execute get-users.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-get-vcpus",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/get-vcpus",
                          "slug": "nodes-node-qemu-vmid-agent-get-vcpus",
                          "label": "get-vcpus",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-get-vcpus",
                              "operationId": "get-nodes-node-qemu-vmid-agent-get-vcpus",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/get-vcpus",
                              "httpMethod": "GET",
                              "name": "get-vcpus",
                              "description": "Execute get-vcpus.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-info",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/info",
                          "slug": "nodes-node-qemu-vmid-agent-info",
                          "label": "info",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-info",
                              "operationId": "get-nodes-node-qemu-vmid-agent-info",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/info",
                              "httpMethod": "GET",
                              "name": "info",
                              "description": "Execute info.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-network-get-interfaces",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces",
                          "slug": "nodes-node-qemu-vmid-agent-network-get-interfaces",
                          "label": "network-get-interfaces",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-agent-network-get-interfaces",
                              "operationId": "get-nodes-node-qemu-vmid-agent-network-get-interfaces",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces",
                              "httpMethod": "GET",
                              "name": "network-get-interfaces",
                              "description": "Execute network-get-interfaces.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-ping",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/ping",
                          "slug": "nodes-node-qemu-vmid-agent-ping",
                          "label": "ping",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-ping",
                              "operationId": "post-nodes-node-qemu-vmid-agent-ping",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/ping",
                              "httpMethod": "POST",
                              "name": "ping",
                              "description": "Execute ping.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Audit",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-set-user-password",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/set-user-password",
                          "slug": "nodes-node-qemu-vmid-agent-set-user-password",
                          "label": "set-user-password",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-set-user-password",
                              "operationId": "post-nodes-node-qemu-vmid-agent-set-user-password",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/set-user-password",
                              "httpMethod": "POST",
                              "name": "set-user-password",
                              "description": "Sets the password for the given user to the given password",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.GuestAgent.Unrestricted"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "crypted": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "set to 1 if the password has already been passed through crypt()",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "password": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The new password.",
                                      "constraints": {
                                        "minLength": 5,
                                        "maxLength": 1024
                                      }
                                    },
                                    "username": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The user to set the password for."
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-shutdown",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/shutdown",
                          "slug": "nodes-node-qemu-vmid-agent-shutdown",
                          "label": "shutdown",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-shutdown",
                              "operationId": "post-nodes-node-qemu-vmid-agent-shutdown",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/shutdown",
                              "httpMethod": "POST",
                              "name": "shutdown",
                              "description": "Execute shutdown.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-suspend-disk",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/suspend-disk",
                          "slug": "nodes-node-qemu-vmid-agent-suspend-disk",
                          "label": "suspend-disk",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-suspend-disk",
                              "operationId": "post-nodes-node-qemu-vmid-agent-suspend-disk",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/suspend-disk",
                              "httpMethod": "POST",
                              "name": "suspend-disk",
                              "description": "Execute suspend-disk.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-suspend-hybrid",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid",
                          "slug": "nodes-node-qemu-vmid-agent-suspend-hybrid",
                          "label": "suspend-hybrid",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-suspend-hybrid",
                              "operationId": "post-nodes-node-qemu-vmid-agent-suspend-hybrid",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid",
                              "httpMethod": "POST",
                              "name": "suspend-hybrid",
                              "description": "Execute suspend-hybrid.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-agent-suspend-ram",
                          "path": "/nodes/{node}/qemu/{vmid}/agent/suspend-ram",
                          "slug": "nodes-node-qemu-vmid-agent-suspend-ram",
                          "label": "suspend-ram",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-agent-suspend-ram",
                              "operationId": "post-nodes-node-qemu-vmid-agent-suspend-ram",
                              "path": "/nodes/{node}/qemu/{vmid}/agent/suspend-ram",
                              "httpMethod": "POST",
                              "name": "suspend-ram",
                              "description": "Execute suspend-ram.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt",
                                          "VM.GuestAgent.Unrestricted"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "Returns an object with a single `result` property.",
                                  "schema": {
                                    "type": "object",
                                    "description": "Returns an object with a single `result` property."
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-qemu-vmid-clone",
                      "path": "/nodes/{node}/qemu/{vmid}/clone",
                      "slug": "nodes-node-qemu-vmid-clone",
                      "label": "clone",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-clone",
                          "operationId": "post-nodes-node-qemu-vmid-clone",
                          "path": "/nodes/{node}/qemu/{vmid}/clone",
                          "httpMethod": "POST",
                          "name": "clone_vm",
                          "description": "Create a copy of virtual machine/template.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Clone' permissions on /vms/{vmid}, and 'VM.Allocate' permissions on /vms/{newid} (or on the VM pool /pool/{pool}). You also need 'Datastore.AllocateSpace' on any used storage and 'SDN.Use' on any used bridge/vnet",
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/vms/{vmid}",
                                      [
                                        "VM.Clone"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/vms/{newid}",
                                        [
                                          "VM.Allocate"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/pool/{pool}",
                                        [
                                          "VM.Allocate"
                                        ],
                                        "require_param",
                                        "pool"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "clone limit from datacenter or storage config"
                                },
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Description for the new VM.",
                                  "optional": true
                                },
                                "format": {
                                  "type": "string",
                                  "description": "Target format for file storage. Only valid for full clone.",
                                  "optional": true,
                                  "enum": [
                                    "raw",
                                    "qcow2",
                                    "vmdk"
                                  ]
                                },
                                "full": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Create a full copy of all disks. This is always done when you clone a normal VM. For VM templates, we try to create a linked clone by default.",
                                  "optional": true
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Set a name for the new VM.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "dns-name"
                                  }
                                },
                                "newid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "VMID for the clone.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "pool": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Add the new VM to the specified pool.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-poolid"
                                  }
                                },
                                "snapname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the snapshot.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "Target storage for full clone.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "target": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node. Only allowed if the original VM is on shared storage.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-cloudinit",
                      "path": "/nodes/{node}/qemu/{vmid}/cloudinit",
                      "slug": "nodes-node-qemu-vmid-cloudinit",
                      "label": "cloudinit",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-cloudinit",
                          "operationId": "get-nodes-node-qemu-vmid-cloudinit",
                          "path": "/nodes/{node}/qemu/{vmid}/cloudinit",
                          "httpMethod": "GET",
                          "name": "cloudinit_pending",
                          "description": "Get the cloudinit configuration with both current and pending values.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "delete": {
                                      "type": "integer",
                                      "description": "Indicates a pending delete request if present and not 0. ",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0,
                                        "maximum": 1
                                      }
                                    },
                                    "key": {
                                      "type": "string",
                                      "description": "Configuration option name."
                                    },
                                    "pending": {
                                      "type": "string",
                                      "description": "The new pending value.",
                                      "optional": true
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value as it was used to generate the current cloudinit image.",
                                      "optional": true
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-nodes-node-qemu-vmid-cloudinit",
                          "operationId": "put-nodes-node-qemu-vmid-cloudinit",
                          "path": "/nodes/{node}/qemu/{vmid}/cloudinit",
                          "httpMethod": "PUT",
                          "name": "cloudinit_update",
                          "description": "Regenerate and change cloudinit config drive.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Cloudinit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-qemu-vmid-cloudinit-dump",
                          "path": "/nodes/{node}/qemu/{vmid}/cloudinit/dump",
                          "slug": "nodes-node-qemu-vmid-cloudinit-dump",
                          "label": "dump",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-cloudinit-dump",
                              "operationId": "get-nodes-node-qemu-vmid-cloudinit-dump",
                              "path": "/nodes/{node}/qemu/{vmid}/cloudinit/dump",
                              "httpMethod": "GET",
                              "name": "cloudinit_generated_config_dump",
                              "description": "Get automatically generated cloudinit config.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Config type.",
                                      "enum": [
                                        "user",
                                        "network",
                                        "meta"
                                      ]
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-qemu-vmid-config",
                      "path": "/nodes/{node}/qemu/{vmid}/config",
                      "slug": "nodes-node-qemu-vmid-config",
                      "label": "config",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-config",
                          "operationId": "get-nodes-node-qemu-vmid-config",
                          "path": "/nodes/{node}/qemu/{vmid}/config",
                          "httpMethod": "GET",
                          "name": "vm_config",
                          "description": "Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "current": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Get current values (instead of pending values).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "snapshot": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Fetch config values from given snapshot.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "The VM configuration.",
                              "schema": {
                                "type": "object",
                                "description": "The VM configuration.",
                                "properties": {
                                  "acpi": {
                                    "type": "boolean",
                                    "description": "Enable/disable ACPI.",
                                    "optional": true,
                                    "defaultValue": 1
                                  },
                                  "affinity": {
                                    "type": "string",
                                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-cpuset"
                                    }
                                  },
                                  "agent": {
                                    "type": "string",
                                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                                    "optional": true
                                  },
                                  "amd-sev": {
                                    "type": "string",
                                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qemu-sev-fmt"
                                    }
                                  },
                                  "arch": {
                                    "type": "string",
                                    "description": "Virtual processor architecture. Defaults to the host.",
                                    "optional": true,
                                    "enum": [
                                      "x86_64",
                                      "aarch64"
                                    ]
                                  },
                                  "args": {
                                    "type": "string",
                                    "description": "Arbitrary arguments passed to kvm.",
                                    "verboseDescription": "Arbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                                    "optional": true
                                  },
                                  "audio0": {
                                    "type": "string",
                                    "description": "Configure a audio device, useful in combination with QXL/Spice.",
                                    "optional": true
                                  },
                                  "autostart": {
                                    "type": "boolean",
                                    "description": "Automatic restart after crash (currently ignored).",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "balloon": {
                                    "type": "integer",
                                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                                    "optional": true,
                                    "constraints": {
                                      "minimum": 0
                                    }
                                  },
                                  "bios": {
                                    "type": "string",
                                    "description": "Select BIOS implementation.",
                                    "optional": true,
                                    "defaultValue": "seabios",
                                    "enum": [
                                      "seabios",
                                      "ovmf"
                                    ]
                                  },
                                  "boot": {
                                    "type": "string",
                                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-boot"
                                    }
                                  },
                                  "bootdisk": {
                                    "type": "string",
                                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                                    "optional": true,
                                    "constraints": {
                                      "pattern": "(ide|sata|scsi|virtio)\\d+",
                                      "format": "pve-qm-bootdisk"
                                    }
                                  },
                                  "cdrom": {
                                    "type": "string",
                                    "typetext": "<volume>",
                                    "description": "This is an alias for option -ide2",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-ide"
                                    }
                                  },
                                  "cicustom": {
                                    "type": "string",
                                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-cicustom"
                                    }
                                  },
                                  "cipassword": {
                                    "type": "string",
                                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                                    "optional": true
                                  },
                                  "citype": {
                                    "type": "string",
                                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                                    "optional": true,
                                    "enum": [
                                      "configdrive2",
                                      "nocloud",
                                      "opennebula"
                                    ]
                                  },
                                  "ciupgrade": {
                                    "type": "boolean",
                                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                                    "optional": true,
                                    "defaultValue": 1
                                  },
                                  "ciuser": {
                                    "type": "string",
                                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                                    "optional": true
                                  },
                                  "cores": {
                                    "type": "integer",
                                    "description": "The number of cores per socket.",
                                    "optional": true,
                                    "defaultValue": 1,
                                    "constraints": {
                                      "minimum": 1
                                    }
                                  },
                                  "cpu": {
                                    "type": "string",
                                    "description": "Emulated CPU type.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-vm-cpu-conf"
                                    }
                                  },
                                  "cpulimit": {
                                    "type": "number",
                                    "description": "Limit of CPU usage.",
                                    "verboseDescription": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                                    "optional": true,
                                    "defaultValue": 0,
                                    "constraints": {
                                      "minimum": 0,
                                      "maximum": 128
                                    }
                                  },
                                  "cpuunits": {
                                    "type": "integer",
                                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                                    "verboseDescription": "CPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                                    "optional": true,
                                    "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                                    "constraints": {
                                      "minimum": 1,
                                      "maximum": 262144
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 8192
                                    }
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "SHA1 digest of configuration file. This can be used to prevent concurrent modifications."
                                  },
                                  "efidisk0": {
                                    "type": "string",
                                    "description": "Configure a disk for storing EFI vars.",
                                    "optional": true
                                  },
                                  "freeze": {
                                    "type": "boolean",
                                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                                    "optional": true
                                  },
                                  "hookscript": {
                                    "type": "string",
                                    "description": "Script that will be executed during various steps in the vms lifetime.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-volume-id"
                                    }
                                  },
                                  "hostpci[n]": {
                                    "type": "string",
                                    "description": "Map host PCI devices into guest.",
                                    "verboseDescription": "Map host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-hostpci"
                                    }
                                  },
                                  "hotplug": {
                                    "type": "string",
                                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                                    "optional": true,
                                    "defaultValue": "network,disk,usb",
                                    "constraints": {
                                      "format": "pve-hotplug-features"
                                    }
                                  },
                                  "hugepages": {
                                    "type": "string",
                                    "description": "Enable/disable hugepages memory.",
                                    "optional": true,
                                    "enum": [
                                      "any",
                                      "2",
                                      "1024"
                                    ]
                                  },
                                  "ide[n]": {
                                    "type": "string",
                                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3).",
                                    "optional": true
                                  },
                                  "ipconfig[n]": {
                                    "type": "string",
                                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-ipconfig"
                                    }
                                  },
                                  "ivshmem": {
                                    "type": "string",
                                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                                    "optional": true
                                  },
                                  "keephugepages": {
                                    "type": "boolean",
                                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "keyboard": {
                                    "type": "string",
                                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                                    "optional": true,
                                    "defaultValue": null,
                                    "enum": [
                                      "de",
                                      "de-ch",
                                      "da",
                                      "en-gb",
                                      "en-us",
                                      "es",
                                      "fi",
                                      "fr",
                                      "fr-be",
                                      "fr-ca",
                                      "fr-ch",
                                      "hu",
                                      "is",
                                      "it",
                                      "ja",
                                      "lt",
                                      "mk",
                                      "nl",
                                      "no",
                                      "pl",
                                      "pt",
                                      "pt-br",
                                      "sv",
                                      "sl",
                                      "tr"
                                    ]
                                  },
                                  "kvm": {
                                    "type": "boolean",
                                    "description": "Enable/disable KVM hardware virtualization.",
                                    "optional": true,
                                    "defaultValue": 1
                                  },
                                  "localtime": {
                                    "type": "boolean",
                                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                                    "optional": true
                                  },
                                  "lock": {
                                    "type": "string",
                                    "description": "Lock/unlock the VM.",
                                    "optional": true,
                                    "enum": [
                                      "backup",
                                      "clone",
                                      "create",
                                      "migrate",
                                      "rollback",
                                      "snapshot",
                                      "snapshot-delete",
                                      "suspending",
                                      "suspended"
                                    ]
                                  },
                                  "machine": {
                                    "type": "string",
                                    "description": "Specify the QEMU machine.",
                                    "optional": true
                                  },
                                  "memory": {
                                    "type": "string",
                                    "description": "Memory properties.",
                                    "optional": true
                                  },
                                  "migrate_downtime": {
                                    "type": "number",
                                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                                    "optional": true,
                                    "defaultValue": 0.1,
                                    "constraints": {
                                      "minimum": 0
                                    }
                                  },
                                  "migrate_speed": {
                                    "type": "integer",
                                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                                    "optional": true,
                                    "defaultValue": 0,
                                    "constraints": {
                                      "minimum": 0
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Set a name for the VM. Only used on the configuration web interface.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "dns-name"
                                    }
                                  },
                                  "nameserver": {
                                    "type": "string",
                                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "address-list"
                                    }
                                  },
                                  "net[n]": {
                                    "type": "string",
                                    "description": "Specify network devices.",
                                    "optional": true
                                  },
                                  "numa": {
                                    "type": "boolean",
                                    "description": "Enable/disable NUMA.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "numa[n]": {
                                    "type": "string",
                                    "description": "NUMA topology.",
                                    "optional": true
                                  },
                                  "onboot": {
                                    "type": "boolean",
                                    "description": "Specifies whether a VM will be started during system bootup.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "ostype": {
                                    "type": "string",
                                    "description": "Specify guest operating system.",
                                    "verboseDescription": "Specify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                                    "optional": true,
                                    "enum": [
                                      "other",
                                      "wxp",
                                      "w2k",
                                      "w2k3",
                                      "w2k8",
                                      "wvista",
                                      "win7",
                                      "win8",
                                      "win10",
                                      "win11",
                                      "l24",
                                      "l26",
                                      "solaris"
                                    ]
                                  },
                                  "parallel[n]": {
                                    "type": "string",
                                    "description": "Map host parallel devices (n is 0 to 2).",
                                    "verboseDescription": "Map host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                    "optional": true,
                                    "constraints": {
                                      "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                                    }
                                  },
                                  "protection": {
                                    "type": "boolean",
                                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "reboot": {
                                    "type": "boolean",
                                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                                    "optional": true,
                                    "defaultValue": 1
                                  },
                                  "rng0": {
                                    "type": "string",
                                    "description": "Configure a VirtIO-based Random Number Generator.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-rng"
                                    }
                                  },
                                  "sata[n]": {
                                    "type": "string",
                                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5).",
                                    "optional": true
                                  },
                                  "scsi[n]": {
                                    "type": "string",
                                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).",
                                    "optional": true
                                  },
                                  "scsihw": {
                                    "type": "string",
                                    "description": "SCSI controller model",
                                    "optional": true,
                                    "defaultValue": "lsi",
                                    "enum": [
                                      "lsi",
                                      "lsi53c810",
                                      "virtio-scsi-pci",
                                      "virtio-scsi-single",
                                      "megasas",
                                      "pvscsi"
                                    ]
                                  },
                                  "searchdomain": {
                                    "type": "string",
                                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                                    "optional": true
                                  },
                                  "serial[n]": {
                                    "type": "string",
                                    "description": "Create a serial device inside the VM (n is 0 to 3)",
                                    "verboseDescription": "Create a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                    "optional": true,
                                    "constraints": {
                                      "pattern": "(/dev/.+|socket)"
                                    }
                                  },
                                  "shares": {
                                    "type": "integer",
                                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                                    "optional": true,
                                    "defaultValue": 1000,
                                    "constraints": {
                                      "minimum": 0,
                                      "maximum": 50000
                                    }
                                  },
                                  "smbios1": {
                                    "type": "string",
                                    "description": "Specify SMBIOS type 1 fields.",
                                    "optional": true,
                                    "constraints": {
                                      "maxLength": 512,
                                      "format": "pve-qm-smbios1"
                                    }
                                  },
                                  "smp": {
                                    "type": "integer",
                                    "description": "The number of CPUs. Please use option -sockets instead.",
                                    "optional": true,
                                    "defaultValue": 1,
                                    "constraints": {
                                      "minimum": 1
                                    }
                                  },
                                  "sockets": {
                                    "type": "integer",
                                    "description": "The number of CPU sockets.",
                                    "optional": true,
                                    "defaultValue": 1,
                                    "constraints": {
                                      "minimum": 1
                                    }
                                  },
                                  "spice_enhancements": {
                                    "type": "string",
                                    "description": "Configure additional enhancements for SPICE.",
                                    "optional": true
                                  },
                                  "sshkeys": {
                                    "type": "string",
                                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                                    "optional": true,
                                    "constraints": {
                                      "format": "urlencoded"
                                    }
                                  },
                                  "startdate": {
                                    "type": "string",
                                    "typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                                    "optional": true,
                                    "defaultValue": "now",
                                    "constraints": {
                                      "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)"
                                    }
                                  },
                                  "startup": {
                                    "type": "string",
                                    "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-startup-order"
                                    }
                                  },
                                  "tablet": {
                                    "type": "boolean",
                                    "description": "Enable/disable the USB tablet device.",
                                    "verboseDescription": "Enable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                                    "optional": true,
                                    "defaultValue": 1
                                  },
                                  "tags": {
                                    "type": "string",
                                    "description": "Tags of the VM. This is only meta information.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-tag-list"
                                    }
                                  },
                                  "tdf": {
                                    "type": "boolean",
                                    "description": "Enable/disable time drift fix.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "template": {
                                    "type": "boolean",
                                    "description": "Enable/disable Template.",
                                    "optional": true,
                                    "defaultValue": 0
                                  },
                                  "tpmstate0": {
                                    "type": "string",
                                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'.",
                                    "optional": true
                                  },
                                  "unused[n]": {
                                    "type": "string",
                                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                                    "optional": true
                                  },
                                  "usb[n]": {
                                    "type": "string",
                                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                                    "optional": true
                                  },
                                  "vcpus": {
                                    "type": "integer",
                                    "description": "Number of hotplugged vcpus.",
                                    "optional": true,
                                    "defaultValue": 0,
                                    "constraints": {
                                      "minimum": 1
                                    }
                                  },
                                  "vga": {
                                    "type": "string",
                                    "description": "Configure the VGA hardware.",
                                    "verboseDescription": "Configure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                                    "optional": true
                                  },
                                  "virtio[n]": {
                                    "type": "string",
                                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15).",
                                    "optional": true
                                  },
                                  "virtiofs[n]": {
                                    "type": "string",
                                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                                    "optional": true
                                  },
                                  "vmgenid": {
                                    "type": "string",
                                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                                    "verboseDescription": "The VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                                    "optional": true,
                                    "defaultValue": "1 (autogenerated)",
                                    "constraints": {
                                      "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                                      "formatDescription": "UUID"
                                    }
                                  },
                                  "vmstatestorage": {
                                    "type": "string",
                                    "description": "Default storage for VM state volumes/files.",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-storage-id",
                                      "formatDescription": "storage ID"
                                    }
                                  },
                                  "watchdog": {
                                    "type": "string",
                                    "description": "Create a virtual hardware watchdog device.",
                                    "verboseDescription": "Create a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                                    "optional": true,
                                    "constraints": {
                                      "format": "pve-qm-watchdog"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-qemu-vmid-config",
                          "operationId": "post-nodes-node-qemu-vmid-config",
                          "path": "/nodes/{node}/qemu/{vmid}/config",
                          "httpMethod": "POST",
                          "name": "update_vm_async",
                          "description": "Set virtual machine options (asynchronous API).",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk",
                                      "VM.Config.CDROM",
                                      "VM.Config.CPU",
                                      "VM.Config.Memory",
                                      "VM.Config.Network",
                                      "VM.Config.HWType",
                                      "VM.Config.Options",
                                      "VM.Config.Cloudinit"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "acpi": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable ACPI.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "affinity": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-cpuset"
                                  }
                                },
                                "agent": {
                                  "type": "string",
                                  "typetext": "[enabled=]<1|0> [,freeze-fs-on-backup=<1|0>] [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]",
                                  "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                                  "optional": true
                                },
                                "amd-sev": {
                                  "type": "string",
                                  "typetext": "[type=]<sev-type> [,allow-smt=<1|0>] [,kernel-hashes=<1|0>] [,no-debug=<1|0>] [,no-key-sharing=<1|0>]",
                                  "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qemu-sev-fmt"
                                  }
                                },
                                "arch": {
                                  "type": "string",
                                  "description": "Virtual processor architecture. Defaults to the host.",
                                  "optional": true,
                                  "enum": [
                                    "x86_64",
                                    "aarch64"
                                  ]
                                },
                                "args": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Arbitrary arguments passed to kvm.",
                                  "verboseDescription": "Arbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                                  "optional": true
                                },
                                "audio0": {
                                  "type": "string",
                                  "typetext": "device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]",
                                  "description": "Configure a audio device, useful in combination with QXL/Spice.",
                                  "optional": true
                                },
                                "autostart": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Automatic restart after crash (currently ignored).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "background_delay": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 30)",
                                  "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 30
                                  }
                                },
                                "balloon": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "bios": {
                                  "type": "string",
                                  "description": "Select BIOS implementation.",
                                  "optional": true,
                                  "defaultValue": "seabios",
                                  "enum": [
                                    "seabios",
                                    "ovmf"
                                  ]
                                },
                                "boot": {
                                  "type": "string",
                                  "typetext": "[[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]",
                                  "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-boot"
                                  }
                                },
                                "bootdisk": {
                                  "type": "string",
                                  "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "(ide|sata|scsi|virtio)\\d+",
                                    "format": "pve-qm-bootdisk"
                                  }
                                },
                                "cdrom": {
                                  "type": "string",
                                  "typetext": "<volume>",
                                  "description": "This is an alias for option -ide2",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-ide"
                                  }
                                },
                                "cicustom": {
                                  "type": "string",
                                  "typetext": "[meta=<volume>] [,network=<volume>] [,user=<volume>] [,vendor=<volume>]",
                                  "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-cicustom"
                                  }
                                },
                                "cipassword": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                                  "optional": true
                                },
                                "citype": {
                                  "type": "string",
                                  "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                                  "optional": true,
                                  "enum": [
                                    "configdrive2",
                                    "nocloud",
                                    "opennebula"
                                  ]
                                },
                                "ciupgrade": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "cloud-init: do an automatic package upgrade after the first boot.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "ciuser": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                                  "optional": true
                                },
                                "cores": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "The number of cores per socket.",
                                  "optional": true,
                                  "defaultValue": 1,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "cpu": {
                                  "type": "string",
                                  "typetext": "[[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>] [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>] [,phys-bits=<8-64|host>] [,reported-model=<enum>]",
                                  "description": "Emulated CPU type.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-vm-cpu-conf"
                                  }
                                },
                                "cpulimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - 128)",
                                  "description": "Limit of CPU usage.",
                                  "verboseDescription": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 128
                                  }
                                },
                                "cpuunits": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 262144)",
                                  "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                                  "verboseDescription": "CPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                                  "optional": true,
                                  "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 262144
                                  }
                                },
                                "delete": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 8192
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "efidisk0": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,efitype=<2m|4m>] [,format=<enum>] [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>] [,size=<DiskSize>]",
                                  "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal.",
                                  "optional": true,
                                  "constraints": {
                                    "requires": [
                                      "delete"
                                    ]
                                  }
                                },
                                "freeze": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                                  "optional": true
                                },
                                "hookscript": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Script that will be executed during various steps in the vms lifetime.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-volume-id"
                                  }
                                },
                                "hostpci[n]": {
                                  "type": "string",
                                  "typetext": "[[host=]<HOSTPCIID[;HOSTPCIID2...]>] [,device-id=<hex id>] [,legacy-igd=<1|0>] [,mapping=<mapping-id>] [,mdev=<string>] [,pcie=<1|0>] [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>] [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]",
                                  "description": "Map host PCI devices into guest.",
                                  "verboseDescription": "Map host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-hostpci"
                                  }
                                },
                                "hotplug": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                                  "optional": true,
                                  "defaultValue": "network,disk,usb",
                                  "constraints": {
                                    "format": "pve-hotplug-features"
                                  }
                                },
                                "hugepages": {
                                  "type": "string",
                                  "description": "Enable/disable hugepages memory.",
                                  "optional": true,
                                  "enum": [
                                    "any",
                                    "2",
                                    "1024"
                                  ]
                                },
                                "ide[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                                  "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "import-working-storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "A file-based storage with 'images' content-type enabled, which is used as an intermediary extraction storage during import. Defaults to the source storage.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "ipconfig[n]": {
                                  "type": "string",
                                  "typetext": "[gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]",
                                  "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-ipconfig"
                                  }
                                },
                                "ivshmem": {
                                  "type": "string",
                                  "typetext": "size=<integer> [,name=<string>]",
                                  "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                                  "optional": true
                                },
                                "keephugepages": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "keyboard": {
                                  "type": "string",
                                  "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                                  "optional": true,
                                  "defaultValue": null,
                                  "enum": [
                                    "de",
                                    "de-ch",
                                    "da",
                                    "en-gb",
                                    "en-us",
                                    "es",
                                    "fi",
                                    "fr",
                                    "fr-be",
                                    "fr-ca",
                                    "fr-ch",
                                    "hu",
                                    "is",
                                    "it",
                                    "ja",
                                    "lt",
                                    "mk",
                                    "nl",
                                    "no",
                                    "pl",
                                    "pt",
                                    "pt-br",
                                    "sv",
                                    "sl",
                                    "tr"
                                  ]
                                },
                                "kvm": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable KVM hardware virtualization.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "localtime": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                                  "optional": true
                                },
                                "lock": {
                                  "type": "string",
                                  "description": "Lock/unlock the VM.",
                                  "optional": true,
                                  "enum": [
                                    "backup",
                                    "clone",
                                    "create",
                                    "migrate",
                                    "rollback",
                                    "snapshot",
                                    "snapshot-delete",
                                    "suspending",
                                    "suspended"
                                  ]
                                },
                                "machine": {
                                  "type": "string",
                                  "typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                                  "description": "Specify the QEMU machine.",
                                  "optional": true
                                },
                                "memory": {
                                  "type": "string",
                                  "typetext": "[current=]<integer>",
                                  "description": "Memory properties.",
                                  "optional": true
                                },
                                "migrate_downtime": {
                                  "type": "number",
                                  "typetext": "<number> (0 - N)",
                                  "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                                  "optional": true,
                                  "defaultValue": 0.1,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "migrate_speed": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Set a name for the VM. Only used on the configuration web interface.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "dns-name"
                                  }
                                },
                                "nameserver": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "address-list"
                                  }
                                },
                                "net[n]": {
                                  "type": "string",
                                  "typetext": "[model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>] [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>] [,mtu=<integer>] [,queues=<integer>] [,rate=<number>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,<model>=<macaddr>]",
                                  "description": "Specify network devices.",
                                  "optional": true
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "numa": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable NUMA.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "numa[n]": {
                                  "type": "string",
                                  "typetext": "cpus=<id[-id];...> [,hostnodes=<id[-id];...>] [,memory=<number>] [,policy=<preferred|bind|interleave>]",
                                  "description": "NUMA topology.",
                                  "optional": true
                                },
                                "onboot": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Specifies whether a VM will be started during system bootup.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "ostype": {
                                  "type": "string",
                                  "description": "Specify guest operating system.",
                                  "verboseDescription": "Specify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                                  "optional": true,
                                  "enum": [
                                    "other",
                                    "wxp",
                                    "w2k",
                                    "w2k3",
                                    "w2k8",
                                    "wvista",
                                    "win7",
                                    "win8",
                                    "win10",
                                    "win11",
                                    "l24",
                                    "l26",
                                    "solaris"
                                  ]
                                },
                                "parallel[n]": {
                                  "type": "string",
                                  "description": "Map host parallel devices (n is 0 to 2).",
                                  "verboseDescription": "Map host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                                  }
                                },
                                "protection": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "reboot": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "revert": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Revert a pending change.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "rng0": {
                                  "type": "string",
                                  "typetext": "[source=]</dev/urandom|/dev/random|/dev/hwrng> [,max_bytes=<integer>] [,period=<integer>]",
                                  "description": "Configure a VirtIO-based Random Number Generator.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-rng"
                                  }
                                },
                                "sata[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                                  "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "scsi[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,product=<product>] [,queues=<integer>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,vendor=<vendor>] [,werror=<enum>] [,wwn=<wwn>]",
                                  "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "scsihw": {
                                  "type": "string",
                                  "description": "SCSI controller model",
                                  "optional": true,
                                  "defaultValue": "lsi",
                                  "enum": [
                                    "lsi",
                                    "lsi53c810",
                                    "virtio-scsi-pci",
                                    "virtio-scsi-single",
                                    "megasas",
                                    "pvscsi"
                                  ]
                                },
                                "searchdomain": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                                  "optional": true
                                },
                                "serial[n]": {
                                  "type": "string",
                                  "description": "Create a serial device inside the VM (n is 0 to 3)",
                                  "verboseDescription": "Create a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "(/dev/.+|socket)"
                                  }
                                },
                                "shares": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - 50000)",
                                  "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                                  "optional": true,
                                  "defaultValue": 1000,
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 50000
                                  }
                                },
                                "skiplock": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Ignore locks - only root is allowed to use this option.",
                                  "optional": true
                                },
                                "smbios1": {
                                  "type": "string",
                                  "typetext": "[base64=<1|0>] [,family=<Base64 encoded string>] [,manufacturer=<Base64 encoded string>] [,product=<Base64 encoded string>] [,serial=<Base64 encoded string>] [,sku=<Base64 encoded string>] [,uuid=<UUID>] [,version=<Base64 encoded string>]",
                                  "description": "Specify SMBIOS type 1 fields.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 512,
                                    "format": "pve-qm-smbios1"
                                  }
                                },
                                "smp": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "The number of CPUs. Please use option -sockets instead.",
                                  "optional": true,
                                  "defaultValue": 1,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "sockets": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "The number of CPU sockets.",
                                  "optional": true,
                                  "defaultValue": 1,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "spice_enhancements": {
                                  "type": "string",
                                  "typetext": "[foldersharing=<1|0>] [,videostreaming=<off|all|filter>]",
                                  "description": "Configure additional enhancements for SPICE.",
                                  "optional": true
                                },
                                "sshkeys": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                                  "optional": true,
                                  "constraints": {
                                    "format": "urlencoded"
                                  }
                                },
                                "startdate": {
                                  "type": "string",
                                  "typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                                  "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                                  "optional": true,
                                  "defaultValue": "now",
                                  "constraints": {
                                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)"
                                  }
                                },
                                "startup": {
                                  "type": "string",
                                  "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                                  "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-startup-order"
                                  }
                                },
                                "tablet": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable the USB tablet device.",
                                  "verboseDescription": "Enable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "tags": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Tags of the VM. This is only meta information.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-tag-list"
                                  }
                                },
                                "tdf": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable time drift fix.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "template": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable Template.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "tpmstate0": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,import-from=<source volume>] [,size=<DiskSize>] [,version=<v1.2|v2.0>]",
                                  "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "unused[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume>",
                                  "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                                  "optional": true
                                },
                                "usb[n]": {
                                  "type": "string",
                                  "typetext": "[[host=]<HOSTUSBDEVICE|spice>] [,mapping=<mapping-id>] [,usb3=<1|0>]",
                                  "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                                  "optional": true
                                },
                                "vcpus": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "Number of hotplugged vcpus.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "vga": {
                                  "type": "string",
                                  "typetext": "[[type=]<enum>] [,clipboard=<vnc>] [,memory=<integer>]",
                                  "description": "Configure the VGA hardware.",
                                  "verboseDescription": "Configure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                                  "optional": true
                                },
                                "virtio[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,werror=<enum>]",
                                  "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "virtiofs[n]": {
                                  "type": "string",
                                  "typetext": "[dirid=]<mapping-id> [,cache=<enum>] [,direct-io=<1|0>] [,expose-acl=<1|0>] [,expose-xattr=<1|0>]",
                                  "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                                  "optional": true
                                },
                                "vmgenid": {
                                  "type": "string",
                                  "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                                  "verboseDescription": "The VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                                  "optional": true,
                                  "defaultValue": "1 (autogenerated)",
                                  "constraints": {
                                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                                    "formatDescription": "UUID"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vmstatestorage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "Default storage for VM state volumes/files.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "watchdog": {
                                  "type": "string",
                                  "typetext": "[[model=]<i6300esb|ib700>] [,action=<enum>]",
                                  "description": "Create a virtual hardware watchdog device.",
                                  "verboseDescription": "Create a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-watchdog"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string",
                                "optional": true
                              }
                            }
                          ]
                        },
                        {
                          "id": "put-nodes-node-qemu-vmid-config",
                          "operationId": "put-nodes-node-qemu-vmid-config",
                          "path": "/nodes/{node}/qemu/{vmid}/config",
                          "httpMethod": "PUT",
                          "name": "update_vm",
                          "description": "Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk",
                                      "VM.Config.CDROM",
                                      "VM.Config.CPU",
                                      "VM.Config.Memory",
                                      "VM.Config.Network",
                                      "VM.Config.HWType",
                                      "VM.Config.Options",
                                      "VM.Config.Cloudinit"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "acpi": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable ACPI.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "affinity": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-cpuset"
                                  }
                                },
                                "agent": {
                                  "type": "string",
                                  "typetext": "[enabled=]<1|0> [,freeze-fs-on-backup=<1|0>] [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]",
                                  "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                                  "optional": true
                                },
                                "amd-sev": {
                                  "type": "string",
                                  "typetext": "[type=]<sev-type> [,allow-smt=<1|0>] [,kernel-hashes=<1|0>] [,no-debug=<1|0>] [,no-key-sharing=<1|0>]",
                                  "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qemu-sev-fmt"
                                  }
                                },
                                "arch": {
                                  "type": "string",
                                  "description": "Virtual processor architecture. Defaults to the host.",
                                  "optional": true,
                                  "enum": [
                                    "x86_64",
                                    "aarch64"
                                  ]
                                },
                                "args": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Arbitrary arguments passed to kvm.",
                                  "verboseDescription": "Arbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                                  "optional": true
                                },
                                "audio0": {
                                  "type": "string",
                                  "typetext": "device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]",
                                  "description": "Configure a audio device, useful in combination with QXL/Spice.",
                                  "optional": true
                                },
                                "autostart": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Automatic restart after crash (currently ignored).",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "balloon": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "bios": {
                                  "type": "string",
                                  "description": "Select BIOS implementation.",
                                  "optional": true,
                                  "defaultValue": "seabios",
                                  "enum": [
                                    "seabios",
                                    "ovmf"
                                  ]
                                },
                                "boot": {
                                  "type": "string",
                                  "typetext": "[[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]",
                                  "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-boot"
                                  }
                                },
                                "bootdisk": {
                                  "type": "string",
                                  "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "(ide|sata|scsi|virtio)\\d+",
                                    "format": "pve-qm-bootdisk"
                                  }
                                },
                                "cdrom": {
                                  "type": "string",
                                  "typetext": "<volume>",
                                  "description": "This is an alias for option -ide2",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-ide"
                                  }
                                },
                                "cicustom": {
                                  "type": "string",
                                  "typetext": "[meta=<volume>] [,network=<volume>] [,user=<volume>] [,vendor=<volume>]",
                                  "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-cicustom"
                                  }
                                },
                                "cipassword": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                                  "optional": true
                                },
                                "citype": {
                                  "type": "string",
                                  "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                                  "optional": true,
                                  "enum": [
                                    "configdrive2",
                                    "nocloud",
                                    "opennebula"
                                  ]
                                },
                                "ciupgrade": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "cloud-init: do an automatic package upgrade after the first boot.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "ciuser": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                                  "optional": true
                                },
                                "cores": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "The number of cores per socket.",
                                  "optional": true,
                                  "defaultValue": 1,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "cpu": {
                                  "type": "string",
                                  "typetext": "[[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>] [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>] [,phys-bits=<8-64|host>] [,reported-model=<enum>]",
                                  "description": "Emulated CPU type.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-vm-cpu-conf"
                                  }
                                },
                                "cpulimit": {
                                  "type": "number",
                                  "typetext": "<number> (0 - 128)",
                                  "description": "Limit of CPU usage.",
                                  "verboseDescription": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 128
                                  }
                                },
                                "cpuunits": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - 262144)",
                                  "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.",
                                  "verboseDescription": "CPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                                  "optional": true,
                                  "defaultValue": "cgroup v1: 1024, cgroup v2: 100",
                                  "constraints": {
                                    "minimum": 1,
                                    "maximum": 262144
                                  }
                                },
                                "delete": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A list of settings you want to delete.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 8192
                                  }
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "efidisk0": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,efitype=<2m|4m>] [,format=<enum>] [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>] [,size=<DiskSize>]",
                                  "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal.",
                                  "optional": true,
                                  "constraints": {
                                    "requires": [
                                      "delete"
                                    ]
                                  }
                                },
                                "freeze": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                                  "optional": true
                                },
                                "hookscript": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Script that will be executed during various steps in the vms lifetime.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-volume-id"
                                  }
                                },
                                "hostpci[n]": {
                                  "type": "string",
                                  "typetext": "[[host=]<HOSTPCIID[;HOSTPCIID2...]>] [,device-id=<hex id>] [,legacy-igd=<1|0>] [,mapping=<mapping-id>] [,mdev=<string>] [,pcie=<1|0>] [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>] [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]",
                                  "description": "Map host PCI devices into guest.",
                                  "verboseDescription": "Map host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-hostpci"
                                  }
                                },
                                "hotplug": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                                  "optional": true,
                                  "defaultValue": "network,disk,usb",
                                  "constraints": {
                                    "format": "pve-hotplug-features"
                                  }
                                },
                                "hugepages": {
                                  "type": "string",
                                  "description": "Enable/disable hugepages memory.",
                                  "optional": true,
                                  "enum": [
                                    "any",
                                    "2",
                                    "1024"
                                  ]
                                },
                                "ide[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                                  "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "ipconfig[n]": {
                                  "type": "string",
                                  "typetext": "[gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]",
                                  "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-ipconfig"
                                  }
                                },
                                "ivshmem": {
                                  "type": "string",
                                  "typetext": "size=<integer> [,name=<string>]",
                                  "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                                  "optional": true
                                },
                                "keephugepages": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "keyboard": {
                                  "type": "string",
                                  "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                                  "optional": true,
                                  "defaultValue": null,
                                  "enum": [
                                    "de",
                                    "de-ch",
                                    "da",
                                    "en-gb",
                                    "en-us",
                                    "es",
                                    "fi",
                                    "fr",
                                    "fr-be",
                                    "fr-ca",
                                    "fr-ch",
                                    "hu",
                                    "is",
                                    "it",
                                    "ja",
                                    "lt",
                                    "mk",
                                    "nl",
                                    "no",
                                    "pl",
                                    "pt",
                                    "pt-br",
                                    "sv",
                                    "sl",
                                    "tr"
                                  ]
                                },
                                "kvm": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable KVM hardware virtualization.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "localtime": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                                  "optional": true
                                },
                                "lock": {
                                  "type": "string",
                                  "description": "Lock/unlock the VM.",
                                  "optional": true,
                                  "enum": [
                                    "backup",
                                    "clone",
                                    "create",
                                    "migrate",
                                    "rollback",
                                    "snapshot",
                                    "snapshot-delete",
                                    "suspending",
                                    "suspended"
                                  ]
                                },
                                "machine": {
                                  "type": "string",
                                  "typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                                  "description": "Specify the QEMU machine.",
                                  "optional": true
                                },
                                "memory": {
                                  "type": "string",
                                  "typetext": "[current=]<integer>",
                                  "description": "Memory properties.",
                                  "optional": true
                                },
                                "migrate_downtime": {
                                  "type": "number",
                                  "typetext": "<number> (0 - N)",
                                  "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                                  "optional": true,
                                  "defaultValue": 0.1,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "migrate_speed": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Set a name for the VM. Only used on the configuration web interface.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "dns-name"
                                  }
                                },
                                "nameserver": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "address-list"
                                  }
                                },
                                "net[n]": {
                                  "type": "string",
                                  "typetext": "[model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>] [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>] [,mtu=<integer>] [,queues=<integer>] [,rate=<number>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,<model>=<macaddr>]",
                                  "description": "Specify network devices.",
                                  "optional": true
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "numa": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable NUMA.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "numa[n]": {
                                  "type": "string",
                                  "typetext": "cpus=<id[-id];...> [,hostnodes=<id[-id];...>] [,memory=<number>] [,policy=<preferred|bind|interleave>]",
                                  "description": "NUMA topology.",
                                  "optional": true
                                },
                                "onboot": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Specifies whether a VM will be started during system bootup.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "ostype": {
                                  "type": "string",
                                  "description": "Specify guest operating system.",
                                  "verboseDescription": "Specify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                                  "optional": true,
                                  "enum": [
                                    "other",
                                    "wxp",
                                    "w2k",
                                    "w2k3",
                                    "w2k8",
                                    "wvista",
                                    "win7",
                                    "win8",
                                    "win10",
                                    "win11",
                                    "l24",
                                    "l26",
                                    "solaris"
                                  ]
                                },
                                "parallel[n]": {
                                  "type": "string",
                                  "description": "Map host parallel devices (n is 0 to 2).",
                                  "verboseDescription": "Map host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+"
                                  }
                                },
                                "protection": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "reboot": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "revert": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Revert a pending change.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "rng0": {
                                  "type": "string",
                                  "typetext": "[source=]</dev/urandom|/dev/random|/dev/hwrng> [,max_bytes=<integer>] [,period=<integer>]",
                                  "description": "Configure a VirtIO-based Random Number Generator.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-rng"
                                  }
                                },
                                "sata[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                                  "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "scsi[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,product=<product>] [,queues=<integer>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,vendor=<vendor>] [,werror=<enum>] [,wwn=<wwn>]",
                                  "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "scsihw": {
                                  "type": "string",
                                  "description": "SCSI controller model",
                                  "optional": true,
                                  "defaultValue": "lsi",
                                  "enum": [
                                    "lsi",
                                    "lsi53c810",
                                    "virtio-scsi-pci",
                                    "virtio-scsi-single",
                                    "megasas",
                                    "pvscsi"
                                  ]
                                },
                                "searchdomain": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                                  "optional": true
                                },
                                "serial[n]": {
                                  "type": "string",
                                  "description": "Create a serial device inside the VM (n is 0 to 3)",
                                  "verboseDescription": "Create a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "(/dev/.+|socket)"
                                  }
                                },
                                "shares": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - 50000)",
                                  "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                                  "optional": true,
                                  "defaultValue": 1000,
                                  "constraints": {
                                    "minimum": 0,
                                    "maximum": 50000
                                  }
                                },
                                "skiplock": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Ignore locks - only root is allowed to use this option.",
                                  "optional": true
                                },
                                "smbios1": {
                                  "type": "string",
                                  "typetext": "[base64=<1|0>] [,family=<Base64 encoded string>] [,manufacturer=<Base64 encoded string>] [,product=<Base64 encoded string>] [,serial=<Base64 encoded string>] [,sku=<Base64 encoded string>] [,uuid=<UUID>] [,version=<Base64 encoded string>]",
                                  "description": "Specify SMBIOS type 1 fields.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 512,
                                    "format": "pve-qm-smbios1"
                                  }
                                },
                                "smp": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "The number of CPUs. Please use option -sockets instead.",
                                  "optional": true,
                                  "defaultValue": 1,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "sockets": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "The number of CPU sockets.",
                                  "optional": true,
                                  "defaultValue": 1,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "spice_enhancements": {
                                  "type": "string",
                                  "typetext": "[foldersharing=<1|0>] [,videostreaming=<off|all|filter>]",
                                  "description": "Configure additional enhancements for SPICE.",
                                  "optional": true
                                },
                                "sshkeys": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                                  "optional": true,
                                  "constraints": {
                                    "format": "urlencoded"
                                  }
                                },
                                "startdate": {
                                  "type": "string",
                                  "typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                                  "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                                  "optional": true,
                                  "defaultValue": "now",
                                  "constraints": {
                                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)"
                                  }
                                },
                                "startup": {
                                  "type": "string",
                                  "typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                                  "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-startup-order"
                                  }
                                },
                                "tablet": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable the USB tablet device.",
                                  "verboseDescription": "Enable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                                  "optional": true,
                                  "defaultValue": 1
                                },
                                "tags": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Tags of the VM. This is only meta information.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-tag-list"
                                  }
                                },
                                "tdf": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable time drift fix.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "template": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable/disable Template.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "tpmstate0": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,import-from=<source volume>] [,size=<DiskSize>] [,version=<v1.2|v2.0>]",
                                  "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "unused[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume>",
                                  "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                                  "optional": true
                                },
                                "usb[n]": {
                                  "type": "string",
                                  "typetext": "[[host=]<HOSTUSBDEVICE|spice>] [,mapping=<mapping-id>] [,usb3=<1|0>]",
                                  "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                                  "optional": true
                                },
                                "vcpus": {
                                  "type": "integer",
                                  "typetext": "<integer> (1 - N)",
                                  "description": "Number of hotplugged vcpus.",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 1
                                  }
                                },
                                "vga": {
                                  "type": "string",
                                  "typetext": "[[type=]<enum>] [,clipboard=<vnc>] [,memory=<integer>]",
                                  "description": "Configure the VGA hardware.",
                                  "verboseDescription": "Configure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                                  "optional": true
                                },
                                "virtio[n]": {
                                  "type": "string",
                                  "typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,werror=<enum>]",
                                  "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                                  "optional": true
                                },
                                "virtiofs[n]": {
                                  "type": "string",
                                  "typetext": "[dirid=]<mapping-id> [,cache=<enum>] [,direct-io=<1|0>] [,expose-acl=<1|0>] [,expose-xattr=<1|0>]",
                                  "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                                  "optional": true
                                },
                                "vmgenid": {
                                  "type": "string",
                                  "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.",
                                  "verboseDescription": "The VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                                  "optional": true,
                                  "defaultValue": "1 (autogenerated)",
                                  "constraints": {
                                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                                    "formatDescription": "UUID"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vmstatestorage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "Default storage for VM state volumes/files.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "watchdog": {
                                  "type": "string",
                                  "typetext": "[[model=]<i6300esb|ib700>] [,action=<enum>]",
                                  "description": "Create a virtual hardware watchdog device.",
                                  "verboseDescription": "Create a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-qm-watchdog"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-dbus-vmstate",
                      "path": "/nodes/{node}/qemu/{vmid}/dbus-vmstate",
                      "slug": "nodes-node-qemu-vmid-dbus-vmstate",
                      "label": "dbus-vmstate",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-dbus-vmstate",
                          "operationId": "post-nodes-node-qemu-vmid-dbus-vmstate",
                          "path": "/nodes/{node}/qemu/{vmid}/dbus-vmstate",
                          "httpMethod": "POST",
                          "name": "dbus_vmstate",
                          "description": "Stop the dbus-vmstate helper for the given VM if running.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "action": {
                                  "type": "string",
                                  "description": "Action to perform on the DBus VMState helper.",
                                  "optional": false,
                                  "enum": [
                                    "start",
                                    "stop"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-feature",
                      "path": "/nodes/{node}/qemu/{vmid}/feature",
                      "slug": "nodes-node-qemu-vmid-feature",
                      "label": "feature",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-feature",
                          "operationId": "get-nodes-node-qemu-vmid-feature",
                          "path": "/nodes/{node}/qemu/{vmid}/feature",
                          "httpMethod": "GET",
                          "name": "vm_feature",
                          "description": "Check if feature for virtual machine is available.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "feature": {
                                  "type": "string",
                                  "description": "Feature to check.",
                                  "enum": [
                                    "snapshot",
                                    "clone",
                                    "copy"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "snapname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the snapshot.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "hasFeature": {
                                    "type": "boolean"
                                  },
                                  "nodes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-firewall",
                      "path": "/nodes/{node}/qemu/{vmid}/firewall",
                      "slug": "nodes-node-qemu-vmid-firewall",
                      "label": "firewall",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-firewall",
                          "operationId": "get-nodes-node-qemu-vmid-firewall",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "Directory index.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-qemu-vmid-firewall-aliases",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases",
                          "slug": "nodes-node-qemu-vmid-firewall-aliases",
                          "label": "aliases",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-firewall-aliases",
                              "operationId": "get-nodes-node-qemu-vmid-firewall-aliases",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases",
                              "httpMethod": "GET",
                              "name": "get_aliases",
                              "description": "List aliases",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "cidr": {
                                          "type": "string"
                                        },
                                        "comment": {
                                          "type": "string",
                                          "optional": true
                                        },
                                        "digest": {
                                          "type": "string",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": false,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{name}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-qemu-vmid-firewall-aliases",
                              "operationId": "post-nodes-node-qemu-vmid-firewall-aliases",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases",
                              "httpMethod": "POST",
                              "name": "create_alias",
                              "description": "Create IP or Network Alias.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "cidr": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Network/IP specification in CIDR format.",
                                      "constraints": {
                                        "format": "IPorCIDR"
                                      }
                                    },
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "optional": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Alias name.",
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 64,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-qemu-vmid-firewall-aliases-name",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}",
                              "slug": "nodes-node-qemu-vmid-firewall-aliases-name",
                              "label": "{name}",
                              "endpoints": [
                                {
                                  "id": "delete-nodes-node-qemu-vmid-firewall-aliases-name",
                                  "operationId": "delete-nodes-node-qemu-vmid-firewall-aliases-name",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}",
                                  "httpMethod": "DELETE",
                                  "name": "remove_alias",
                                  "description": "Remove IP or Network alias.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Alias name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-nodes-node-qemu-vmid-firewall-aliases-name",
                                  "operationId": "get-nodes-node-qemu-vmid-firewall-aliases-name",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}",
                                  "httpMethod": "GET",
                                  "name": "read_alias",
                                  "description": "Read alias.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Audit"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Alias name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-nodes-node-qemu-vmid-firewall-aliases-name",
                                  "operationId": "put-nodes-node-qemu-vmid-firewall-aliases-name",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}",
                                  "httpMethod": "PUT",
                                  "name": "update_alias",
                                  "description": "Update IP or Network alias.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network/IP specification in CIDR format.",
                                          "constraints": {
                                            "format": "IPorCIDR"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "optional": true
                                        },
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Alias name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "rename": {
                                          "type": "string",
                                          "description": "Rename an existing alias.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        },
                        {
                          "id": "nodes-node-qemu-vmid-firewall-ipset",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset",
                          "slug": "nodes-node-qemu-vmid-firewall-ipset",
                          "label": "ipset",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-firewall-ipset",
                              "operationId": "get-nodes-node-qemu-vmid-firewall-ipset",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset",
                              "httpMethod": "GET",
                              "name": "ipset_index",
                              "description": "List IPSets",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "comment": {
                                          "type": "string",
                                          "optional": true
                                        },
                                        "digest": {
                                          "type": "string",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": false,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{name}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-qemu-vmid-firewall-ipset",
                              "operationId": "post-nodes-node-qemu-vmid-firewall-ipset",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset",
                              "httpMethod": "POST",
                              "name": "create_ipset",
                              "description": "Create new IPSet",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "optional": true
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "IP set name.",
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 64,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "rename": {
                                      "type": "string",
                                      "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                                      "optional": true,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 64,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-qemu-vmid-firewall-ipset-name",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}",
                              "slug": "nodes-node-qemu-vmid-firewall-ipset-name",
                              "label": "{name}",
                              "endpoints": [
                                {
                                  "id": "delete-nodes-node-qemu-vmid-firewall-ipset-name",
                                  "operationId": "delete-nodes-node-qemu-vmid-firewall-ipset-name",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}",
                                  "httpMethod": "DELETE",
                                  "name": "delete_ipset",
                                  "description": "Delete IPSet",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "force": {
                                          "type": "boolean",
                                          "typetext": "<boolean>",
                                          "description": "Delete all members of the IPSet, if there are any.",
                                          "optional": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-nodes-node-qemu-vmid-firewall-ipset-name",
                                  "operationId": "get-nodes-node-qemu-vmid-firewall-ipset-name",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}",
                                  "httpMethod": "GET",
                                  "name": "get_ipset",
                                  "description": "List IPSet content",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Audit"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "cidr": {
                                              "type": "string"
                                            },
                                            "comment": {
                                              "type": "string",
                                              "optional": true
                                            },
                                            "digest": {
                                              "type": "string",
                                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                              "optional": false,
                                              "constraints": {
                                                "maxLength": 64
                                              }
                                            },
                                            "nomatch": {
                                              "type": "boolean",
                                              "optional": true
                                            }
                                          }
                                        },
                                        "metadata": {
                                          "links": [
                                            {
                                              "href": "{cidr}",
                                              "rel": "child"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "post-nodes-node-qemu-vmid-firewall-ipset-name",
                                  "operationId": "post-nodes-node-qemu-vmid-firewall-ipset-name",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}",
                                  "httpMethod": "POST",
                                  "name": "create_ip",
                                  "description": "Add IP or Network to IPSet.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network/IP specification in CIDR format.",
                                          "constraints": {
                                            "format": "IPorCIDRorAlias"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "optional": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "IP set name.",
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 64,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "nomatch": {
                                          "type": "boolean",
                                          "typetext": "<boolean>",
                                          "optional": true
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": [
                                {
                                  "id": "nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}",
                                  "slug": "nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                  "label": "{cidr}",
                                  "endpoints": [
                                    {
                                      "id": "delete-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                      "operationId": "delete-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                      "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}",
                                      "httpMethod": "DELETE",
                                      "name": "remove_ip",
                                      "description": "Remove IP or Network from IPSet.",
                                      "security": {
                                        "allowToken": true,
                                        "requiresAuthentication": true,
                                        "permissions": {
                                          "all": [
                                            {
                                              "check": [
                                                "perm",
                                                "/vms/{vmid}",
                                                [
                                                  "VM.Config.Network"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "features": {
                                        "proxy": false,
                                        "download": false,
                                        "upload": false
                                      },
                                      "request": {
                                        "schema": {
                                          "properties": {
                                            "cidr": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Network/IP specification in CIDR format.",
                                              "constraints": {
                                                "format": "IPorCIDRorAlias"
                                              }
                                            },
                                            "digest": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                              "optional": true,
                                              "constraints": {
                                                "maxLength": 64
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "IP set name.",
                                              "constraints": {
                                                "minLength": 2,
                                                "maxLength": 64,
                                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                              }
                                            },
                                            "node": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "The cluster node name.",
                                              "constraints": {
                                                "format": "pve-node"
                                              }
                                            },
                                            "vmid": {
                                              "type": "integer",
                                              "typetext": "<integer> (100 - 999999999)",
                                              "description": "The (unique) ID of the VM.",
                                              "constraints": {
                                                "minimum": 100,
                                                "maximum": 999999999,
                                                "format": "pve-vmid"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "responses": [
                                        {
                                          "schema": {
                                            "type": "null"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "id": "get-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                      "operationId": "get-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                      "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}",
                                      "httpMethod": "GET",
                                      "name": "read_ip",
                                      "description": "Read IP or Network settings from IPSet.",
                                      "security": {
                                        "allowToken": true,
                                        "requiresAuthentication": true,
                                        "permissions": {
                                          "all": [
                                            {
                                              "check": [
                                                "perm",
                                                "/vms/{vmid}",
                                                [
                                                  "VM.Audit"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "features": {
                                        "proxy": false,
                                        "download": false,
                                        "upload": false
                                      },
                                      "request": {
                                        "schema": {
                                          "properties": {
                                            "cidr": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Network/IP specification in CIDR format.",
                                              "constraints": {
                                                "format": "IPorCIDRorAlias"
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "IP set name.",
                                              "constraints": {
                                                "minLength": 2,
                                                "maxLength": 64,
                                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                              }
                                            },
                                            "node": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "The cluster node name.",
                                              "constraints": {
                                                "format": "pve-node"
                                              }
                                            },
                                            "vmid": {
                                              "type": "integer",
                                              "typetext": "<integer> (100 - 999999999)",
                                              "description": "The (unique) ID of the VM.",
                                              "constraints": {
                                                "minimum": 100,
                                                "maximum": 999999999,
                                                "format": "pve-vmid"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "responses": [
                                        {
                                          "schema": {
                                            "type": "object"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "id": "put-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                      "operationId": "put-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
                                      "path": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}",
                                      "httpMethod": "PUT",
                                      "name": "update_ip",
                                      "description": "Update IP or Network settings",
                                      "security": {
                                        "allowToken": true,
                                        "requiresAuthentication": true,
                                        "permissions": {
                                          "all": [
                                            {
                                              "check": [
                                                "perm",
                                                "/vms/{vmid}",
                                                [
                                                  "VM.Config.Network"
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "features": {
                                        "proxy": false,
                                        "download": false,
                                        "upload": false
                                      },
                                      "request": {
                                        "schema": {
                                          "properties": {
                                            "cidr": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Network/IP specification in CIDR format.",
                                              "constraints": {
                                                "format": "IPorCIDRorAlias"
                                              }
                                            },
                                            "comment": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "optional": true
                                            },
                                            "digest": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                              "optional": true,
                                              "constraints": {
                                                "maxLength": 64
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "IP set name.",
                                              "constraints": {
                                                "minLength": 2,
                                                "maxLength": 64,
                                                "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                              }
                                            },
                                            "node": {
                                              "type": "string",
                                              "typetext": "<string>",
                                              "description": "The cluster node name.",
                                              "constraints": {
                                                "format": "pve-node"
                                              }
                                            },
                                            "nomatch": {
                                              "type": "boolean",
                                              "typetext": "<boolean>",
                                              "optional": true
                                            },
                                            "vmid": {
                                              "type": "integer",
                                              "typetext": "<integer> (100 - 999999999)",
                                              "description": "The (unique) ID of the VM.",
                                              "constraints": {
                                                "minimum": 100,
                                                "maximum": 999999999,
                                                "format": "pve-vmid"
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "responses": [
                                        {
                                          "schema": {
                                            "type": "null"
                                          }
                                        }
                                      ]
                                    }
                                  ],
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "id": "nodes-node-qemu-vmid-firewall-log",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall/log",
                          "slug": "nodes-node-qemu-vmid-firewall-log",
                          "label": "log",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-firewall-log",
                              "operationId": "get-nodes-node-qemu-vmid-firewall-log",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/log",
                              "httpMethod": "GET",
                              "name": "log",
                              "description": "Read firewall log",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Console"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "limit": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "since": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Display log since this UNIX epoch.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "start": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "until": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Display log until this UNIX epoch.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "n": {
                                          "type": "integer",
                                          "description": "Line number"
                                        },
                                        "t": {
                                          "type": "string",
                                          "description": "Line text"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-firewall-options",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall/options",
                          "slug": "nodes-node-qemu-vmid-firewall-options",
                          "label": "options",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-firewall-options",
                              "operationId": "get-nodes-node-qemu-vmid-firewall-options",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/options",
                              "httpMethod": "GET",
                              "name": "get_options",
                              "description": "Get VM firewall options.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "dhcp": {
                                        "type": "boolean",
                                        "description": "Enable DHCP.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "enable": {
                                        "type": "boolean",
                                        "description": "Enable/disable firewall rules.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "ipfilter": {
                                        "type": "boolean",
                                        "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                                        "optional": true
                                      },
                                      "log_level_in": {
                                        "type": "string",
                                        "description": "Log level for incoming traffic.",
                                        "optional": true,
                                        "enum": [
                                          "emerg",
                                          "alert",
                                          "crit",
                                          "err",
                                          "warning",
                                          "notice",
                                          "info",
                                          "debug",
                                          "nolog"
                                        ]
                                      },
                                      "log_level_out": {
                                        "type": "string",
                                        "description": "Log level for outgoing traffic.",
                                        "optional": true,
                                        "enum": [
                                          "emerg",
                                          "alert",
                                          "crit",
                                          "err",
                                          "warning",
                                          "notice",
                                          "info",
                                          "debug",
                                          "nolog"
                                        ]
                                      },
                                      "macfilter": {
                                        "type": "boolean",
                                        "description": "Enable/disable MAC address filter.",
                                        "optional": true,
                                        "defaultValue": 1
                                      },
                                      "ndp": {
                                        "type": "boolean",
                                        "description": "Enable NDP (Neighbor Discovery Protocol).",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "policy_in": {
                                        "type": "string",
                                        "description": "Input policy.",
                                        "optional": true,
                                        "enum": [
                                          "ACCEPT",
                                          "REJECT",
                                          "DROP"
                                        ]
                                      },
                                      "policy_out": {
                                        "type": "string",
                                        "description": "Output policy.",
                                        "optional": true,
                                        "enum": [
                                          "ACCEPT",
                                          "REJECT",
                                          "DROP"
                                        ]
                                      },
                                      "radv": {
                                        "type": "boolean",
                                        "description": "Allow sending Router Advertisement.",
                                        "optional": true
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "put-nodes-node-qemu-vmid-firewall-options",
                              "operationId": "put-nodes-node-qemu-vmid-firewall-options",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/options",
                              "httpMethod": "PUT",
                              "name": "set_options",
                              "description": "Set Firewall options.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "delete": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "A list of settings you want to delete.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-configid-list"
                                      }
                                    },
                                    "dhcp": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable DHCP.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "enable": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable/disable firewall rules.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "ipfilter": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                                      "optional": true
                                    },
                                    "log_level_in": {
                                      "type": "string",
                                      "description": "Log level for incoming traffic.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "log_level_out": {
                                      "type": "string",
                                      "description": "Log level for outgoing traffic.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "macfilter": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable/disable MAC address filter.",
                                      "optional": true,
                                      "defaultValue": 1
                                    },
                                    "ndp": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Enable NDP (Neighbor Discovery Protocol).",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "policy_in": {
                                      "type": "string",
                                      "description": "Input policy.",
                                      "optional": true,
                                      "enum": [
                                        "ACCEPT",
                                        "REJECT",
                                        "DROP"
                                      ]
                                    },
                                    "policy_out": {
                                      "type": "string",
                                      "description": "Output policy.",
                                      "optional": true,
                                      "enum": [
                                        "ACCEPT",
                                        "REJECT",
                                        "DROP"
                                      ]
                                    },
                                    "radv": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Allow sending Router Advertisement.",
                                      "optional": true
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-firewall-refs",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall/refs",
                          "slug": "nodes-node-qemu-vmid-firewall-refs",
                          "label": "refs",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-firewall-refs",
                              "operationId": "get-nodes-node-qemu-vmid-firewall-refs",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/refs",
                              "httpMethod": "GET",
                              "name": "refs",
                              "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Only list references of specified type.",
                                      "optional": true,
                                      "enum": [
                                        "alias",
                                        "ipset"
                                      ]
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "comment": {
                                          "type": "string",
                                          "optional": true
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "ref": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "alias",
                                            "ipset"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-firewall-rules",
                          "path": "/nodes/{node}/qemu/{vmid}/firewall/rules",
                          "slug": "nodes-node-qemu-vmid-firewall-rules",
                          "label": "rules",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-firewall-rules",
                              "operationId": "get-nodes-node-qemu-vmid-firewall-rules",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/rules",
                              "httpMethod": "GET",
                              "name": "get_rules",
                              "description": "List rules.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "pos": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{pos}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-qemu-vmid-firewall-rules",
                              "operationId": "post-nodes-node-qemu-vmid-firewall-rules",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/rules",
                              "httpMethod": "POST",
                              "name": "create_rule",
                              "description": "Create new rule.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Config.Network"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "action": {
                                      "type": "string",
                                      "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                      "optional": false,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 20,
                                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                      }
                                    },
                                    "comment": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Descriptive comment.",
                                      "optional": true
                                    },
                                    "dest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 512,
                                        "format": "pve-fw-addr-spec"
                                      }
                                    },
                                    "digest": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 64
                                      }
                                    },
                                    "dport": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-dport-spec"
                                      }
                                    },
                                    "enable": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Flag to enable/disable a rule.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "icmp-type": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-icmp-type-spec"
                                      }
                                    },
                                    "iface": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                      "optional": true,
                                      "constraints": {
                                        "minLength": 2,
                                        "maxLength": 20,
                                        "format": "pve-iface"
                                      }
                                    },
                                    "log": {
                                      "type": "string",
                                      "description": "Log level for firewall rule.",
                                      "optional": true,
                                      "enum": [
                                        "emerg",
                                        "alert",
                                        "crit",
                                        "err",
                                        "warning",
                                        "notice",
                                        "info",
                                        "debug",
                                        "nolog"
                                      ]
                                    },
                                    "macro": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Use predefined standard macro.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 128
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "pos": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Update rule at position <pos>.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "proto": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-protocol-spec"
                                      }
                                    },
                                    "source": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 512,
                                        "format": "pve-fw-addr-spec"
                                      }
                                    },
                                    "sport": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-fw-sport-spec"
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Rule type.",
                                      "optional": false,
                                      "enum": [
                                        "in",
                                        "out",
                                        "forward",
                                        "group"
                                      ]
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-qemu-vmid-firewall-rules-pos",
                              "path": "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}",
                              "slug": "nodes-node-qemu-vmid-firewall-rules-pos",
                              "label": "{pos}",
                              "endpoints": [
                                {
                                  "id": "delete-nodes-node-qemu-vmid-firewall-rules-pos",
                                  "operationId": "delete-nodes-node-qemu-vmid-firewall-rules-pos",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}",
                                  "httpMethod": "DELETE",
                                  "name": "delete_rule",
                                  "description": "Delete rule.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "get-nodes-node-qemu-vmid-firewall-rules-pos",
                                  "operationId": "get-nodes-node-qemu-vmid-firewall-rules-pos",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}",
                                  "httpMethod": "GET",
                                  "name": "get_rule",
                                  "description": "Get single rule data.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Audit"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "string"
                                          },
                                          "comment": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "dest": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "dport": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "enable": {
                                            "type": "integer",
                                            "optional": true
                                          },
                                          "icmp-type": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "iface": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "ipversion": {
                                            "type": "integer",
                                            "optional": true
                                          },
                                          "log": {
                                            "type": "string",
                                            "description": "Log level for firewall rule",
                                            "optional": true,
                                            "enum": [
                                              "emerg",
                                              "alert",
                                              "crit",
                                              "err",
                                              "warning",
                                              "notice",
                                              "info",
                                              "debug",
                                              "nolog"
                                            ]
                                          },
                                          "macro": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "pos": {
                                            "type": "integer"
                                          },
                                          "proto": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "source": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "sport": {
                                            "type": "string",
                                            "optional": true
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-nodes-node-qemu-vmid-firewall-rules-pos",
                                  "operationId": "put-nodes-node-qemu-vmid-firewall-rules-pos",
                                  "path": "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}",
                                  "httpMethod": "PUT",
                                  "name": "update_rule",
                                  "description": "Modify rule data.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Config.Network"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "action": {
                                          "type": "string",
                                          "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                                          }
                                        },
                                        "comment": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Descriptive comment.",
                                          "optional": true
                                        },
                                        "delete": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "A list of settings you want to delete.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-configid-list"
                                          }
                                        },
                                        "dest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 512,
                                            "format": "pve-fw-addr-spec"
                                          }
                                        },
                                        "digest": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 64
                                          }
                                        },
                                        "dport": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-dport-spec"
                                          }
                                        },
                                        "enable": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Flag to enable/disable a rule.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "icmp-type": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-icmp-type-spec"
                                          }
                                        },
                                        "iface": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                                          "optional": true,
                                          "constraints": {
                                            "minLength": 2,
                                            "maxLength": 20,
                                            "format": "pve-iface"
                                          }
                                        },
                                        "log": {
                                          "type": "string",
                                          "description": "Log level for firewall rule.",
                                          "optional": true,
                                          "enum": [
                                            "emerg",
                                            "alert",
                                            "crit",
                                            "err",
                                            "warning",
                                            "notice",
                                            "info",
                                            "debug",
                                            "nolog"
                                          ]
                                        },
                                        "macro": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Use predefined standard macro.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 128
                                          }
                                        },
                                        "moveto": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "pos": {
                                          "type": "integer",
                                          "typetext": "<integer> (0 - N)",
                                          "description": "Update rule at position <pos>.",
                                          "optional": true,
                                          "constraints": {
                                            "minimum": 0
                                          }
                                        },
                                        "proto": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-protocol-spec"
                                          }
                                        },
                                        "source": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                                          "optional": true,
                                          "constraints": {
                                            "maxLength": 512,
                                            "format": "pve-fw-addr-spec"
                                          }
                                        },
                                        "sport": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                                          "optional": true,
                                          "constraints": {
                                            "format": "pve-fw-sport-spec"
                                          }
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Rule type.",
                                          "optional": true,
                                          "enum": [
                                            "in",
                                            "out",
                                            "forward",
                                            "group"
                                          ]
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-qemu-vmid-migrate",
                      "path": "/nodes/{node}/qemu/{vmid}/migrate",
                      "slug": "nodes-node-qemu-vmid-migrate",
                      "label": "migrate",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-migrate",
                          "operationId": "get-nodes-node-qemu-vmid-migrate",
                          "path": "/nodes/{node}/qemu/{vmid}/migrate",
                          "httpMethod": "GET",
                          "name": "migrate_vm_precondition",
                          "description": "Get preconditions for migration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "target": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "allowed_nodes": {
                                    "type": "array",
                                    "description": "List of nodes allowed for migration.",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "description": "An allowed node"
                                    }
                                  },
                                  "dependent-ha-resources": {
                                    "type": "array",
                                    "description": "HA resources, which will be migrated to the same target node as the VM, because these are in positive affinity with the VM.",
                                    "optional": true,
                                    "items": {
                                      "type": "string",
                                      "description": "The '<ty>:<id>' resource IDs of a HA resource with a positive affinity rule to this VM."
                                    }
                                  },
                                  "has-dbus-vmstate": {
                                    "type": "boolean",
                                    "description": "Whether the VM host supports migrating additional VM state, such as conntrack entries."
                                  },
                                  "local_disks": {
                                    "type": "array",
                                    "description": "List local disks including CD-Rom, unused and not referenced disks",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "cdrom": {
                                          "type": "boolean",
                                          "description": "True if the disk is a cdrom."
                                        },
                                        "is_unused": {
                                          "type": "boolean",
                                          "description": "True if the disk is unused."
                                        },
                                        "size": {
                                          "type": "integer",
                                          "description": "The size of the disk in bytes."
                                        },
                                        "volid": {
                                          "type": "string",
                                          "description": "The volid of the disk."
                                        }
                                      }
                                    }
                                  },
                                  "local_resources": {
                                    "type": "array",
                                    "description": "List local resources (e.g. pci, usb) that block migration.",
                                    "items": {
                                      "type": "string",
                                      "description": "A local resource"
                                    }
                                  },
                                  "mapped-resource-info": {
                                    "type": "object",
                                    "description": "Object of mapped resources with additional information such if they're live migratable."
                                  },
                                  "mapped-resources": {
                                    "type": "array",
                                    "description": "List of mapped resources e.g. pci, usb. Deprecated, use 'mapped-resource-info' instead.",
                                    "items": {
                                      "type": "string",
                                      "description": "A mapped resource"
                                    }
                                  },
                                  "not_allowed_nodes": {
                                    "type": "object",
                                    "description": "List of not allowed nodes with additional information.",
                                    "optional": true,
                                    "properties": {
                                      "blocking-ha-resources": {
                                        "type": "array",
                                        "description": "HA resources, which are blocking the VM from being migrated to the node.",
                                        "optional": true,
                                        "items": {
                                          "type": "object",
                                          "description": "A blocking HA resource",
                                          "properties": {
                                            "cause": {
                                              "type": "string",
                                              "description": "The reason why the HA resource is blocking the migration.",
                                              "enum": [
                                                "resource-affinity"
                                              ]
                                            },
                                            "sid": {
                                              "type": "string",
                                              "description": "The blocking HA resource id"
                                            }
                                          }
                                        }
                                      },
                                      "unavailable_storages": {
                                        "type": "array",
                                        "description": "A list of not available storages.",
                                        "optional": true,
                                        "items": {
                                          "type": "string",
                                          "description": "A storage"
                                        }
                                      }
                                    }
                                  },
                                  "running": {
                                    "type": "boolean",
                                    "description": "Determines if the VM is running."
                                  }
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-qemu-vmid-migrate",
                          "operationId": "post-nodes-node-qemu-vmid-migrate",
                          "path": "/nodes/{node}/qemu/{vmid}/migrate",
                          "httpMethod": "POST",
                          "name": "migrate_vm",
                          "description": "Migrate virtual machine. Creates a new migration task.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "migrate limit from datacenter or storage config"
                                },
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Allow to migrate VMs which use local devices. Only root may use this option.",
                                  "optional": true
                                },
                                "migration_network": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "CIDR of the (sub) network that is used for migration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "CIDR"
                                  }
                                },
                                "migration_type": {
                                  "type": "string",
                                  "description": "Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.",
                                  "optional": true,
                                  "enum": [
                                    "secure",
                                    "insecure"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "online": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use online/live migration if VM is running. Ignored if VM is stopped.",
                                  "optional": true
                                },
                                "target": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Target node.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "targetstorage": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "storage-pair-list"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "with-conntrack-state": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Whether to migrate conntrack entries for running VMs.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "with-local-disks": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Enable live storage migration for local disk",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-monitor",
                      "path": "/nodes/{node}/qemu/{vmid}/monitor",
                      "slug": "nodes-node-qemu-vmid-monitor",
                      "label": "monitor",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-monitor",
                          "operationId": "post-nodes-node-qemu-vmid-monitor",
                          "path": "/nodes/{node}/qemu/{vmid}/monitor",
                          "httpMethod": "POST",
                          "name": "monitor",
                          "description": "Execute QEMU monitor commands.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "The following commands do not require any additional privilege: ?, help, info\n\nThe following commands require 'Sys.Modify': announce_self, backup_cancel, balloon, block_job_cancel, block_job_complete, block_job_pause, block_job_resume, block_job_set_speed, block_resize, block_set_io_throttle, boot_set, c, calc_dirty_rate, cancel_vcpu_dirty_limit, chardev-send-break, closefd, commit, cont, cpu, delvm, eject, exit_preconfig, expire_password, getfd, gpa2hpa, gpa2hva, gva2gpa, i, loadvm, log, migrate_cancel, migrate_continue, migrate_pause, migrate_set_capability, migrate_set_parameter, migrate_start_postcopy, mouse_button, mouse_move, mouse_set, one-insn-per-tb, p, print, q, qemu-io, qom-get, qom-list, quit, replay_break, replay_delete_break, replay_seek, ringbuf_read, ringbuf_write, s, savevm, sendkey, set_link, set_password, set_vcpu_dirty_limit, snapshot_blkdev_internal, snapshot_delete_blkdev_internal, stop, stopcapture, sum, sync-profile, system_powerdown, system_reset, system_wakeup, trace-event, x, x_colo_lost_heartbeat, xp\n\nThe following commands are root-only: backup, block_stream, change, chardev-add, chardev-change, chardev-remove, client_migrate_info, device_add, device_del, drive_add, drive_backup, drive_del, drive_mirror, dump-guest-memory, dumpdtb, gdbserver, hostfwd_add, hostfwd_remove, logfile, mce, memsave, migrate, migrate_incoming, migrate_recover, nbd_server_add, nbd_server_remove, nbd_server_start, nbd_server_stop, netdev_add, netdev_del, nmi, o, object_add, object_del, pcie_aer_inject_error, pmemsave, qom-set, savevm-end, savevm-start, screendump, snapshot_blkdev, watchdog_action, wavcapture, xen-event-inject, xen-event-list\n",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "Sys.Audit",
                                      "Sys.Modify"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "command": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The monitor command."
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-move-disk",
                      "path": "/nodes/{node}/qemu/{vmid}/move_disk",
                      "slug": "nodes-node-qemu-vmid-move-disk",
                      "label": "move_disk",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-move-disk",
                          "operationId": "post-nodes-node-qemu-vmid-move-disk",
                          "path": "/nodes/{node}/qemu/{vmid}/move_disk",
                          "httpMethod": "POST",
                          "name": "move_vm_disk",
                          "description": "Move volume to different storage or to a different VM.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Config.Disk' permissions on /vms/{vmid}, and 'Datastore.AllocateSpace' permissions on the storage. To move a disk to another VM, you need the permissions on the target VM as well.",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "move limit from datacenter or storage config"
                                },
                                "delete": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Delete the original disk after successful copy. By default the original disk is kept as unused disk.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1\"\n\t\t    .\" digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "disk": {
                                  "type": "string",
                                  "description": "The disk you want to move.",
                                  "enum": [
                                    "ide0",
                                    "ide1",
                                    "ide2",
                                    "ide3",
                                    "scsi0",
                                    "scsi1",
                                    "scsi2",
                                    "scsi3",
                                    "scsi4",
                                    "scsi5",
                                    "scsi6",
                                    "scsi7",
                                    "scsi8",
                                    "scsi9",
                                    "scsi10",
                                    "scsi11",
                                    "scsi12",
                                    "scsi13",
                                    "scsi14",
                                    "scsi15",
                                    "scsi16",
                                    "scsi17",
                                    "scsi18",
                                    "scsi19",
                                    "scsi20",
                                    "scsi21",
                                    "scsi22",
                                    "scsi23",
                                    "scsi24",
                                    "scsi25",
                                    "scsi26",
                                    "scsi27",
                                    "scsi28",
                                    "scsi29",
                                    "scsi30",
                                    "virtio0",
                                    "virtio1",
                                    "virtio2",
                                    "virtio3",
                                    "virtio4",
                                    "virtio5",
                                    "virtio6",
                                    "virtio7",
                                    "virtio8",
                                    "virtio9",
                                    "virtio10",
                                    "virtio11",
                                    "virtio12",
                                    "virtio13",
                                    "virtio14",
                                    "virtio15",
                                    "sata0",
                                    "sata1",
                                    "sata2",
                                    "sata3",
                                    "sata4",
                                    "sata5",
                                    "efidisk0",
                                    "tpmstate0",
                                    "unused0",
                                    "unused1",
                                    "unused2",
                                    "unused3",
                                    "unused4",
                                    "unused5",
                                    "unused6",
                                    "unused7",
                                    "unused8",
                                    "unused9",
                                    "unused10",
                                    "unused11",
                                    "unused12",
                                    "unused13",
                                    "unused14",
                                    "unused15",
                                    "unused16",
                                    "unused17",
                                    "unused18",
                                    "unused19",
                                    "unused20",
                                    "unused21",
                                    "unused22",
                                    "unused23",
                                    "unused24",
                                    "unused25",
                                    "unused26",
                                    "unused27",
                                    "unused28",
                                    "unused29",
                                    "unused30",
                                    "unused31",
                                    "unused32",
                                    "unused33",
                                    "unused34",
                                    "unused35",
                                    "unused36",
                                    "unused37",
                                    "unused38",
                                    "unused39",
                                    "unused40",
                                    "unused41",
                                    "unused42",
                                    "unused43",
                                    "unused44",
                                    "unused45",
                                    "unused46",
                                    "unused47",
                                    "unused48",
                                    "unused49",
                                    "unused50",
                                    "unused51",
                                    "unused52",
                                    "unused53",
                                    "unused54",
                                    "unused55",
                                    "unused56",
                                    "unused57",
                                    "unused58",
                                    "unused59",
                                    "unused60",
                                    "unused61",
                                    "unused62",
                                    "unused63",
                                    "unused64",
                                    "unused65",
                                    "unused66",
                                    "unused67",
                                    "unused68",
                                    "unused69",
                                    "unused70",
                                    "unused71",
                                    "unused72",
                                    "unused73",
                                    "unused74",
                                    "unused75",
                                    "unused76",
                                    "unused77",
                                    "unused78",
                                    "unused79",
                                    "unused80",
                                    "unused81",
                                    "unused82",
                                    "unused83",
                                    "unused84",
                                    "unused85",
                                    "unused86",
                                    "unused87",
                                    "unused88",
                                    "unused89",
                                    "unused90",
                                    "unused91",
                                    "unused92",
                                    "unused93",
                                    "unused94",
                                    "unused95",
                                    "unused96",
                                    "unused97",
                                    "unused98",
                                    "unused99",
                                    "unused100",
                                    "unused101",
                                    "unused102",
                                    "unused103",
                                    "unused104",
                                    "unused105",
                                    "unused106",
                                    "unused107",
                                    "unused108",
                                    "unused109",
                                    "unused110",
                                    "unused111",
                                    "unused112",
                                    "unused113",
                                    "unused114",
                                    "unused115",
                                    "unused116",
                                    "unused117",
                                    "unused118",
                                    "unused119",
                                    "unused120",
                                    "unused121",
                                    "unused122",
                                    "unused123",
                                    "unused124",
                                    "unused125",
                                    "unused126",
                                    "unused127",
                                    "unused128",
                                    "unused129",
                                    "unused130",
                                    "unused131",
                                    "unused132",
                                    "unused133",
                                    "unused134",
                                    "unused135",
                                    "unused136",
                                    "unused137",
                                    "unused138",
                                    "unused139",
                                    "unused140",
                                    "unused141",
                                    "unused142",
                                    "unused143",
                                    "unused144",
                                    "unused145",
                                    "unused146",
                                    "unused147",
                                    "unused148",
                                    "unused149",
                                    "unused150",
                                    "unused151",
                                    "unused152",
                                    "unused153",
                                    "unused154",
                                    "unused155",
                                    "unused156",
                                    "unused157",
                                    "unused158",
                                    "unused159",
                                    "unused160",
                                    "unused161",
                                    "unused162",
                                    "unused163",
                                    "unused164",
                                    "unused165",
                                    "unused166",
                                    "unused167",
                                    "unused168",
                                    "unused169",
                                    "unused170",
                                    "unused171",
                                    "unused172",
                                    "unused173",
                                    "unused174",
                                    "unused175",
                                    "unused176",
                                    "unused177",
                                    "unused178",
                                    "unused179",
                                    "unused180",
                                    "unused181",
                                    "unused182",
                                    "unused183",
                                    "unused184",
                                    "unused185",
                                    "unused186",
                                    "unused187",
                                    "unused188",
                                    "unused189",
                                    "unused190",
                                    "unused191",
                                    "unused192",
                                    "unused193",
                                    "unused194",
                                    "unused195",
                                    "unused196",
                                    "unused197",
                                    "unused198",
                                    "unused199",
                                    "unused200",
                                    "unused201",
                                    "unused202",
                                    "unused203",
                                    "unused204",
                                    "unused205",
                                    "unused206",
                                    "unused207",
                                    "unused208",
                                    "unused209",
                                    "unused210",
                                    "unused211",
                                    "unused212",
                                    "unused213",
                                    "unused214",
                                    "unused215",
                                    "unused216",
                                    "unused217",
                                    "unused218",
                                    "unused219",
                                    "unused220",
                                    "unused221",
                                    "unused222",
                                    "unused223",
                                    "unused224",
                                    "unused225",
                                    "unused226",
                                    "unused227",
                                    "unused228",
                                    "unused229",
                                    "unused230",
                                    "unused231",
                                    "unused232",
                                    "unused233",
                                    "unused234",
                                    "unused235",
                                    "unused236",
                                    "unused237",
                                    "unused238",
                                    "unused239",
                                    "unused240",
                                    "unused241",
                                    "unused242",
                                    "unused243",
                                    "unused244",
                                    "unused245",
                                    "unused246",
                                    "unused247",
                                    "unused248",
                                    "unused249",
                                    "unused250",
                                    "unused251",
                                    "unused252",
                                    "unused253",
                                    "unused254",
                                    "unused255"
                                  ]
                                },
                                "format": {
                                  "type": "string",
                                  "description": "Target Format.",
                                  "optional": true,
                                  "enum": [
                                    "raw",
                                    "qcow2",
                                    "vmdk"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "Target storage.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "target-digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if the current config file of the target VM has a\"\n\t\t    .\" different SHA1 digest. This can be used to detect concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "target-disk": {
                                  "type": "string",
                                  "description": "The config key the disk will be moved to on the target VM (for example, ide0 or scsi1). Default is the source disk key.",
                                  "optional": true,
                                  "enum": [
                                    "ide0",
                                    "ide1",
                                    "ide2",
                                    "ide3",
                                    "scsi0",
                                    "scsi1",
                                    "scsi2",
                                    "scsi3",
                                    "scsi4",
                                    "scsi5",
                                    "scsi6",
                                    "scsi7",
                                    "scsi8",
                                    "scsi9",
                                    "scsi10",
                                    "scsi11",
                                    "scsi12",
                                    "scsi13",
                                    "scsi14",
                                    "scsi15",
                                    "scsi16",
                                    "scsi17",
                                    "scsi18",
                                    "scsi19",
                                    "scsi20",
                                    "scsi21",
                                    "scsi22",
                                    "scsi23",
                                    "scsi24",
                                    "scsi25",
                                    "scsi26",
                                    "scsi27",
                                    "scsi28",
                                    "scsi29",
                                    "scsi30",
                                    "virtio0",
                                    "virtio1",
                                    "virtio2",
                                    "virtio3",
                                    "virtio4",
                                    "virtio5",
                                    "virtio6",
                                    "virtio7",
                                    "virtio8",
                                    "virtio9",
                                    "virtio10",
                                    "virtio11",
                                    "virtio12",
                                    "virtio13",
                                    "virtio14",
                                    "virtio15",
                                    "sata0",
                                    "sata1",
                                    "sata2",
                                    "sata3",
                                    "sata4",
                                    "sata5",
                                    "efidisk0",
                                    "tpmstate0",
                                    "unused0",
                                    "unused1",
                                    "unused2",
                                    "unused3",
                                    "unused4",
                                    "unused5",
                                    "unused6",
                                    "unused7",
                                    "unused8",
                                    "unused9",
                                    "unused10",
                                    "unused11",
                                    "unused12",
                                    "unused13",
                                    "unused14",
                                    "unused15",
                                    "unused16",
                                    "unused17",
                                    "unused18",
                                    "unused19",
                                    "unused20",
                                    "unused21",
                                    "unused22",
                                    "unused23",
                                    "unused24",
                                    "unused25",
                                    "unused26",
                                    "unused27",
                                    "unused28",
                                    "unused29",
                                    "unused30",
                                    "unused31",
                                    "unused32",
                                    "unused33",
                                    "unused34",
                                    "unused35",
                                    "unused36",
                                    "unused37",
                                    "unused38",
                                    "unused39",
                                    "unused40",
                                    "unused41",
                                    "unused42",
                                    "unused43",
                                    "unused44",
                                    "unused45",
                                    "unused46",
                                    "unused47",
                                    "unused48",
                                    "unused49",
                                    "unused50",
                                    "unused51",
                                    "unused52",
                                    "unused53",
                                    "unused54",
                                    "unused55",
                                    "unused56",
                                    "unused57",
                                    "unused58",
                                    "unused59",
                                    "unused60",
                                    "unused61",
                                    "unused62",
                                    "unused63",
                                    "unused64",
                                    "unused65",
                                    "unused66",
                                    "unused67",
                                    "unused68",
                                    "unused69",
                                    "unused70",
                                    "unused71",
                                    "unused72",
                                    "unused73",
                                    "unused74",
                                    "unused75",
                                    "unused76",
                                    "unused77",
                                    "unused78",
                                    "unused79",
                                    "unused80",
                                    "unused81",
                                    "unused82",
                                    "unused83",
                                    "unused84",
                                    "unused85",
                                    "unused86",
                                    "unused87",
                                    "unused88",
                                    "unused89",
                                    "unused90",
                                    "unused91",
                                    "unused92",
                                    "unused93",
                                    "unused94",
                                    "unused95",
                                    "unused96",
                                    "unused97",
                                    "unused98",
                                    "unused99",
                                    "unused100",
                                    "unused101",
                                    "unused102",
                                    "unused103",
                                    "unused104",
                                    "unused105",
                                    "unused106",
                                    "unused107",
                                    "unused108",
                                    "unused109",
                                    "unused110",
                                    "unused111",
                                    "unused112",
                                    "unused113",
                                    "unused114",
                                    "unused115",
                                    "unused116",
                                    "unused117",
                                    "unused118",
                                    "unused119",
                                    "unused120",
                                    "unused121",
                                    "unused122",
                                    "unused123",
                                    "unused124",
                                    "unused125",
                                    "unused126",
                                    "unused127",
                                    "unused128",
                                    "unused129",
                                    "unused130",
                                    "unused131",
                                    "unused132",
                                    "unused133",
                                    "unused134",
                                    "unused135",
                                    "unused136",
                                    "unused137",
                                    "unused138",
                                    "unused139",
                                    "unused140",
                                    "unused141",
                                    "unused142",
                                    "unused143",
                                    "unused144",
                                    "unused145",
                                    "unused146",
                                    "unused147",
                                    "unused148",
                                    "unused149",
                                    "unused150",
                                    "unused151",
                                    "unused152",
                                    "unused153",
                                    "unused154",
                                    "unused155",
                                    "unused156",
                                    "unused157",
                                    "unused158",
                                    "unused159",
                                    "unused160",
                                    "unused161",
                                    "unused162",
                                    "unused163",
                                    "unused164",
                                    "unused165",
                                    "unused166",
                                    "unused167",
                                    "unused168",
                                    "unused169",
                                    "unused170",
                                    "unused171",
                                    "unused172",
                                    "unused173",
                                    "unused174",
                                    "unused175",
                                    "unused176",
                                    "unused177",
                                    "unused178",
                                    "unused179",
                                    "unused180",
                                    "unused181",
                                    "unused182",
                                    "unused183",
                                    "unused184",
                                    "unused185",
                                    "unused186",
                                    "unused187",
                                    "unused188",
                                    "unused189",
                                    "unused190",
                                    "unused191",
                                    "unused192",
                                    "unused193",
                                    "unused194",
                                    "unused195",
                                    "unused196",
                                    "unused197",
                                    "unused198",
                                    "unused199",
                                    "unused200",
                                    "unused201",
                                    "unused202",
                                    "unused203",
                                    "unused204",
                                    "unused205",
                                    "unused206",
                                    "unused207",
                                    "unused208",
                                    "unused209",
                                    "unused210",
                                    "unused211",
                                    "unused212",
                                    "unused213",
                                    "unused214",
                                    "unused215",
                                    "unused216",
                                    "unused217",
                                    "unused218",
                                    "unused219",
                                    "unused220",
                                    "unused221",
                                    "unused222",
                                    "unused223",
                                    "unused224",
                                    "unused225",
                                    "unused226",
                                    "unused227",
                                    "unused228",
                                    "unused229",
                                    "unused230",
                                    "unused231",
                                    "unused232",
                                    "unused233",
                                    "unused234",
                                    "unused235",
                                    "unused236",
                                    "unused237",
                                    "unused238",
                                    "unused239",
                                    "unused240",
                                    "unused241",
                                    "unused242",
                                    "unused243",
                                    "unused244",
                                    "unused245",
                                    "unused246",
                                    "unused247",
                                    "unused248",
                                    "unused249",
                                    "unused250",
                                    "unused251",
                                    "unused252",
                                    "unused253",
                                    "unused254",
                                    "unused255"
                                  ]
                                },
                                "target-vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-mtunnel",
                      "path": "/nodes/{node}/qemu/{vmid}/mtunnel",
                      "slug": "nodes-node-qemu-vmid-mtunnel",
                      "label": "mtunnel",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-mtunnel",
                          "operationId": "post-nodes-node-qemu-vmid-mtunnel",
                          "path": "/nodes/{node}/qemu/{vmid}/mtunnel",
                          "httpMethod": "POST",
                          "name": "mtunnel",
                          "description": "Migration tunnel endpoint - only for internal use by VM migration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Allocate' permissions on '/vms/{vmid}' and Sys.Incoming on '/'. Further permission checks happen during the actual migration.",
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/vms/{vmid}",
                                      [
                                        "VM.Allocate"
                                      ]
                                    ],
                                    [
                                      "perm",
                                      "/",
                                      [
                                        "Sys.Incoming"
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bridges": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "List of network bridges to check availability. Will be checked again for actually used bridges during migration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-bridge-id-list"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storages": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "List of storages to check permission and availability. Will be checked again for all actually used storages during migration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-id-list"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "properties": {
                                  "socket": {
                                    "type": "string"
                                  },
                                  "ticket": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-mtunnelwebsocket",
                      "path": "/nodes/{node}/qemu/{vmid}/mtunnelwebsocket",
                      "slug": "nodes-node-qemu-vmid-mtunnelwebsocket",
                      "label": "mtunnelwebsocket",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-mtunnelwebsocket",
                          "operationId": "get-nodes-node-qemu-vmid-mtunnelwebsocket",
                          "path": "/nodes/{node}/qemu/{vmid}/mtunnelwebsocket",
                          "httpMethod": "GET",
                          "name": "mtunnelwebsocket",
                          "description": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need to pass a ticket valid for the selected socket. Tickets can be created via the mtunnel API call, which will check permissions accordingly.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "socket": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "unix socket to forward to"
                                },
                                "ticket": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command"
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "socket": {
                                    "type": "string",
                                    "optional": true
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-pending",
                      "path": "/nodes/{node}/qemu/{vmid}/pending",
                      "slug": "nodes-node-qemu-vmid-pending",
                      "label": "pending",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-pending",
                          "operationId": "get-nodes-node-qemu-vmid-pending",
                          "path": "/nodes/{node}/qemu/{vmid}/pending",
                          "httpMethod": "GET",
                          "name": "vm_pending",
                          "description": "Get the virtual machine configuration with both current and pending values.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "delete": {
                                      "type": "integer",
                                      "description": "Indicates a pending delete request if present and not 0. The value 2 indicates a force-delete request.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0,
                                        "maximum": 2
                                      }
                                    },
                                    "key": {
                                      "type": "string",
                                      "description": "Configuration option name."
                                    },
                                    "pending": {
                                      "type": "string",
                                      "description": "Pending value.",
                                      "optional": true
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Current value.",
                                      "optional": true
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-remote-migrate",
                      "path": "/nodes/{node}/qemu/{vmid}/remote_migrate",
                      "slug": "nodes-node-qemu-vmid-remote-migrate",
                      "label": "remote_migrate",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-remote-migrate",
                          "operationId": "post-nodes-node-qemu-vmid-remote-migrate",
                          "path": "/nodes/{node}/qemu/{vmid}/remote_migrate",
                          "httpMethod": "POST",
                          "name": "remote_migrate_vm",
                          "description": "Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Migrate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "bwlimit": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Override I/O bandwidth limit (in KiB/s).",
                                  "optional": true,
                                  "defaultValue": "migrate limit from datacenter or storage config"
                                },
                                "delete": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Delete the original VM and related data after successful migration. By default the original VM is kept on the source cluster in a stopped state.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "online": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Use online/live migration if VM is running. Ignored if VM is stopped.",
                                  "optional": true
                                },
                                "target-bridge": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Mapping from source to target bridges. Providing only a single bridge ID maps all source bridges to that bridge. Providing the special value '1' will map each source bridge to itself.",
                                  "constraints": {
                                    "format": "bridge-pair-list"
                                  }
                                },
                                "target-endpoint": {
                                  "type": "string",
                                  "typetext": "apitoken=<PVEAPIToken=user@realm!token=SECRET> ,host=<ADDRESS> [,fingerprint=<FINGERPRINT>] [,port=<PORT>]",
                                  "description": "Remote target endpoint",
                                  "constraints": {
                                    "format": "proxmox-remote"
                                  }
                                },
                                "target-storage": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                                  "optional": false,
                                  "constraints": {
                                    "format": "storage-pair-list"
                                  }
                                },
                                "target-vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-resize",
                      "path": "/nodes/{node}/qemu/{vmid}/resize",
                      "slug": "nodes-node-qemu-vmid-resize",
                      "label": "resize",
                      "endpoints": [
                        {
                          "id": "put-nodes-node-qemu-vmid-resize",
                          "operationId": "put-nodes-node-qemu-vmid-resize",
                          "path": "/nodes/{node}/qemu/{vmid}/resize",
                          "httpMethod": "PUT",
                          "name": "resize_vm",
                          "description": "Extend volume size.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "digest": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                                  "optional": true,
                                  "constraints": {
                                    "maxLength": 40
                                  }
                                },
                                "disk": {
                                  "type": "string",
                                  "description": "The disk you want to resize.",
                                  "enum": [
                                    "ide0",
                                    "ide1",
                                    "ide2",
                                    "ide3",
                                    "scsi0",
                                    "scsi1",
                                    "scsi2",
                                    "scsi3",
                                    "scsi4",
                                    "scsi5",
                                    "scsi6",
                                    "scsi7",
                                    "scsi8",
                                    "scsi9",
                                    "scsi10",
                                    "scsi11",
                                    "scsi12",
                                    "scsi13",
                                    "scsi14",
                                    "scsi15",
                                    "scsi16",
                                    "scsi17",
                                    "scsi18",
                                    "scsi19",
                                    "scsi20",
                                    "scsi21",
                                    "scsi22",
                                    "scsi23",
                                    "scsi24",
                                    "scsi25",
                                    "scsi26",
                                    "scsi27",
                                    "scsi28",
                                    "scsi29",
                                    "scsi30",
                                    "virtio0",
                                    "virtio1",
                                    "virtio2",
                                    "virtio3",
                                    "virtio4",
                                    "virtio5",
                                    "virtio6",
                                    "virtio7",
                                    "virtio8",
                                    "virtio9",
                                    "virtio10",
                                    "virtio11",
                                    "virtio12",
                                    "virtio13",
                                    "virtio14",
                                    "virtio15",
                                    "sata0",
                                    "sata1",
                                    "sata2",
                                    "sata3",
                                    "sata4",
                                    "sata5",
                                    "efidisk0",
                                    "tpmstate0"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "size": {
                                  "type": "string",
                                  "description": "The new size. With the `+` sign the value is added to the actual size of the volume and without it, the value is taken as an absolute one. Shrinking disk size is not supported.",
                                  "constraints": {
                                    "pattern": "\\+?\\d+(\\.\\d+)?[KMGT]?"
                                  }
                                },
                                "skiplock": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Ignore locks - only root is allowed to use this option.",
                                  "optional": true
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-rrd",
                      "path": "/nodes/{node}/qemu/{vmid}/rrd",
                      "slug": "nodes-node-qemu-vmid-rrd",
                      "label": "rrd",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-rrd",
                          "operationId": "get-nodes-node-qemu-vmid-rrd",
                          "path": "/nodes/{node}/qemu/{vmid}/rrd",
                          "httpMethod": "GET",
                          "name": "rrd",
                          "description": "Read VM RRD statistics (returns PNG)",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cf": {
                                  "type": "string",
                                  "description": "The RRD consolidation function",
                                  "optional": true,
                                  "enum": [
                                    "AVERAGE",
                                    "MAX"
                                  ]
                                },
                                "ds": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The list of datasources you want to display.",
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "timeframe": {
                                  "type": "string",
                                  "description": "Specify the time frame you are interested in.",
                                  "enum": [
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-rrddata",
                      "path": "/nodes/{node}/qemu/{vmid}/rrddata",
                      "slug": "nodes-node-qemu-vmid-rrddata",
                      "label": "rrddata",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-rrddata",
                          "operationId": "get-nodes-node-qemu-vmid-rrddata",
                          "path": "/nodes/{node}/qemu/{vmid}/rrddata",
                          "httpMethod": "GET",
                          "name": "rrddata",
                          "description": "Read VM RRD statistics",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cf": {
                                  "type": "string",
                                  "description": "The RRD consolidation function",
                                  "optional": true,
                                  "enum": [
                                    "AVERAGE",
                                    "MAX"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "timeframe": {
                                  "type": "string",
                                  "description": "Specify the time frame you are interested in.",
                                  "enum": [
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-sendkey",
                      "path": "/nodes/{node}/qemu/{vmid}/sendkey",
                      "slug": "nodes-node-qemu-vmid-sendkey",
                      "label": "sendkey",
                      "endpoints": [
                        {
                          "id": "put-nodes-node-qemu-vmid-sendkey",
                          "operationId": "put-nodes-node-qemu-vmid-sendkey",
                          "path": "/nodes/{node}/qemu/{vmid}/sendkey",
                          "httpMethod": "PUT",
                          "name": "vm_sendkey",
                          "description": "Send key event to virtual machine.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The key (qemu monitor encoding)."
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "skiplock": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Ignore locks - only root is allowed to use this option.",
                                  "optional": true
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-snapshot",
                      "path": "/nodes/{node}/qemu/{vmid}/snapshot",
                      "slug": "nodes-node-qemu-vmid-snapshot",
                      "label": "snapshot",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-snapshot",
                          "operationId": "get-nodes-node-qemu-vmid-snapshot",
                          "path": "/nodes/{node}/qemu/{vmid}/snapshot",
                          "httpMethod": "GET",
                          "name": "snapshot_list",
                          "description": "List all snapshots.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "Snapshot description."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Snapshot identifier. Value 'current' identifies the current VM."
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Parent snapshot identifier.",
                                      "optional": true
                                    },
                                    "snaptime": {
                                      "type": "integer",
                                      "description": "Snapshot creation time",
                                      "optional": true,
                                      "metadata": {
                                        "renderer": "timestamp"
                                      }
                                    },
                                    "vmstate": {
                                      "type": "boolean",
                                      "description": "Snapshot includes RAM.",
                                      "optional": true
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{name}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-qemu-vmid-snapshot",
                          "operationId": "post-nodes-node-qemu-vmid-snapshot",
                          "path": "/nodes/{node}/qemu/{vmid}/snapshot",
                          "httpMethod": "POST",
                          "name": "snapshot",
                          "description": "Snapshot a VM.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Snapshot"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A textual description or comment.",
                                  "optional": true
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "snapname": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the snapshot.",
                                  "constraints": {
                                    "maxLength": 40,
                                    "format": "pve-configid"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vmstate": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Save the vmstate",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-qemu-vmid-snapshot-snapname",
                          "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}",
                          "slug": "nodes-node-qemu-vmid-snapshot-snapname",
                          "label": "{snapname}",
                          "endpoints": [
                            {
                              "id": "delete-nodes-node-qemu-vmid-snapshot-snapname",
                              "operationId": "delete-nodes-node-qemu-vmid-snapshot-snapname",
                              "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}",
                              "httpMethod": "DELETE",
                              "name": "delsnapshot",
                              "description": "Delete a VM snapshot.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Snapshot"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "force": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "For removal from config file, even if removing disk snapshots fails.",
                                      "optional": true
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "snapname": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The name of the snapshot.",
                                      "constraints": {
                                        "maxLength": 40,
                                        "format": "pve-configid"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "description": "the task ID.",
                                  "schema": {
                                    "type": "string",
                                    "description": "the task ID."
                                  }
                                }
                              ]
                            },
                            {
                              "id": "get-nodes-node-qemu-vmid-snapshot-snapname",
                              "operationId": "get-nodes-node-qemu-vmid-snapshot-snapname",
                              "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}",
                              "httpMethod": "GET",
                              "name": "snapshot_cmd_idx",
                              "description": "",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": false,
                                "permissions": {
                                  "all": [
                                    {
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "snapname": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The name of the snapshot.",
                                      "constraints": {
                                        "maxLength": 40,
                                        "format": "pve-configid"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{cmd}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": [
                            {
                              "id": "nodes-node-qemu-vmid-snapshot-snapname-config",
                              "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config",
                              "slug": "nodes-node-qemu-vmid-snapshot-snapname-config",
                              "label": "config",
                              "endpoints": [
                                {
                                  "id": "get-nodes-node-qemu-vmid-snapshot-snapname-config",
                                  "operationId": "get-nodes-node-qemu-vmid-snapshot-snapname-config",
                                  "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config",
                                  "httpMethod": "GET",
                                  "name": "get_snapshot_config",
                                  "description": "Get snapshot configuration",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": false,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Snapshot",
                                              "VM.Snapshot.Rollback",
                                              "VM.Audit"
                                            ],
                                            "any",
                                            1
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "snapname": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The name of the snapshot.",
                                          "constraints": {
                                            "maxLength": 40,
                                            "format": "pve-configid"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "object"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "id": "put-nodes-node-qemu-vmid-snapshot-snapname-config",
                                  "operationId": "put-nodes-node-qemu-vmid-snapshot-snapname-config",
                                  "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config",
                                  "httpMethod": "PUT",
                                  "name": "update_snapshot_config",
                                  "description": "Update snapshot metadata.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Snapshot"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "description": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "A textual description or comment.",
                                          "optional": true
                                        },
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "snapname": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The name of the snapshot.",
                                          "constraints": {
                                            "maxLength": 40,
                                            "format": "pve-configid"
                                          }
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "schema": {
                                        "type": "null"
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            },
                            {
                              "id": "nodes-node-qemu-vmid-snapshot-snapname-rollback",
                              "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback",
                              "slug": "nodes-node-qemu-vmid-snapshot-snapname-rollback",
                              "label": "rollback",
                              "endpoints": [
                                {
                                  "id": "post-nodes-node-qemu-vmid-snapshot-snapname-rollback",
                                  "operationId": "post-nodes-node-qemu-vmid-snapshot-snapname-rollback",
                                  "path": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback",
                                  "httpMethod": "POST",
                                  "name": "rollback",
                                  "description": "Rollback VM state to specified snapshot.",
                                  "security": {
                                    "allowToken": true,
                                    "requiresAuthentication": true,
                                    "permissions": {
                                      "all": [
                                        {
                                          "check": [
                                            "perm",
                                            "/vms/{vmid}",
                                            [
                                              "VM.Snapshot",
                                              "VM.Snapshot.Rollback"
                                            ],
                                            "any",
                                            1
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "features": {
                                    "proxy": false,
                                    "download": false,
                                    "upload": false
                                  },
                                  "request": {
                                    "schema": {
                                      "properties": {
                                        "node": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The cluster node name.",
                                          "constraints": {
                                            "format": "pve-node"
                                          }
                                        },
                                        "snapname": {
                                          "type": "string",
                                          "typetext": "<string>",
                                          "description": "The name of the snapshot.",
                                          "constraints": {
                                            "maxLength": 40,
                                            "format": "pve-configid"
                                          }
                                        },
                                        "start": {
                                          "type": "boolean",
                                          "typetext": "<boolean>",
                                          "description": "Whether the VM should get started after rolling back successfully. (Note: VMs will be automatically started if the snapshot includes RAM.)",
                                          "optional": true,
                                          "defaultValue": 0
                                        },
                                        "vmid": {
                                          "type": "integer",
                                          "typetext": "<integer> (100 - 999999999)",
                                          "description": "The (unique) ID of the VM.",
                                          "constraints": {
                                            "minimum": 100,
                                            "maximum": 999999999,
                                            "format": "pve-vmid"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "responses": [
                                    {
                                      "description": "the task ID.",
                                      "schema": {
                                        "type": "string",
                                        "description": "the task ID."
                                      }
                                    }
                                  ]
                                }
                              ],
                              "children": []
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-qemu-vmid-spiceproxy",
                      "path": "/nodes/{node}/qemu/{vmid}/spiceproxy",
                      "slug": "nodes-node-qemu-vmid-spiceproxy",
                      "label": "spiceproxy",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-spiceproxy",
                          "operationId": "post-nodes-node-qemu-vmid-spiceproxy",
                          "path": "/nodes/{node}/qemu/{vmid}/spiceproxy",
                          "httpMethod": "POST",
                          "name": "spiceproxy",
                          "description": "Returns a SPICE configuration to connect to the VM.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "proxy": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI).",
                                  "optional": true,
                                  "constraints": {
                                    "format": "address"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                              "schema": {
                                "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "proxy": {
                                    "type": "string"
                                  },
                                  "tls-port": {
                                    "type": "integer"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": true
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-status",
                      "path": "/nodes/{node}/qemu/{vmid}/status",
                      "slug": "nodes-node-qemu-vmid-status",
                      "label": "status",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-status",
                          "operationId": "get-nodes-node-qemu-vmid-status",
                          "path": "/nodes/{node}/qemu/{vmid}/status",
                          "httpMethod": "GET",
                          "name": "vmcmdidx",
                          "description": "Directory index",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "subdir": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{subdir}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-qemu-vmid-status-current",
                          "path": "/nodes/{node}/qemu/{vmid}/status/current",
                          "slug": "nodes-node-qemu-vmid-status-current",
                          "label": "current",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-qemu-vmid-status-current",
                              "operationId": "get-nodes-node-qemu-vmid-status-current",
                              "path": "/nodes/{node}/qemu/{vmid}/status/current",
                              "httpMethod": "GET",
                              "name": "vm_status",
                              "description": "Get virtual machine status.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.Audit"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "agent": {
                                        "type": "boolean",
                                        "description": "QEMU Guest Agent is enabled in config.",
                                        "optional": true
                                      },
                                      "clipboard": {
                                        "type": "string",
                                        "description": "Enable a specific clipboard. If not set, depending on the display type the SPICE one will be added.",
                                        "optional": true,
                                        "enum": [
                                          "vnc"
                                        ]
                                      },
                                      "cpu": {
                                        "type": "number",
                                        "description": "Current CPU usage.",
                                        "optional": true
                                      },
                                      "cpus": {
                                        "type": "number",
                                        "description": "Maximum usable CPUs.",
                                        "optional": true
                                      },
                                      "diskread": {
                                        "type": "integer",
                                        "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "diskwrite": {
                                        "type": "integer",
                                        "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "ha": {
                                        "type": "object",
                                        "description": "HA manager service status."
                                      },
                                      "lock": {
                                        "type": "string",
                                        "description": "The current config lock, if any.",
                                        "optional": true
                                      },
                                      "maxdisk": {
                                        "type": "integer",
                                        "description": "Root disk size in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "maxmem": {
                                        "type": "integer",
                                        "description": "Maximum memory in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "mem": {
                                        "type": "integer",
                                        "description": "Currently used memory in bytes.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "memhost": {
                                        "type": "integer",
                                        "description": "Current memory usage on the host.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "VM (host)name.",
                                        "optional": true
                                      },
                                      "netin": {
                                        "type": "integer",
                                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "netout": {
                                        "type": "integer",
                                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "pid": {
                                        "type": "integer",
                                        "description": "PID of the QEMU process, if the VM is running.",
                                        "optional": true
                                      },
                                      "pressurecpufull": {
                                        "type": "number",
                                        "description": "CPU Full pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressurecpusome": {
                                        "type": "number",
                                        "description": "CPU Some pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressureiofull": {
                                        "type": "number",
                                        "description": "IO Full pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressureiosome": {
                                        "type": "number",
                                        "description": "IO Some pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressurememoryfull": {
                                        "type": "number",
                                        "description": "Memory Full pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "pressurememorysome": {
                                        "type": "number",
                                        "description": "Memory Some pressure stall average over the last 10 seconds.",
                                        "optional": true
                                      },
                                      "qmpstatus": {
                                        "type": "string",
                                        "description": "VM run state from the 'query-status' QMP monitor command.",
                                        "optional": true
                                      },
                                      "running-machine": {
                                        "type": "string",
                                        "description": "The currently running machine type (if running).",
                                        "optional": true
                                      },
                                      "running-qemu": {
                                        "type": "string",
                                        "description": "The QEMU version the VM is currently using (if running).",
                                        "optional": true
                                      },
                                      "serial": {
                                        "type": "boolean",
                                        "description": "Guest has serial device configured.",
                                        "optional": true
                                      },
                                      "spice": {
                                        "type": "boolean",
                                        "description": "QEMU VGA configuration supports spice.",
                                        "optional": true
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "QEMU process status.",
                                        "enum": [
                                          "stopped",
                                          "running"
                                        ]
                                      },
                                      "tags": {
                                        "type": "string",
                                        "description": "The current configured tags, if any",
                                        "optional": true
                                      },
                                      "template": {
                                        "type": "boolean",
                                        "description": "Determines if the guest is a template.",
                                        "optional": true,
                                        "defaultValue": 0
                                      },
                                      "uptime": {
                                        "type": "integer",
                                        "description": "Uptime in seconds.",
                                        "optional": true,
                                        "metadata": {
                                          "renderer": "duration"
                                        }
                                      },
                                      "vmid": {
                                        "type": "integer",
                                        "description": "The (unique) ID of the VM.",
                                        "constraints": {
                                          "minimum": 100,
                                          "maximum": 999999999,
                                          "format": "pve-vmid"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-reboot",
                          "path": "/nodes/{node}/qemu/{vmid}/status/reboot",
                          "slug": "nodes-node-qemu-vmid-status-reboot",
                          "label": "reboot",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-reboot",
                              "operationId": "post-nodes-node-qemu-vmid-status-reboot",
                              "path": "/nodes/{node}/qemu/{vmid}/status/reboot",
                              "httpMethod": "POST",
                              "name": "vm_reboot",
                              "description": "Reboot the VM by shutting it down, and starting it again. Applies pending changes.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Wait maximal timeout seconds for the shutdown.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-reset",
                          "path": "/nodes/{node}/qemu/{vmid}/status/reset",
                          "slug": "nodes-node-qemu-vmid-status-reset",
                          "label": "reset",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-reset",
                              "operationId": "post-nodes-node-qemu-vmid-status-reset",
                              "path": "/nodes/{node}/qemu/{vmid}/status/reset",
                              "httpMethod": "POST",
                              "name": "vm_reset",
                              "description": "Reset virtual machine.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-resume",
                          "path": "/nodes/{node}/qemu/{vmid}/status/resume",
                          "slug": "nodes-node-qemu-vmid-status-resume",
                          "label": "resume",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-resume",
                              "operationId": "post-nodes-node-qemu-vmid-status-resume",
                              "path": "/nodes/{node}/qemu/{vmid}/status/resume",
                              "httpMethod": "POST",
                              "name": "vm_resume",
                              "description": "Resume virtual machine.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "nocheck": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "optional": true
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-shutdown",
                          "path": "/nodes/{node}/qemu/{vmid}/status/shutdown",
                          "slug": "nodes-node-qemu-vmid-status-shutdown",
                          "label": "shutdown",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-shutdown",
                              "operationId": "post-nodes-node-qemu-vmid-status-shutdown",
                              "path": "/nodes/{node}/qemu/{vmid}/status/shutdown",
                              "httpMethod": "POST",
                              "name": "vm_shutdown",
                              "description": "Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "forceStop": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Make sure the VM stops.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "keepActive": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Do not deactivate storage volumes.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Wait maximal timeout seconds.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-start",
                          "path": "/nodes/{node}/qemu/{vmid}/status/start",
                          "slug": "nodes-node-qemu-vmid-status-start",
                          "label": "start",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-start",
                              "operationId": "post-nodes-node-qemu-vmid-status-start",
                              "path": "/nodes/{node}/qemu/{vmid}/status/start",
                              "httpMethod": "POST",
                              "name": "vm_start",
                              "description": "Start virtual machine.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "force-cpu": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Override QEMU's -cpu argument with the given string.",
                                      "optional": true
                                    },
                                    "machine": {
                                      "type": "string",
                                      "typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                                      "description": "Specify the QEMU machine.",
                                      "optional": true
                                    },
                                    "migratedfrom": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "migration_network": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "CIDR of the (sub) network that is used for migration.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "CIDR"
                                      }
                                    },
                                    "migration_type": {
                                      "type": "string",
                                      "description": "Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.",
                                      "optional": true,
                                      "enum": [
                                        "secure",
                                        "insecure"
                                      ]
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "stateuri": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Some command save/restore state from this location.",
                                      "optional": true,
                                      "constraints": {
                                        "maxLength": 128
                                      }
                                    },
                                    "targetstorage": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "storage-pair-list"
                                      }
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Wait maximal timeout seconds.",
                                      "optional": true,
                                      "defaultValue": "max(30, vm memory in GiB)",
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    },
                                    "with-conntrack-state": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Whether to migrate conntrack entries for running VMs.",
                                      "optional": true,
                                      "defaultValue": 0
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-stop",
                          "path": "/nodes/{node}/qemu/{vmid}/status/stop",
                          "slug": "nodes-node-qemu-vmid-status-stop",
                          "label": "stop",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-stop",
                              "operationId": "post-nodes-node-qemu-vmid-status-stop",
                              "path": "/nodes/{node}/qemu/{vmid}/status/stop",
                              "httpMethod": "POST",
                              "name": "vm_stop",
                              "description": "Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "keepActive": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Do not deactivate storage volumes.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "migratedfrom": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "overrule-shutdown": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Try to abort active 'qmshutdown' tasks before stopping.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "typetext": "<integer> (0 - N)",
                                      "description": "Wait maximal timeout seconds.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-qemu-vmid-status-suspend",
                          "path": "/nodes/{node}/qemu/{vmid}/status/suspend",
                          "slug": "nodes-node-qemu-vmid-status-suspend",
                          "label": "suspend",
                          "endpoints": [
                            {
                              "id": "post-nodes-node-qemu-vmid-status-suspend",
                              "operationId": "post-nodes-node-qemu-vmid-status-suspend",
                              "path": "/nodes/{node}/qemu/{vmid}/status/suspend",
                              "httpMethod": "POST",
                              "name": "vm_suspend",
                              "description": "Suspend virtual machine.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "You need 'VM.PowerMgmt' on /vms/{vmid}, and if you have set 'todisk', you need also 'VM.Config.Disk' on /vms/{vmid} and 'Datastore.AllocateSpace' on the storage for the vmstate.",
                                      "check": [
                                        "perm",
                                        "/vms/{vmid}",
                                        [
                                          "VM.PowerMgmt"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "skiplock": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Ignore locks - only root is allowed to use this option.",
                                      "optional": true
                                    },
                                    "statestorage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage for the VM state",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID",
                                        "requires": [
                                          "todisk"
                                        ]
                                      }
                                    },
                                    "todisk": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "If set, suspends the VM to disk. Will be resumed on next VM start.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "typetext": "<integer> (100 - 999999999)",
                                      "description": "The (unique) ID of the VM.",
                                      "constraints": {
                                        "minimum": 100,
                                        "maximum": 999999999,
                                        "format": "pve-vmid"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-qemu-vmid-template",
                      "path": "/nodes/{node}/qemu/{vmid}/template",
                      "slug": "nodes-node-qemu-vmid-template",
                      "label": "template",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-template",
                          "operationId": "post-nodes-node-qemu-vmid-template",
                          "path": "/nodes/{node}/qemu/{vmid}/template",
                          "httpMethod": "POST",
                          "name": "template",
                          "description": "Create a Template.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need 'VM.Allocate' permissions on /vms/{vmid}",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Allocate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "disk": {
                                  "type": "string",
                                  "description": "If you want to convert only 1 disk to base image.",
                                  "optional": true,
                                  "enum": [
                                    "ide0",
                                    "ide1",
                                    "ide2",
                                    "ide3",
                                    "scsi0",
                                    "scsi1",
                                    "scsi2",
                                    "scsi3",
                                    "scsi4",
                                    "scsi5",
                                    "scsi6",
                                    "scsi7",
                                    "scsi8",
                                    "scsi9",
                                    "scsi10",
                                    "scsi11",
                                    "scsi12",
                                    "scsi13",
                                    "scsi14",
                                    "scsi15",
                                    "scsi16",
                                    "scsi17",
                                    "scsi18",
                                    "scsi19",
                                    "scsi20",
                                    "scsi21",
                                    "scsi22",
                                    "scsi23",
                                    "scsi24",
                                    "scsi25",
                                    "scsi26",
                                    "scsi27",
                                    "scsi28",
                                    "scsi29",
                                    "scsi30",
                                    "virtio0",
                                    "virtio1",
                                    "virtio2",
                                    "virtio3",
                                    "virtio4",
                                    "virtio5",
                                    "virtio6",
                                    "virtio7",
                                    "virtio8",
                                    "virtio9",
                                    "virtio10",
                                    "virtio11",
                                    "virtio12",
                                    "virtio13",
                                    "virtio14",
                                    "virtio15",
                                    "sata0",
                                    "sata1",
                                    "sata2",
                                    "sata3",
                                    "sata4",
                                    "sata5",
                                    "efidisk0",
                                    "tpmstate0"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "the task ID.",
                              "schema": {
                                "type": "string",
                                "description": "the task ID."
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-termproxy",
                      "path": "/nodes/{node}/qemu/{vmid}/termproxy",
                      "slug": "nodes-node-qemu-vmid-termproxy",
                      "label": "termproxy",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-termproxy",
                          "operationId": "post-nodes-node-qemu-vmid-termproxy",
                          "path": "/nodes/{node}/qemu/{vmid}/termproxy",
                          "httpMethod": "POST",
                          "name": "termproxy",
                          "description": "Creates a TCP proxy connections.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "serial": {
                                  "type": "string",
                                  "description": "opens a serial terminal (defaults to display)",
                                  "optional": true,
                                  "enum": [
                                    "serial0",
                                    "serial1",
                                    "serial2",
                                    "serial3"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "properties": {
                                  "port": {
                                    "type": "integer"
                                  },
                                  "ticket": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-unlink",
                      "path": "/nodes/{node}/qemu/{vmid}/unlink",
                      "slug": "nodes-node-qemu-vmid-unlink",
                      "label": "unlink",
                      "endpoints": [
                        {
                          "id": "put-nodes-node-qemu-vmid-unlink",
                          "operationId": "put-nodes-node-qemu-vmid-unlink",
                          "path": "/nodes/{node}/qemu/{vmid}/unlink",
                          "httpMethod": "PUT",
                          "name": "unlink",
                          "description": "Unlink/delete disk images.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Config.Disk"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "force": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal.",
                                  "optional": true
                                },
                                "idlist": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "A list of disk IDs you want to delete.",
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "null"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-vncproxy",
                      "path": "/nodes/{node}/qemu/{vmid}/vncproxy",
                      "slug": "nodes-node-qemu-vmid-vncproxy",
                      "label": "vncproxy",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-qemu-vmid-vncproxy",
                          "operationId": "post-nodes-node-qemu-vmid-vncproxy",
                          "path": "/nodes/{node}/qemu/{vmid}/vncproxy",
                          "httpMethod": "POST",
                          "name": "vncproxy",
                          "description": "Creates a TCP VNC proxy connections.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "generate-password": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Generates a random password to be used as ticket instead of the API ticket.",
                                  "optional": true,
                                  "defaultValue": 0
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "websocket": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Prepare for websocket upgrade (only required when using serial terminal, otherwise upgrade is always possible).",
                                  "optional": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "properties": {
                                  "cert": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "Returned if requested with 'generate-password' param. Consists of printable ASCII characters ('!' .. '~').",
                                    "optional": true
                                  },
                                  "port": {
                                    "type": "integer"
                                  },
                                  "ticket": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-qemu-vmid-vncwebsocket",
                      "path": "/nodes/{node}/qemu/{vmid}/vncwebsocket",
                      "slug": "nodes-node-qemu-vmid-vncwebsocket",
                      "label": "vncwebsocket",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-qemu-vmid-vncwebsocket",
                          "operationId": "get-nodes-node-qemu-vmid-vncwebsocket",
                          "path": "/nodes/{node}/qemu/{vmid}/vncwebsocket",
                          "httpMethod": "GET",
                          "name": "vncwebsocket",
                          "description": "Opens a weksocket for VNC traffic.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You also need to pass a valid ticket (vncticket).",
                                  "check": [
                                    "perm",
                                    "/vms/{vmid}",
                                    [
                                      "VM.Console"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "typetext": "<integer> (5900 - 5999)",
                                  "description": "Port number returned by previous vncproxy call.",
                                  "constraints": {
                                    "minimum": 5900,
                                    "maximum": 5999
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "The (unique) ID of the VM.",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                },
                                "vncticket": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Ticket from previous call to vncproxy.",
                                  "constraints": {
                                    "maxLength": 512
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-query-url-metadata",
              "path": "/nodes/{node}/query-url-metadata",
              "slug": "nodes-node-query-url-metadata",
              "label": "query-url-metadata",
              "endpoints": [
                {
                  "id": "get-nodes-node-query-url-metadata",
                  "operationId": "get-nodes-node-query-url-metadata",
                  "path": "/nodes/{node}/query-url-metadata",
                  "httpMethod": "GET",
                  "name": "query_url_metadata",
                  "description": "Query metadata of an URL: file size, file name and mime type.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "or",
                            [
                              "perm",
                              "/",
                              [
                                "Sys.Audit",
                                "Sys.Modify"
                              ]
                            ],
                            [
                              "perm",
                              "/nodes/{node}",
                              [
                                "Sys.AccessNetwork"
                              ]
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL to query the metadata from.",
                          "constraints": {
                            "pattern": "https?://.*"
                          }
                        },
                        "verify-certificates": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "If false, no SSL/TLS certificates will be verified.",
                          "optional": true,
                          "defaultValue": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "filename": {
                            "type": "string",
                            "optional": true
                          },
                          "mimetype": {
                            "type": "string",
                            "optional": true
                          },
                          "size": {
                            "type": "integer",
                            "optional": true,
                            "metadata": {
                              "renderer": "bytes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-replication",
              "path": "/nodes/{node}/replication",
              "slug": "nodes-node-replication",
              "label": "replication",
              "endpoints": [
                {
                  "id": "get-nodes-node-replication",
                  "operationId": "get-nodes-node-replication",
                  "path": "/nodes/{node}/replication",
                  "httpMethod": "GET",
                  "name": "status",
                  "description": "List status of all replication jobs on this node.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "Requires the VM.Audit permission on /vms/<vmid>.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "guest": {
                          "type": "integer",
                          "typetext": "<integer> (100 - 999999999)",
                          "description": "Only list replication jobs for this guest.",
                          "optional": true,
                          "constraints": {
                            "minimum": 100,
                            "maximum": 999999999,
                            "format": "pve-vmid"
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{id}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-replication-id",
                  "path": "/nodes/{node}/replication/{id}",
                  "slug": "nodes-node-replication-id",
                  "label": "{id}",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-replication-id",
                      "operationId": "get-nodes-node-replication-id",
                      "path": "/nodes/{node}/replication/{id}",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "Directory index.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                              "constraints": {
                                "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                                "format": "pve-replication-job-id"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-replication-id-log",
                      "path": "/nodes/{node}/replication/{id}/log",
                      "slug": "nodes-node-replication-id-log",
                      "label": "log",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-replication-id-log",
                          "operationId": "get-nodes-node-replication-id-log",
                          "path": "/nodes/{node}/replication/{id}/log",
                          "httpMethod": "GET",
                          "name": "read_job_log",
                          "description": "Read replication job log.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires the VM.Audit permission on /vms/<vmid>, or 'Sys.Audit' on '/nodes/<node>'",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                                  "constraints": {
                                    "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                                    "format": "pve-replication-job-id"
                                  }
                                },
                                "limit": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "start": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "n": {
                                      "type": "integer",
                                      "description": "Line number"
                                    },
                                    "t": {
                                      "type": "string",
                                      "description": "Line text"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-replication-id-schedule-now",
                      "path": "/nodes/{node}/replication/{id}/schedule_now",
                      "slug": "nodes-node-replication-id-schedule-now",
                      "label": "schedule_now",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-replication-id-schedule-now",
                          "operationId": "post-nodes-node-replication-id-schedule-now",
                          "path": "/nodes/{node}/replication/{id}/schedule_now",
                          "httpMethod": "POST",
                          "name": "schedule_now",
                          "description": "Schedule replication job to start as soon as possible.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                                  "constraints": {
                                    "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                                    "format": "pve-replication-job-id"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-replication-id-status",
                      "path": "/nodes/{node}/replication/{id}/status",
                      "slug": "nodes-node-replication-id-status",
                      "label": "status",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-replication-id-status",
                          "operationId": "get-nodes-node-replication-id-status",
                          "path": "/nodes/{node}/replication/{id}/status",
                          "httpMethod": "GET",
                          "name": "job_status",
                          "description": "Get replication job status.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires the VM.Audit permission on /vms/<vmid>.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                                  "constraints": {
                                    "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                                    "format": "pve-replication-job-id"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-report",
              "path": "/nodes/{node}/report",
              "slug": "nodes-node-report",
              "label": "report",
              "endpoints": [
                {
                  "id": "get-nodes-node-report",
                  "operationId": "get-nodes-node-report",
                  "path": "/nodes/{node}/report",
                  "httpMethod": "GET",
                  "name": "report",
                  "description": "Gather various systems information about a node",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-rrd",
              "path": "/nodes/{node}/rrd",
              "slug": "nodes-node-rrd",
              "label": "rrd",
              "endpoints": [
                {
                  "id": "get-nodes-node-rrd",
                  "operationId": "get-nodes-node-rrd",
                  "path": "/nodes/{node}/rrd",
                  "httpMethod": "GET",
                  "name": "rrd",
                  "description": "Read node RRD statistics (returns PNG)",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "cf": {
                          "type": "string",
                          "description": "The RRD consolidation function",
                          "optional": true,
                          "enum": [
                            "AVERAGE",
                            "MAX"
                          ]
                        },
                        "ds": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The list of datasources you want to display.",
                          "constraints": {
                            "format": "pve-configid-list"
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "timeframe": {
                          "type": "string",
                          "description": "Specify the time frame you are interested in.",
                          "enum": [
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year",
                            "decade"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "filename": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-rrddata",
              "path": "/nodes/{node}/rrddata",
              "slug": "nodes-node-rrddata",
              "label": "rrddata",
              "endpoints": [
                {
                  "id": "get-nodes-node-rrddata",
                  "operationId": "get-nodes-node-rrddata",
                  "path": "/nodes/{node}/rrddata",
                  "httpMethod": "GET",
                  "name": "rrddata",
                  "description": "Read node RRD statistics",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "cf": {
                          "type": "string",
                          "description": "The RRD consolidation function",
                          "optional": true,
                          "enum": [
                            "AVERAGE",
                            "MAX"
                          ]
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "timeframe": {
                          "type": "string",
                          "description": "Specify the time frame you are interested in.",
                          "enum": [
                            "hour",
                            "day",
                            "week",
                            "month",
                            "year",
                            "decade"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-scan",
              "path": "/nodes/{node}/scan",
              "slug": "nodes-node-scan",
              "label": "scan",
              "endpoints": [
                {
                  "id": "get-nodes-node-scan",
                  "operationId": "get-nodes-node-scan",
                  "path": "/nodes/{node}/scan",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Index of available scan methods",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "method": {
                              "type": "string"
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{method}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-scan-cifs",
                  "path": "/nodes/{node}/scan/cifs",
                  "slug": "nodes-node-scan-cifs",
                  "label": "cifs",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-cifs",
                      "operationId": "get-nodes-node-scan-cifs",
                      "path": "/nodes/{node}/scan/cifs",
                      "httpMethod": "GET",
                      "name": "cifsscan",
                      "description": "Scan remote CIFS server.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "domain": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "SMB domain (Workgroup).",
                              "optional": true
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "password": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "User password.",
                              "optional": true
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The server address (name or IP).",
                              "constraints": {
                                "format": "pve-storage-server"
                              }
                            },
                            "username": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "User name.",
                              "optional": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "Descriptive text from server."
                                },
                                "share": {
                                  "type": "string",
                                  "description": "The cifs share name."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-scan-iscsi",
                  "path": "/nodes/{node}/scan/iscsi",
                  "slug": "nodes-node-scan-iscsi",
                  "label": "iscsi",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-iscsi",
                      "operationId": "get-nodes-node-scan-iscsi",
                      "path": "/nodes/{node}/scan/iscsi",
                      "httpMethod": "GET",
                      "name": "iscsiscan",
                      "description": "Scan remote iSCSI server.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "portal": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The iSCSI portal (IP or DNS name with optional port).",
                              "constraints": {
                                "format": "pve-storage-portal-dns"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "portal": {
                                  "type": "string",
                                  "description": "The iSCSI portal name."
                                },
                                "target": {
                                  "type": "string",
                                  "description": "The iSCSI target name."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-scan-lvm",
                  "path": "/nodes/{node}/scan/lvm",
                  "slug": "nodes-node-scan-lvm",
                  "label": "lvm",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-lvm",
                      "operationId": "get-nodes-node-scan-lvm",
                      "path": "/nodes/{node}/scan/lvm",
                      "httpMethod": "GET",
                      "name": "lvmscan",
                      "description": "List local LVM volume groups.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "vg": {
                                  "type": "string",
                                  "description": "The LVM logical volume group name."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-scan-lvmthin",
                  "path": "/nodes/{node}/scan/lvmthin",
                  "slug": "nodes-node-scan-lvmthin",
                  "label": "lvmthin",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-lvmthin",
                      "operationId": "get-nodes-node-scan-lvmthin",
                      "path": "/nodes/{node}/scan/lvmthin",
                      "httpMethod": "GET",
                      "name": "lvmthinscan",
                      "description": "List local LVM Thin Pools.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "vg": {
                              "type": "string",
                              "constraints": {
                                "maxLength": 100,
                                "pattern": "[a-zA-Z0-9\\.\\+\\_][a-zA-Z0-9\\.\\+\\_\\-]+"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "lv": {
                                  "type": "string",
                                  "description": "The LVM Thin Pool name (LVM logical volume)."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-scan-nfs",
                  "path": "/nodes/{node}/scan/nfs",
                  "slug": "nodes-node-scan-nfs",
                  "label": "nfs",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-nfs",
                      "operationId": "get-nodes-node-scan-nfs",
                      "path": "/nodes/{node}/scan/nfs",
                      "httpMethod": "GET",
                      "name": "nfsscan",
                      "description": "Scan remote NFS server.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The server address (name or IP).",
                              "constraints": {
                                "format": "pve-storage-server"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "options": {
                                  "type": "string",
                                  "description": "NFS export options."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The exported path."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-scan-pbs",
                  "path": "/nodes/{node}/scan/pbs",
                  "slug": "nodes-node-scan-pbs",
                  "label": "pbs",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-pbs",
                      "operationId": "get-nodes-node-scan-pbs",
                      "path": "/nodes/{node}/scan/pbs",
                      "httpMethod": "GET",
                      "name": "pbsscan",
                      "description": "Scan remote Proxmox Backup Server.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "description": "Certificate SHA 256 fingerprint.",
                              "optional": true,
                              "constraints": {
                                "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                              }
                            },
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "password": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "User password or API token secret."
                            },
                            "port": {
                              "type": "integer",
                              "typetext": "<integer> (1 - 65535)",
                              "description": "Optional port.",
                              "optional": true,
                              "defaultValue": 8007,
                              "constraints": {
                                "minimum": 1,
                                "maximum": 65535
                              }
                            },
                            "server": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The server address (name or IP).",
                              "constraints": {
                                "format": "pve-storage-server"
                              }
                            },
                            "username": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "User-name or API token-ID."
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "comment": {
                                  "type": "string",
                                  "description": "Comment from server.",
                                  "optional": true
                                },
                                "store": {
                                  "type": "string",
                                  "description": "The datastore name."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-scan-zfs",
                  "path": "/nodes/{node}/scan/zfs",
                  "slug": "nodes-node-scan-zfs",
                  "label": "zfs",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-scan-zfs",
                      "operationId": "get-nodes-node-scan-zfs",
                      "path": "/nodes/{node}/scan/zfs",
                      "httpMethod": "GET",
                      "name": "zfsscan",
                      "description": "Scan zfs pool list on local node.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage",
                                [
                                  "Datastore.Allocate"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pool": {
                                  "type": "string",
                                  "description": "ZFS pool name."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-sdn",
              "path": "/nodes/{node}/sdn",
              "slug": "nodes-node-sdn",
              "label": "sdn",
              "endpoints": [
                {
                  "id": "get-nodes-node-sdn",
                  "operationId": "get-nodes-node-sdn",
                  "path": "/nodes/{node}/sdn",
                  "httpMethod": "GET",
                  "name": "sdnindex",
                  "description": "SDN index.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{name}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-sdn-zones",
                  "path": "/nodes/{node}/sdn/zones",
                  "slug": "nodes-node-sdn-zones",
                  "label": "zones",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-sdn-zones",
                      "operationId": "get-nodes-node-sdn-zones",
                      "path": "/nodes/{node}/sdn/zones",
                      "httpMethod": "GET",
                      "name": "index",
                      "description": "Get status for all zones.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "Only list entries where you have 'SDN.Audit'",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Status of zone",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "error"
                                  ]
                                },
                                "zone": {
                                  "type": "string",
                                  "description": "The SDN zone object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-zone-id"
                                  }
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{zone}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-sdn-zones-zone",
                      "path": "/nodes/{node}/sdn/zones/{zone}",
                      "slug": "nodes-node-sdn-zones-zone",
                      "label": "{zone}",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-sdn-zones-zone",
                          "operationId": "get-nodes-node-sdn-zones-zone",
                          "path": "/nodes/{node}/sdn/zones/{zone}",
                          "httpMethod": "GET",
                          "name": "diridx",
                          "description": "",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": false,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/sdn/zones/{zone}",
                                    [
                                      "SDN.Audit"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "zone": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The SDN zone object identifier.",
                                  "constraints": {
                                    "format": "pve-sdn-zone-id"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "subdir": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{subdir}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-sdn-zones-zone-content",
                          "path": "/nodes/{node}/sdn/zones/{zone}/content",
                          "slug": "nodes-node-sdn-zones-zone-content",
                          "label": "content",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-sdn-zones-zone-content",
                              "operationId": "get-nodes-node-sdn-zones-zone-content",
                              "path": "/nodes/{node}/sdn/zones/{zone}/content",
                              "httpMethod": "GET",
                              "name": "index",
                              "description": "List zone content.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "check": [
                                        "perm",
                                        "/sdn/zones/{zone}",
                                        [
                                          "SDN.Audit"
                                        ],
                                        "any",
                                        1
                                      ]
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "zone": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The SDN zone object identifier.",
                                      "constraints": {
                                        "format": "pve-sdn-zone-id"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "Status.",
                                          "optional": true
                                        },
                                        "statusmsg": {
                                          "type": "string",
                                          "description": "Status details",
                                          "optional": true
                                        },
                                        "vnet": {
                                          "type": "string",
                                          "description": "Vnet identifier."
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "links": [
                                        {
                                          "href": "{vnet}",
                                          "rel": "child"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-services",
              "path": "/nodes/{node}/services",
              "slug": "nodes-node-services",
              "label": "services",
              "endpoints": [
                {
                  "id": "get-nodes-node-services",
                  "operationId": "get-nodes-node-services",
                  "path": "/nodes/{node}/services",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Service list.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{service}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-services-service",
                  "path": "/nodes/{node}/services/{service}",
                  "slug": "nodes-node-services-service",
                  "label": "{service}",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-services-service",
                      "operationId": "get-nodes-node-services-service",
                      "path": "/nodes/{node}/services/{service}",
                      "httpMethod": "GET",
                      "name": "srvcmdidx",
                      "description": "Directory index",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/nodes/{node}",
                                [
                                  "Sys.Audit"
                                ]
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "service": {
                              "type": "string",
                              "description": "Service ID",
                              "enum": [
                                "chrony",
                                "corosync",
                                "cron",
                                "ksmtuned",
                                "lxcfs",
                                "postfix",
                                "proxmox-firewall",
                                "pve-cluster",
                                "pve-firewall",
                                "pve-ha-crm",
                                "pve-ha-lrm",
                                "pve-lxc-syscalld",
                                "pvedaemon",
                                "pvefw-logger",
                                "pveproxy",
                                "pvescheduler",
                                "pvestatd",
                                "qmeventd",
                                "spiceproxy",
                                "sshd",
                                "syslog",
                                "systemd-journald",
                                "systemd-timesyncd"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "subdir": {
                                  "type": "string"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{subdir}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-services-service-reload",
                      "path": "/nodes/{node}/services/{service}/reload",
                      "slug": "nodes-node-services-service-reload",
                      "label": "reload",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-services-service-reload",
                          "operationId": "post-nodes-node-services-service-reload",
                          "path": "/nodes/{node}/services/{service}/reload",
                          "httpMethod": "POST",
                          "name": "service_reload",
                          "description": "Reload service. Falls back to restart if service cannot be reloaded.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "service": {
                                  "type": "string",
                                  "description": "Service ID",
                                  "enum": [
                                    "chrony",
                                    "corosync",
                                    "cron",
                                    "ksmtuned",
                                    "lxcfs",
                                    "postfix",
                                    "proxmox-firewall",
                                    "pve-cluster",
                                    "pve-firewall",
                                    "pve-ha-crm",
                                    "pve-ha-lrm",
                                    "pve-lxc-syscalld",
                                    "pvedaemon",
                                    "pvefw-logger",
                                    "pveproxy",
                                    "pvescheduler",
                                    "pvestatd",
                                    "qmeventd",
                                    "spiceproxy",
                                    "sshd",
                                    "syslog",
                                    "systemd-journald",
                                    "systemd-timesyncd"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-services-service-restart",
                      "path": "/nodes/{node}/services/{service}/restart",
                      "slug": "nodes-node-services-service-restart",
                      "label": "restart",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-services-service-restart",
                          "operationId": "post-nodes-node-services-service-restart",
                          "path": "/nodes/{node}/services/{service}/restart",
                          "httpMethod": "POST",
                          "name": "service_restart",
                          "description": "Hard restart service. Use reload if you want to reduce interruptions.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "service": {
                                  "type": "string",
                                  "description": "Service ID",
                                  "enum": [
                                    "chrony",
                                    "corosync",
                                    "cron",
                                    "ksmtuned",
                                    "lxcfs",
                                    "postfix",
                                    "proxmox-firewall",
                                    "pve-cluster",
                                    "pve-firewall",
                                    "pve-ha-crm",
                                    "pve-ha-lrm",
                                    "pve-lxc-syscalld",
                                    "pvedaemon",
                                    "pvefw-logger",
                                    "pveproxy",
                                    "pvescheduler",
                                    "pvestatd",
                                    "qmeventd",
                                    "spiceproxy",
                                    "sshd",
                                    "syslog",
                                    "systemd-journald",
                                    "systemd-timesyncd"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-services-service-start",
                      "path": "/nodes/{node}/services/{service}/start",
                      "slug": "nodes-node-services-service-start",
                      "label": "start",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-services-service-start",
                          "operationId": "post-nodes-node-services-service-start",
                          "path": "/nodes/{node}/services/{service}/start",
                          "httpMethod": "POST",
                          "name": "service_start",
                          "description": "Start service.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "service": {
                                  "type": "string",
                                  "description": "Service ID",
                                  "enum": [
                                    "chrony",
                                    "corosync",
                                    "cron",
                                    "ksmtuned",
                                    "lxcfs",
                                    "postfix",
                                    "proxmox-firewall",
                                    "pve-cluster",
                                    "pve-firewall",
                                    "pve-ha-crm",
                                    "pve-ha-lrm",
                                    "pve-lxc-syscalld",
                                    "pvedaemon",
                                    "pvefw-logger",
                                    "pveproxy",
                                    "pvescheduler",
                                    "pvestatd",
                                    "qmeventd",
                                    "spiceproxy",
                                    "sshd",
                                    "syslog",
                                    "systemd-journald",
                                    "systemd-timesyncd"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-services-service-state",
                      "path": "/nodes/{node}/services/{service}/state",
                      "slug": "nodes-node-services-service-state",
                      "label": "state",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-services-service-state",
                          "operationId": "get-nodes-node-services-service-state",
                          "path": "/nodes/{node}/services/{service}/state",
                          "httpMethod": "GET",
                          "name": "service_state",
                          "description": "Read service properties",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Audit"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "service": {
                                  "type": "string",
                                  "description": "Service ID",
                                  "enum": [
                                    "chrony",
                                    "corosync",
                                    "cron",
                                    "ksmtuned",
                                    "lxcfs",
                                    "postfix",
                                    "proxmox-firewall",
                                    "pve-cluster",
                                    "pve-firewall",
                                    "pve-ha-crm",
                                    "pve-ha-lrm",
                                    "pve-lxc-syscalld",
                                    "pvedaemon",
                                    "pvefw-logger",
                                    "pveproxy",
                                    "pvescheduler",
                                    "pvestatd",
                                    "qmeventd",
                                    "spiceproxy",
                                    "sshd",
                                    "syslog",
                                    "systemd-journald",
                                    "systemd-timesyncd"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-services-service-stop",
                      "path": "/nodes/{node}/services/{service}/stop",
                      "slug": "nodes-node-services-service-stop",
                      "label": "stop",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-services-service-stop",
                          "operationId": "post-nodes-node-services-service-stop",
                          "path": "/nodes/{node}/services/{service}/stop",
                          "httpMethod": "POST",
                          "name": "service_stop",
                          "description": "Stop service.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/nodes/{node}",
                                    [
                                      "Sys.Modify"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "service": {
                                  "type": "string",
                                  "description": "Service ID",
                                  "enum": [
                                    "chrony",
                                    "corosync",
                                    "cron",
                                    "ksmtuned",
                                    "lxcfs",
                                    "postfix",
                                    "proxmox-firewall",
                                    "pve-cluster",
                                    "pve-firewall",
                                    "pve-ha-crm",
                                    "pve-ha-lrm",
                                    "pve-lxc-syscalld",
                                    "pvedaemon",
                                    "pvefw-logger",
                                    "pveproxy",
                                    "pvescheduler",
                                    "pvestatd",
                                    "qmeventd",
                                    "spiceproxy",
                                    "sshd",
                                    "syslog",
                                    "systemd-journald",
                                    "systemd-timesyncd"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-spiceshell",
              "path": "/nodes/{node}/spiceshell",
              "slug": "nodes-node-spiceshell",
              "label": "spiceshell",
              "endpoints": [
                {
                  "id": "post-nodes-node-spiceshell",
                  "operationId": "post-nodes-node-spiceshell",
                  "path": "/nodes/{node}/spiceshell",
                  "httpMethod": "POST",
                  "name": "spiceshell",
                  "description": "Creates a SPICE shell.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "cmd": {
                          "type": "string",
                          "description": "Run specific command or default to login (requires 'root@pam')",
                          "optional": true,
                          "defaultValue": "login",
                          "enum": [
                            "upgrade",
                            "ceph_install",
                            "login"
                          ]
                        },
                        "cmd-opts": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Add parameters to a command. Encoded as null terminated strings.",
                          "optional": true,
                          "defaultValue": "",
                          "constraints": {
                            "requires": [
                              "cmd"
                            ]
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "proxy": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI).",
                          "optional": true,
                          "constraints": {
                            "format": "address"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                      "schema": {
                        "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                        "properties": {
                          "host": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "proxy": {
                            "type": "string"
                          },
                          "tls-port": {
                            "type": "integer"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-startall",
              "path": "/nodes/{node}/startall",
              "slug": "nodes-node-startall",
              "label": "startall",
              "endpoints": [
                {
                  "id": "post-nodes-node-startall",
                  "operationId": "post-nodes-node-startall",
                  "path": "/nodes/{node}/startall",
                  "httpMethod": "POST",
                  "name": "startall",
                  "description": "Start all VMs and containers located on this node (by default only those with onboot=1).",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "The 'VM.PowerMgmt' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Issue start command even if virtual guest have 'onboot' not set or set to off.",
                          "optional": true,
                          "defaultValue": "off"
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "vms": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only consider guests from this comma separated list of VMIDs.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-status",
              "path": "/nodes/{node}/status",
              "slug": "nodes-node-status",
              "label": "status",
              "endpoints": [
                {
                  "id": "get-nodes-node-status",
                  "operationId": "get-nodes-node-status",
                  "path": "/nodes/{node}/status",
                  "httpMethod": "GET",
                  "name": "status",
                  "description": "Read node status",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "boot-info": {
                            "type": "object",
                            "description": "Meta-information about the boot mode.",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "Through which firmware the system got booted.",
                                "enum": [
                                  "efi",
                                  "legacy-bios"
                                ]
                              },
                              "secureboot": {
                                "type": "boolean",
                                "description": "System is booted in secure mode, only applicable for the \"efi\" mode.",
                                "optional": true
                              }
                            }
                          },
                          "cpu": {
                            "type": "number",
                            "description": "The current cpu usage."
                          },
                          "cpuinfo": {
                            "type": "object",
                            "properties": {
                              "cores": {
                                "type": "integer",
                                "description": "The number of physical cores of the CPU."
                              },
                              "cpus": {
                                "type": "integer",
                                "description": "The number of logical threads of the CPU."
                              },
                              "model": {
                                "type": "string",
                                "description": "The CPU model"
                              },
                              "sockets": {
                                "type": "integer",
                                "description": "The number of logical threads of the CPU."
                              }
                            }
                          },
                          "current-kernel": {
                            "type": "object",
                            "description": "Meta-information about the currently booted kernel of this node.",
                            "properties": {
                              "machine": {
                                "type": "string",
                                "description": "Hardware (architecture) type"
                              },
                              "release": {
                                "type": "string",
                                "description": "OS kernel release (e.g., \"6.8.0\")"
                              },
                              "sysname": {
                                "type": "string",
                                "description": "OS kernel name (e.g., \"Linux\")"
                              },
                              "version": {
                                "type": "string",
                                "description": "OS kernel version with build info"
                              }
                            }
                          },
                          "loadavg": {
                            "type": "array",
                            "description": "An array of load avg for 1, 5 and 15 minutes respectively.",
                            "items": {
                              "type": "string",
                              "description": "The value of the load."
                            }
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "integer",
                                "description": "The available memory in bytes."
                              },
                              "free": {
                                "type": "integer",
                                "description": "The free memory in bytes."
                              },
                              "total": {
                                "type": "integer",
                                "description": "The total memory in bytes."
                              },
                              "used": {
                                "type": "integer",
                                "description": "The used memory in bytes."
                              }
                            }
                          },
                          "pveversion": {
                            "type": "string",
                            "description": "The PVE version string."
                          },
                          "rootfs": {
                            "type": "object",
                            "properties": {
                              "avail": {
                                "type": "integer",
                                "description": "The available bytes in the root filesystem."
                              },
                              "free": {
                                "type": "integer",
                                "description": "The free bytes on the root filesystem."
                              },
                              "total": {
                                "type": "integer",
                                "description": "The total size of the root filesystem in bytes."
                              },
                              "used": {
                                "type": "integer",
                                "description": "The used bytes in the root filesystem."
                              }
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-status",
                  "operationId": "post-nodes-node-status",
                  "path": "/nodes/{node}/status",
                  "httpMethod": "POST",
                  "name": "node_cmd",
                  "description": "Reboot or shutdown a node.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.PowerMgmt"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "command": {
                          "type": "string",
                          "description": "Specify the command.",
                          "enum": [
                            "reboot",
                            "shutdown"
                          ]
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-stopall",
              "path": "/nodes/{node}/stopall",
              "slug": "nodes-node-stopall",
              "label": "stopall",
              "endpoints": [
                {
                  "id": "post-nodes-node-stopall",
                  "operationId": "post-nodes-node-stopall",
                  "path": "/nodes/{node}/stopall",
                  "httpMethod": "POST",
                  "name": "stopall",
                  "description": "Stop all VMs and Containers.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "The 'VM.PowerMgmt' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "force-stop": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Force a hard-stop after the timeout.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "timeout": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 7200)",
                          "description": "Timeout for each guest shutdown task. Depending on `force-stop`, the shutdown gets then simply aborted or a hard-stop is forced.",
                          "optional": true,
                          "defaultValue": 180,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 7200
                          }
                        },
                        "vms": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only consider Guests with these IDs.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-storage",
              "path": "/nodes/{node}/storage",
              "slug": "nodes-node-storage",
              "label": "storage",
              "endpoints": [
                {
                  "id": "get-nodes-node-storage",
                  "operationId": "get-nodes-node-storage",
                  "path": "/nodes/{node}/storage",
                  "httpMethod": "GET",
                  "name": "index",
                  "description": "Get status for all datastores.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "Only list entries where you have 'Datastore.Audit' or 'Datastore.AllocateSpace' permissions on '/storage/<storage>'",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "content": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only list stores which support this content type.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-content-list"
                          }
                        },
                        "enabled": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Only list stores which are enabled (not disabled in config).",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "format": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Include information about formats",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "Only list status for  specified storage",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "target": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "If target is different to 'node', we only lists shared storages which content is accessible on this 'node' and the specified 'target' node.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean",
                              "description": "Set when storage is accessible.",
                              "optional": true
                            },
                            "avail": {
                              "type": "integer",
                              "description": "Available storage space in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "content": {
                              "type": "string",
                              "description": "Allowed storage content types.",
                              "constraints": {
                                "format": "pve-storage-content-list"
                              }
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "Set when storage is enabled (not disabled).",
                              "optional": true
                            },
                            "shared": {
                              "type": "boolean",
                              "description": "Shared flag from storage configuration.",
                              "optional": true
                            },
                            "storage": {
                              "type": "string",
                              "description": "The storage identifier.",
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            },
                            "total": {
                              "type": "integer",
                              "description": "Total storage space in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "Storage type."
                            },
                            "used": {
                              "type": "integer",
                              "description": "Used storage space in bytes.",
                              "optional": true,
                              "metadata": {
                                "renderer": "bytes"
                              }
                            },
                            "used_fraction": {
                              "type": "number",
                              "description": "Used fraction (used/total).",
                              "optional": true,
                              "metadata": {
                                "renderer": "fraction_as_percentage"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{storage}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-storage-storage",
                  "path": "/nodes/{node}/storage/{storage}",
                  "slug": "nodes-node-storage-storage",
                  "label": "{storage}",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-storage-storage",
                      "operationId": "get-nodes-node-storage-storage",
                      "path": "/nodes/{node}/storage/{storage}",
                      "httpMethod": "GET",
                      "name": "diridx",
                      "description": "",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "check": [
                                "perm",
                                "/storage/{storage}",
                                [
                                  "Datastore.Audit",
                                  "Datastore.AllocateSpace"
                                ],
                                "any",
                                1
                              ]
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "storage": {
                              "type": "string",
                              "typetext": "<storage ID>",
                              "description": "The storage identifier.",
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "subdir": {
                                  "type": "string"
                                }
                              }
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{subdir}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-storage-storage-content",
                      "path": "/nodes/{node}/storage/{storage}/content",
                      "slug": "nodes-node-storage-storage-content",
                      "label": "content",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-storage-storage-content",
                          "operationId": "get-nodes-node-storage-storage-content",
                          "path": "/nodes/{node}/storage/{storage}/content",
                          "httpMethod": "GET",
                          "name": "index",
                          "description": "List storage content.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.Audit",
                                      "Datastore.AllocateSpace"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "content": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Only list content of this type.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "pve-storage-content"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "Only list images for this VM",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ctime": {
                                      "type": "integer",
                                      "description": "Creation time (seconds since the UNIX Epoch).",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 0
                                      }
                                    },
                                    "encrypted": {
                                      "type": "string",
                                      "description": "If whole backup is encrypted, value is the fingerprint or '1'  if encrypted. Only useful for the Proxmox Backup Server storage type.",
                                      "optional": true
                                    },
                                    "format": {
                                      "type": "string",
                                      "description": "Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
                                    },
                                    "notes": {
                                      "type": "string",
                                      "description": "Optional notes. If they contain multiple lines, only the first one is returned here.",
                                      "optional": true
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Volume identifier of parent (for linked cloned).",
                                      "optional": true
                                    },
                                    "protected": {
                                      "type": "boolean",
                                      "description": "Protection status. Currently only supported for backups.",
                                      "optional": true
                                    },
                                    "size": {
                                      "type": "integer",
                                      "description": "Volume size in bytes.",
                                      "metadata": {
                                        "renderer": "bytes"
                                      }
                                    },
                                    "used": {
                                      "type": "integer",
                                      "description": "Used space. Please note that most storage plugins do not report anything useful here.",
                                      "optional": true,
                                      "metadata": {
                                        "renderer": "bytes"
                                      }
                                    },
                                    "verification": {
                                      "type": "object",
                                      "description": "Last backup verification result, only useful for PBS storages.",
                                      "optional": true,
                                      "properties": {
                                        "state": {
                                          "type": "string",
                                          "description": "Last backup verification state."
                                        },
                                        "upid": {
                                          "type": "string",
                                          "description": "Last backup verification UPID."
                                        }
                                      }
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "description": "Associated Owner VMID.",
                                      "optional": true
                                    },
                                    "volid": {
                                      "type": "string",
                                      "description": "Volume identifier."
                                    }
                                  }
                                },
                                "metadata": {
                                  "links": [
                                    {
                                      "href": "{volid}",
                                      "rel": "child"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "id": "post-nodes-node-storage-storage-content",
                          "operationId": "post-nodes-node-storage-storage-content",
                          "path": "/nodes/{node}/storage/{storage}/content",
                          "httpMethod": "POST",
                          "name": "create",
                          "description": "Allocate disk images.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.AllocateSpace"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "filename": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the file to create."
                                },
                                "format": {
                                  "type": "string",
                                  "description": "Format of the image.",
                                  "optional": true,
                                  "enum": [
                                    "raw",
                                    "qcow2",
                                    "subvol",
                                    "vmdk"
                                  ],
                                  "constraints": {
                                    "requires": [
                                      "size"
                                    ]
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "size": {
                                  "type": "string",
                                  "description": "Size in kilobyte (1024 bytes). Optional suffixes 'M' (megabyte, 1024K) and 'G' (gigabyte, 1024M)",
                                  "constraints": {
                                    "pattern": "\\d+[MG]?"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "Specify owner VM",
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Volume identifier",
                              "schema": {
                                "type": "string",
                                "description": "Volume identifier"
                              }
                            }
                          ]
                        }
                      ],
                      "children": [
                        {
                          "id": "nodes-node-storage-storage-content-volume",
                          "path": "/nodes/{node}/storage/{storage}/content/{volume}",
                          "slug": "nodes-node-storage-storage-content-volume",
                          "label": "{volume}",
                          "endpoints": [
                            {
                              "id": "delete-nodes-node-storage-storage-content-volume",
                              "operationId": "delete-nodes-node-storage-storage-content-volume",
                              "path": "/nodes/{node}/storage/{storage}/content/{volume}",
                              "httpMethod": "DELETE",
                              "name": "delete",
                              "description": "Delete volume",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "You need 'Datastore.Allocate' privilege on the storage (or 'Datastore.AllocateSpace' for backup volumes if you have VM.Backup privilege on the VM).",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "delay": {
                                      "type": "integer",
                                      "typetext": "<integer> (1 - 30)",
                                      "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
                                      "optional": true,
                                      "constraints": {
                                        "minimum": 1,
                                        "maximum": 30
                                      }
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "storage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage identifier.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID"
                                      }
                                    },
                                    "volume": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Volume identifier"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string",
                                    "optional": true
                                  }
                                }
                              ]
                            },
                            {
                              "id": "get-nodes-node-storage-storage-content-volume",
                              "operationId": "get-nodes-node-storage-storage-content-volume",
                              "path": "/nodes/{node}/storage/{storage}/content/{volume}",
                              "httpMethod": "GET",
                              "name": "info",
                              "description": "Get volume attributes",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "You need read access for the volume.",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "storage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage identifier.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID"
                                      }
                                    },
                                    "volume": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Volume identifier"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "format": {
                                        "type": "string",
                                        "description": "Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
                                      },
                                      "notes": {
                                        "type": "string",
                                        "description": "Optional notes.",
                                        "optional": true
                                      },
                                      "path": {
                                        "type": "string",
                                        "description": "The Path"
                                      },
                                      "protected": {
                                        "type": "boolean",
                                        "description": "Protection status. Currently only supported for backups.",
                                        "optional": true
                                      },
                                      "size": {
                                        "type": "integer",
                                        "description": "Volume size in bytes.",
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      },
                                      "used": {
                                        "type": "integer",
                                        "description": "Used space. Please note that most storage plugins do not report anything useful here.",
                                        "metadata": {
                                          "renderer": "bytes"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "id": "post-nodes-node-storage-storage-content-volume",
                              "operationId": "post-nodes-node-storage-storage-content-volume",
                              "path": "/nodes/{node}/storage/{storage}/content/{volume}",
                              "httpMethod": "POST",
                              "name": "copy",
                              "description": "Copy a volume. This is experimental code - do not use.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "storage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage identifier.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID"
                                      }
                                    },
                                    "target": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Target volume identifier"
                                    },
                                    "target_node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Target node. Default is local node.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "volume": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Source volume identifier"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "string"
                                  }
                                }
                              ]
                            },
                            {
                              "id": "put-nodes-node-storage-storage-content-volume",
                              "operationId": "put-nodes-node-storage-storage-content-volume",
                              "path": "/nodes/{node}/storage/{storage}/content/{volume}",
                              "httpMethod": "PUT",
                              "name": "updateattributes",
                              "description": "Update volume attributes",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "You need read access for the volume.",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "notes": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The new notes.",
                                      "optional": true
                                    },
                                    "protected": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Protection status. Currently only supported for backups.",
                                      "optional": true
                                    },
                                    "storage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage identifier.",
                                      "optional": true,
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID"
                                      }
                                    },
                                    "volume": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Volume identifier"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "null"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-storage-storage-download-url",
                      "path": "/nodes/{node}/storage/{storage}/download-url",
                      "slug": "nodes-node-storage-storage-download-url",
                      "label": "download-url",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-storage-storage-download-url",
                          "operationId": "post-nodes-node-storage-storage-download-url",
                          "path": "/nodes/{node}/storage/{storage}/download-url",
                          "httpMethod": "POST",
                          "name": "download_url",
                          "description": "Download templates, ISO images, OVAs and VM images by using an URL.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "Requires allocation access on the storage and as this allows one to probe the (local!) host network indirectly it also requires one of Sys.Modify on / (for backwards compatibility) or the newer Sys.AccessNetwork privilege on the node.",
                                  "check": [
                                    "and",
                                    [
                                      "perm",
                                      "/storage/{storage}",
                                      [
                                        "Datastore.AllocateTemplate"
                                      ]
                                    ],
                                    [
                                      "or",
                                      [
                                        "perm",
                                        "/",
                                        [
                                          "Sys.Audit",
                                          "Sys.Modify"
                                        ]
                                      ],
                                      [
                                        "perm",
                                        "/nodes/{node}",
                                        [
                                          "Sys.AccessNetwork"
                                        ]
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "checksum": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The expected checksum of the file.",
                                  "optional": true,
                                  "constraints": {
                                    "requires": [
                                      "checksum-algorithm"
                                    ]
                                  }
                                },
                                "checksum-algorithm": {
                                  "type": "string",
                                  "description": "The algorithm to calculate the checksum of the file.",
                                  "optional": true,
                                  "enum": [
                                    "md5",
                                    "sha1",
                                    "sha224",
                                    "sha256",
                                    "sha384",
                                    "sha512"
                                  ],
                                  "constraints": {
                                    "requires": [
                                      "checksum"
                                    ]
                                  }
                                },
                                "compression": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Decompress the downloaded file using the specified compression algorithm.",
                                  "optional": true
                                },
                                "content": {
                                  "type": "string",
                                  "description": "Content type.",
                                  "enum": [
                                    "iso",
                                    "vztmpl",
                                    "import"
                                  ],
                                  "constraints": {
                                    "format": "pve-storage-content"
                                  }
                                },
                                "filename": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the file to create. Caution: This will be normalized!",
                                  "constraints": {
                                    "maxLength": 255
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL to download the file from.",
                                  "constraints": {
                                    "pattern": "https?://.*"
                                  }
                                },
                                "verify-certificates": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "If false, no SSL/TLS certificates will be verified.",
                                  "optional": true,
                                  "defaultValue": 1
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-storage-storage-file-restore",
                      "path": "/nodes/{node}/storage/{storage}/file-restore",
                      "slug": "nodes-node-storage-storage-file-restore",
                      "label": "file-restore",
                      "endpoints": [],
                      "children": [
                        {
                          "id": "nodes-node-storage-storage-file-restore-download",
                          "path": "/nodes/{node}/storage/{storage}/file-restore/download",
                          "slug": "nodes-node-storage-storage-file-restore-download",
                          "label": "download",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-storage-storage-file-restore-download",
                              "operationId": "get-nodes-node-storage-storage-file-restore-download",
                              "path": "/nodes/{node}/storage/{storage}/file-restore/download",
                              "httpMethod": "GET",
                              "name": "download",
                              "description": "Extract a file or directory (as zip archive) from a PBS backup.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "You need read access for the volume.",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "filepath": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "base64-path to the directory or file to download."
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "storage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage identifier.",
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID"
                                      }
                                    },
                                    "tar": {
                                      "type": "boolean",
                                      "typetext": "<boolean>",
                                      "description": "Download dirs as 'tar.zst' instead of 'zip'.",
                                      "optional": true,
                                      "defaultValue": 0
                                    },
                                    "volume": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Backup volume ID or name. Currently only PBS snapshots are supported."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "any"
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        },
                        {
                          "id": "nodes-node-storage-storage-file-restore-list",
                          "path": "/nodes/{node}/storage/{storage}/file-restore/list",
                          "slug": "nodes-node-storage-storage-file-restore-list",
                          "label": "list",
                          "endpoints": [
                            {
                              "id": "get-nodes-node-storage-storage-file-restore-list",
                              "operationId": "get-nodes-node-storage-storage-file-restore-list",
                              "path": "/nodes/{node}/storage/{storage}/file-restore/list",
                              "httpMethod": "GET",
                              "name": "list",
                              "description": "List files and directories for single file restore under the given path.",
                              "security": {
                                "allowToken": true,
                                "requiresAuthentication": true,
                                "permissions": {
                                  "all": [
                                    {
                                      "description": "You need read access for the volume.",
                                      "user": "all"
                                    }
                                  ]
                                }
                              },
                              "features": {
                                "proxy": false,
                                "download": false,
                                "upload": false
                              },
                              "request": {
                                "schema": {
                                  "properties": {
                                    "filepath": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "base64-path to the directory or file being listed, or \"/\"."
                                    },
                                    "node": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "The cluster node name.",
                                      "constraints": {
                                        "format": "pve-node"
                                      }
                                    },
                                    "storage": {
                                      "type": "string",
                                      "typetext": "<storage ID>",
                                      "description": "The storage identifier.",
                                      "constraints": {
                                        "format": "pve-storage-id",
                                        "formatDescription": "storage ID"
                                      }
                                    },
                                    "volume": {
                                      "type": "string",
                                      "typetext": "<string>",
                                      "description": "Backup volume ID or name. Currently only PBS snapshots are supported."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "responses": [
                                {
                                  "schema": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "filepath": {
                                          "type": "string",
                                          "description": "base64 path of the current entry"
                                        },
                                        "leaf": {
                                          "type": "boolean",
                                          "description": "If this entry is a leaf in the directory graph."
                                        },
                                        "mtime": {
                                          "type": "integer",
                                          "description": "Entry last-modified time (unix timestamp).",
                                          "optional": true
                                        },
                                        "size": {
                                          "type": "integer",
                                          "description": "Entry file size.",
                                          "optional": true
                                        },
                                        "text": {
                                          "type": "string",
                                          "description": "Entry display text."
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Entry type."
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ],
                          "children": []
                        }
                      ]
                    },
                    {
                      "id": "nodes-node-storage-storage-import-metadata",
                      "path": "/nodes/{node}/storage/{storage}/import-metadata",
                      "slug": "nodes-node-storage-storage-import-metadata",
                      "label": "import-metadata",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-storage-storage-import-metadata",
                          "operationId": "get-nodes-node-storage-storage-import-metadata",
                          "path": "/nodes/{node}/storage/{storage}/import-metadata",
                          "httpMethod": "GET",
                          "name": "get_import_metadata",
                          "description": "Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need read access for the volume.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "volume": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "Volume identifier for the guest archive/entry."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "description": "Information about how to import a guest.",
                              "schema": {
                                "type": "object",
                                "description": "Information about how to import a guest.",
                                "properties": {
                                  "create-args": {
                                    "type": "object",
                                    "description": "Parameters which can be used in a call to create a VM or container.",
                                    "additionalProperties": true
                                  },
                                  "disks": {
                                    "type": "object",
                                    "description": "Recognised disk volumes as `$bus$id` => `$storeid:$path` map.",
                                    "optional": true,
                                    "additionalProperties": true
                                  },
                                  "net": {
                                    "type": "object",
                                    "description": "Recognised network interfaces as `net$id` => { ...params } object.",
                                    "optional": true,
                                    "additionalProperties": true
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The type of the import-source of this guest volume.",
                                    "enum": [
                                      "esxi"
                                    ]
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of guest this is going to produce.",
                                    "enum": [
                                      "vm"
                                    ]
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "description": "List of known issues that can affect the import of a guest. Note that lack of warning does not imply that there cannot be any problems.",
                                    "optional": true,
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Related subject (config) key of warning.",
                                          "optional": true
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "What this warning is about.",
                                          "enum": [
                                            "cdrom-image-ignored",
                                            "efi-state-lost",
                                            "guest-is-running",
                                            "nvme-unsupported",
                                            "ova-needs-extracting",
                                            "ovmf-with-lsi-unsupported",
                                            "serial-port-socket-only"
                                          ]
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Related subject (config) value of warning.",
                                          "optional": true
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-storage-storage-prunebackups",
                      "path": "/nodes/{node}/storage/{storage}/prunebackups",
                      "slug": "nodes-node-storage-storage-prunebackups",
                      "label": "prunebackups",
                      "endpoints": [
                        {
                          "id": "delete-nodes-node-storage-storage-prunebackups",
                          "operationId": "delete-nodes-node-storage-storage-prunebackups",
                          "path": "/nodes/{node}/storage/{storage}/prunebackups",
                          "httpMethod": "DELETE",
                          "name": "delete",
                          "description": "Prune backups. Only those using the standard naming scheme are considered.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "You need the 'Datastore.Allocate' privilege on the storage (or if a VM ID is specified, 'Datastore.AllocateSpace' and 'VM.Backup' for the VM).",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "prune-backups": {
                                  "type": "string",
                                  "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                                  "description": "Use these retention options instead of those from the storage configuration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "prune-backups"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
                                  "optional": true,
                                  "enum": [
                                    "qemu",
                                    "lxc"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "Only prune backups for this VM.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        {
                          "id": "get-nodes-node-storage-storage-prunebackups",
                          "operationId": "get-nodes-node-storage-storage-prunebackups",
                          "path": "/nodes/{node}/storage/{storage}/prunebackups",
                          "httpMethod": "GET",
                          "name": "dryrun",
                          "description": "Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.Audit",
                                      "Datastore.AllocateSpace"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "prune-backups": {
                                  "type": "string",
                                  "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                                  "description": "Use these retention options instead of those from the storage configuration.",
                                  "optional": true,
                                  "constraints": {
                                    "format": "prune-backups"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
                                  "optional": true,
                                  "enum": [
                                    "qemu",
                                    "lxc"
                                  ]
                                },
                                "vmid": {
                                  "type": "integer",
                                  "typetext": "<integer> (100 - 999999999)",
                                  "description": "Only consider backups for this guest.",
                                  "optional": true,
                                  "constraints": {
                                    "minimum": 100,
                                    "maximum": 999999999,
                                    "format": "pve-vmid"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ctime": {
                                      "type": "integer",
                                      "description": "Creation time of the backup (seconds since the UNIX epoch)."
                                    },
                                    "mark": {
                                      "type": "string",
                                      "description": "Whether the backup would be kept or removed. Backups that are protected or don't use the standard naming scheme are not removed.",
                                      "enum": [
                                        "keep",
                                        "remove",
                                        "protected",
                                        "renamed"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "One of 'qemu', 'lxc', 'openvz' or 'unknown'."
                                    },
                                    "vmid": {
                                      "type": "integer",
                                      "description": "The VM the backup belongs to.",
                                      "optional": true
                                    },
                                    "volid": {
                                      "type": "string",
                                      "description": "Backup volume ID."
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-storage-storage-rrd",
                      "path": "/nodes/{node}/storage/{storage}/rrd",
                      "slug": "nodes-node-storage-storage-rrd",
                      "label": "rrd",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-storage-storage-rrd",
                          "operationId": "get-nodes-node-storage-storage-rrd",
                          "path": "/nodes/{node}/storage/{storage}/rrd",
                          "httpMethod": "GET",
                          "name": "rrd",
                          "description": "Read storage RRD statistics (returns PNG).",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.Audit",
                                      "Datastore.AllocateSpace"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cf": {
                                  "type": "string",
                                  "description": "The RRD consolidation function",
                                  "optional": true,
                                  "enum": [
                                    "AVERAGE",
                                    "MAX"
                                  ]
                                },
                                "ds": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The list of datasources you want to display.",
                                  "constraints": {
                                    "format": "pve-configid-list"
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "timeframe": {
                                  "type": "string",
                                  "description": "Specify the time frame you are interested in.",
                                  "enum": [
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "filename": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-storage-storage-rrddata",
                      "path": "/nodes/{node}/storage/{storage}/rrddata",
                      "slug": "nodes-node-storage-storage-rrddata",
                      "label": "rrddata",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-storage-storage-rrddata",
                          "operationId": "get-nodes-node-storage-storage-rrddata",
                          "path": "/nodes/{node}/storage/{storage}/rrddata",
                          "httpMethod": "GET",
                          "name": "rrddata",
                          "description": "Read storage RRD statistics.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.Audit",
                                      "Datastore.AllocateSpace"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "cf": {
                                  "type": "string",
                                  "description": "The RRD consolidation function",
                                  "optional": true,
                                  "enum": [
                                    "AVERAGE",
                                    "MAX"
                                  ]
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "timeframe": {
                                  "type": "string",
                                  "description": "Specify the time frame you are interested in.",
                                  "enum": [
                                    "hour",
                                    "day",
                                    "week",
                                    "month",
                                    "year"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-storage-storage-status",
                      "path": "/nodes/{node}/storage/{storage}/status",
                      "slug": "nodes-node-storage-storage-status",
                      "label": "status",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-storage-storage-status",
                          "operationId": "get-nodes-node-storage-storage-status",
                          "path": "/nodes/{node}/storage/{storage}/status",
                          "httpMethod": "GET",
                          "name": "read_status",
                          "description": "Read storage status.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.Audit",
                                      "Datastore.AllocateSpace"
                                    ],
                                    "any",
                                    1
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-storage-storage-upload",
                      "path": "/nodes/{node}/storage/{storage}/upload",
                      "slug": "nodes-node-storage-storage-upload",
                      "label": "upload",
                      "endpoints": [
                        {
                          "id": "post-nodes-node-storage-storage-upload",
                          "operationId": "post-nodes-node-storage-storage-upload",
                          "path": "/nodes/{node}/storage/{storage}/upload",
                          "httpMethod": "POST",
                          "name": "upload",
                          "description": "Upload templates, ISO images, OVAs and VM images.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "check": [
                                    "perm",
                                    "/storage/{storage}",
                                    [
                                      "Datastore.AllocateTemplate"
                                    ]
                                  ]
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "checksum": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The expected checksum of the file.",
                                  "optional": true,
                                  "constraints": {
                                    "requires": [
                                      "checksum-algorithm"
                                    ]
                                  }
                                },
                                "checksum-algorithm": {
                                  "type": "string",
                                  "description": "The algorithm to calculate the checksum of the file.",
                                  "optional": true,
                                  "enum": [
                                    "md5",
                                    "sha1",
                                    "sha224",
                                    "sha256",
                                    "sha384",
                                    "sha512"
                                  ],
                                  "constraints": {
                                    "requires": [
                                      "checksum"
                                    ]
                                  }
                                },
                                "content": {
                                  "type": "string",
                                  "description": "Content type.",
                                  "enum": [
                                    "iso",
                                    "vztmpl",
                                    "import"
                                  ],
                                  "constraints": {
                                    "format": "pve-storage-content"
                                  }
                                },
                                "filename": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The name of the file to create. Caution: This will be normalized!",
                                  "constraints": {
                                    "maxLength": 255
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "storage": {
                                  "type": "string",
                                  "typetext": "<storage ID>",
                                  "description": "The storage identifier.",
                                  "constraints": {
                                    "format": "pve-storage-id",
                                    "formatDescription": "storage ID"
                                  }
                                },
                                "tmpfilename": {
                                  "type": "string",
                                  "description": "The source file name. This parameter is usually set by the REST handler. You can only overwrite it when connecting to the trusted port on localhost.",
                                  "optional": true,
                                  "constraints": {
                                    "pattern": "/var/tmp/pveupload-[0-9a-f]+"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "string"
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-subscription",
              "path": "/nodes/{node}/subscription",
              "slug": "nodes-node-subscription",
              "label": "subscription",
              "endpoints": [
                {
                  "id": "delete-nodes-node-subscription",
                  "operationId": "delete-nodes-node-subscription",
                  "path": "/nodes/{node}/subscription",
                  "httpMethod": "DELETE",
                  "name": "delete",
                  "description": "Delete subscription key of this node.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "get-nodes-node-subscription",
                  "operationId": "get-nodes-node-subscription",
                  "path": "/nodes/{node}/subscription",
                  "httpMethod": "GET",
                  "name": "get",
                  "description": "Read subscription info.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "checktime": {
                            "type": "integer",
                            "description": "Timestamp of the last check done.",
                            "optional": true
                          },
                          "key": {
                            "type": "string",
                            "description": "The subscription key, if set and permitted to access.",
                            "optional": true
                          },
                          "level": {
                            "type": "string",
                            "description": "A short code for the subscription level.",
                            "optional": true
                          },
                          "message": {
                            "type": "string",
                            "description": "A more human readable status message.",
                            "optional": true
                          },
                          "nextduedate": {
                            "type": "string",
                            "description": "Next due date of the set subscription.",
                            "optional": true
                          },
                          "productname": {
                            "type": "string",
                            "description": "Human readable productname of the set subscription.",
                            "optional": true
                          },
                          "regdate": {
                            "type": "string",
                            "description": "Register date of the set subscription.",
                            "optional": true
                          },
                          "serverid": {
                            "type": "string",
                            "description": "The server ID, if permitted to access.",
                            "optional": true
                          },
                          "signature": {
                            "type": "string",
                            "description": "Signature for offline keys",
                            "optional": true
                          },
                          "sockets": {
                            "type": "integer",
                            "description": "The number of sockets for this host.",
                            "optional": true
                          },
                          "status": {
                            "type": "string",
                            "description": "The current subscription status.",
                            "enum": [
                              "new",
                              "notfound",
                              "active",
                              "invalid",
                              "expired",
                              "suspended"
                            ]
                          },
                          "url": {
                            "type": "string",
                            "description": "URL to the web shop.",
                            "optional": true
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "post-nodes-node-subscription",
                  "operationId": "post-nodes-node-subscription",
                  "path": "/nodes/{node}/subscription",
                  "httpMethod": "POST",
                  "name": "update",
                  "description": "Update subscription info.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "force": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Always connect to server, even if local cache is still valid.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                },
                {
                  "id": "put-nodes-node-subscription",
                  "operationId": "put-nodes-node-subscription",
                  "path": "/nodes/{node}/subscription",
                  "httpMethod": "PUT",
                  "name": "set",
                  "description": "Set subscription key.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Proxmox VE subscription key",
                          "constraints": {
                            "maxLength": 32,
                            "pattern": "\\s*pve([1248])([cbsp])-[0-9a-f]{10}\\s*"
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-suspendall",
              "path": "/nodes/{node}/suspendall",
              "slug": "nodes-node-suspendall",
              "label": "suspendall",
              "endpoints": [
                {
                  "id": "post-nodes-node-suspendall",
                  "operationId": "post-nodes-node-suspendall",
                  "path": "/nodes/{node}/suspendall",
                  "httpMethod": "POST",
                  "name": "suspendall",
                  "description": "Suspend all VMs.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "The 'VM.PowerMgmt' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter. Additionally, you need 'VM.Config.Disk' on the '/vms/{vmid}' path and 'Datastore.AllocateSpace' for the configured state-storage(s)",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "vms": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only consider Guests with these IDs.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-syslog",
              "path": "/nodes/{node}/syslog",
              "slug": "nodes-node-syslog",
              "label": "syslog",
              "endpoints": [
                {
                  "id": "get-nodes-node-syslog",
                  "operationId": "get-nodes-node-syslog",
                  "path": "/nodes/{node}/syslog",
                  "httpMethod": "GET",
                  "name": "syslog",
                  "description": "Read system log",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Syslog"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "limit": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "service": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Service ID",
                          "optional": true,
                          "constraints": {
                            "maxLength": 128
                          }
                        },
                        "since": {
                          "type": "string",
                          "description": "Display all log since this date-time string.",
                          "optional": true,
                          "constraints": {
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}(:\\d{2})?)?$"
                          }
                        },
                        "start": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "optional": true,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "until": {
                          "type": "string",
                          "description": "Display all log until this date-time string.",
                          "optional": true,
                          "constraints": {
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}(:\\d{2})?)?$"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "n": {
                              "type": "integer",
                              "description": "Line number"
                            },
                            "t": {
                              "type": "string",
                              "description": "Line text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-tasks",
              "path": "/nodes/{node}/tasks",
              "slug": "nodes-node-tasks",
              "label": "tasks",
              "endpoints": [
                {
                  "id": "get-nodes-node-tasks",
                  "operationId": "get-nodes-node-tasks",
                  "path": "/nodes/{node}/tasks",
                  "httpMethod": "GET",
                  "name": "node_tasks",
                  "description": "Read task list for one node (finished tasks).",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "List task associated with the current user, or all task the user has 'Sys.Audit' permissions on /nodes/<node> (the <node> the task runs on).",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "errors": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Only list tasks with a status of ERROR.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "limit": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Only list this amount of tasks.",
                          "optional": true,
                          "defaultValue": 50,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "since": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Only list tasks since this UNIX epoch.",
                          "optional": true
                        },
                        "source": {
                          "type": "string",
                          "description": "List archived, active or all tasks.",
                          "optional": true,
                          "defaultValue": "archive",
                          "enum": [
                            "archive",
                            "active",
                            "all"
                          ]
                        },
                        "start": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "List tasks beginning from this offset.",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "statusfilter": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "List of Task States that should be returned.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-task-status-type-list"
                          }
                        },
                        "typefilter": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only list tasks of this type (e.g., vzstart, vzdump).",
                          "optional": true
                        },
                        "until": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Only list tasks until this UNIX epoch.",
                          "optional": true
                        },
                        "userfilter": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only list tasks from this user.",
                          "optional": true
                        },
                        "vmid": {
                          "type": "integer",
                          "typetext": "<integer> (100 - 999999999)",
                          "description": "Only list tasks for this VM.",
                          "optional": true,
                          "constraints": {
                            "minimum": 100,
                            "maximum": 999999999,
                            "format": "pve-vmid"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "endtime": {
                              "type": "integer",
                              "optional": true,
                              "metadata": {
                                "title": "Endtime"
                              }
                            },
                            "id": {
                              "type": "string",
                              "metadata": {
                                "title": "ID"
                              }
                            },
                            "node": {
                              "type": "string",
                              "metadata": {
                                "title": "Node"
                              }
                            },
                            "pid": {
                              "type": "integer",
                              "metadata": {
                                "title": "PID"
                              }
                            },
                            "pstart": {
                              "type": "integer"
                            },
                            "starttime": {
                              "type": "integer",
                              "metadata": {
                                "title": "Starttime"
                              }
                            },
                            "status": {
                              "type": "string",
                              "optional": true,
                              "metadata": {
                                "title": "Status"
                              }
                            },
                            "type": {
                              "type": "string",
                              "metadata": {
                                "title": "Type"
                              }
                            },
                            "upid": {
                              "type": "string",
                              "metadata": {
                                "title": "UPID"
                              }
                            },
                            "user": {
                              "type": "string",
                              "metadata": {
                                "title": "User"
                              }
                            }
                          }
                        },
                        "metadata": {
                          "links": [
                            {
                              "href": "{upid}",
                              "rel": "child"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-tasks-upid",
                  "path": "/nodes/{node}/tasks/{upid}",
                  "slug": "nodes-node-tasks-upid",
                  "label": "{upid}",
                  "endpoints": [
                    {
                      "id": "delete-nodes-node-tasks-upid",
                      "operationId": "delete-nodes-node-tasks-upid",
                      "path": "/nodes/{node}/tasks/{upid}",
                      "httpMethod": "DELETE",
                      "name": "stop_task",
                      "description": "Stop a task.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "The user needs 'Sys.Modify' permissions on '/nodes/<node>' if they aren't the owner of the task.",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "upid": {
                              "type": "string",
                              "typetext": "<string>"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "null"
                          }
                        }
                      ]
                    },
                    {
                      "id": "get-nodes-node-tasks-upid",
                      "operationId": "get-nodes-node-tasks-upid",
                      "path": "/nodes/{node}/tasks/{upid}",
                      "httpMethod": "GET",
                      "name": "upid_index",
                      "description": "",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "upid": {
                              "type": "string",
                              "typetext": "<string>"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "metadata": {
                              "links": [
                                {
                                  "href": "{name}",
                                  "rel": "child"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "children": [
                    {
                      "id": "nodes-node-tasks-upid-log",
                      "path": "/nodes/{node}/tasks/{upid}/log",
                      "slug": "nodes-node-tasks-upid-log",
                      "label": "log",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-tasks-upid-log",
                          "operationId": "get-nodes-node-tasks-upid-log",
                          "path": "/nodes/{node}/tasks/{upid}/log",
                          "httpMethod": "GET",
                          "name": "read_task_log",
                          "description": "Read task log.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "The user needs 'Sys.Audit' permissions on '/nodes/<node>' if they aren't the owner of the task.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "download": {
                                  "type": "boolean",
                                  "typetext": "<boolean>",
                                  "description": "Whether the tasklog file should be downloaded. This parameter can't be used in conjunction with other parameters",
                                  "optional": true
                                },
                                "limit": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "The amount of lines to read from the tasklog.",
                                  "optional": true,
                                  "defaultValue": 50,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "start": {
                                  "type": "integer",
                                  "typetext": "<integer> (0 - N)",
                                  "description": "Start at this line when reading the tasklog",
                                  "optional": true,
                                  "defaultValue": 0,
                                  "constraints": {
                                    "minimum": 0
                                  }
                                },
                                "upid": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The task's unique ID."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "n": {
                                      "type": "integer",
                                      "description": "Line number"
                                    },
                                    "t": {
                                      "type": "string",
                                      "description": "Line text"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    },
                    {
                      "id": "nodes-node-tasks-upid-status",
                      "path": "/nodes/{node}/tasks/{upid}/status",
                      "slug": "nodes-node-tasks-upid-status",
                      "label": "status",
                      "endpoints": [
                        {
                          "id": "get-nodes-node-tasks-upid-status",
                          "operationId": "get-nodes-node-tasks-upid-status",
                          "path": "/nodes/{node}/tasks/{upid}/status",
                          "httpMethod": "GET",
                          "name": "read_task_status",
                          "description": "Read task status.",
                          "security": {
                            "allowToken": true,
                            "requiresAuthentication": true,
                            "permissions": {
                              "all": [
                                {
                                  "description": "The user needs 'Sys.Audit' permissions on '/nodes/<node>' if they are not the owner of the task.",
                                  "user": "all"
                                }
                              ]
                            }
                          },
                          "features": {
                            "proxy": false,
                            "download": false,
                            "upload": false
                          },
                          "request": {
                            "schema": {
                              "properties": {
                                "node": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The cluster node name.",
                                  "constraints": {
                                    "format": "pve-node"
                                  }
                                },
                                "upid": {
                                  "type": "string",
                                  "typetext": "<string>",
                                  "description": "The task's unique ID."
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "responses": [
                            {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "exitstatus": {
                                    "type": "string",
                                    "optional": true
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "node": {
                                    "type": "string"
                                  },
                                  "pid": {
                                    "type": "integer"
                                  },
                                  "pstart": {
                                    "type": "integer"
                                  },
                                  "starttime": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "running",
                                      "stopped"
                                    ]
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "upid": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ],
                      "children": []
                    }
                  ]
                }
              ]
            },
            {
              "id": "nodes-node-termproxy",
              "path": "/nodes/{node}/termproxy",
              "slug": "nodes-node-termproxy",
              "label": "termproxy",
              "endpoints": [
                {
                  "id": "post-nodes-node-termproxy",
                  "operationId": "post-nodes-node-termproxy",
                  "path": "/nodes/{node}/termproxy",
                  "httpMethod": "POST",
                  "name": "termproxy",
                  "description": "Creates a VNC Shell proxy.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "cmd": {
                          "type": "string",
                          "description": "Run specific command or default to login (requires 'root@pam')",
                          "optional": true,
                          "defaultValue": "login",
                          "enum": [
                            "upgrade",
                            "ceph_install",
                            "login"
                          ]
                        },
                        "cmd-opts": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Add parameters to a command. Encoded as null terminated strings.",
                          "optional": true,
                          "defaultValue": "",
                          "constraints": {
                            "requires": [
                              "cmd"
                            ]
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "properties": {
                          "port": {
                            "type": "integer"
                          },
                          "ticket": {
                            "type": "string"
                          },
                          "upid": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-time",
              "path": "/nodes/{node}/time",
              "slug": "nodes-node-time",
              "label": "time",
              "endpoints": [
                {
                  "id": "get-nodes-node-time",
                  "operationId": "get-nodes-node-time",
                  "path": "/nodes/{node}/time",
                  "httpMethod": "GET",
                  "name": "time",
                  "description": "Read server time and time zone settings.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Audit"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "localtime": {
                            "type": "integer",
                            "description": "Seconds since 1970-01-01 00:00:00 (local time)",
                            "constraints": {
                              "minimum": 1297163644
                            },
                            "metadata": {
                              "renderer": "timestamp_gmt"
                            }
                          },
                          "time": {
                            "type": "integer",
                            "description": "Seconds since 1970-01-01 00:00:00 UTC.",
                            "constraints": {
                              "minimum": 1297163644
                            },
                            "metadata": {
                              "renderer": "timestamp"
                            }
                          },
                          "timezone": {
                            "type": "string",
                            "description": "Time zone"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                },
                {
                  "id": "put-nodes-node-time",
                  "operationId": "put-nodes-node-time",
                  "path": "/nodes/{node}/time",
                  "httpMethod": "PUT",
                  "name": "set_timezone",
                  "description": "Set time zone.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Modify"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "timezone": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Time zone. The file '/usr/share/zoneinfo/zone.tab' contains the list of valid names."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "null"
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-version",
              "path": "/nodes/{node}/version",
              "slug": "nodes-node-version",
              "label": "version",
              "endpoints": [
                {
                  "id": "get-nodes-node-version",
                  "operationId": "get-nodes-node-version",
                  "path": "/nodes/{node}/version",
                  "httpMethod": "GET",
                  "name": "version",
                  "description": "API version details",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "release": {
                            "type": "string",
                            "description": "The current installed Proxmox VE Release"
                          },
                          "repoid": {
                            "type": "string",
                            "description": "The short git commit hash ID from which this version was build"
                          },
                          "version": {
                            "type": "string",
                            "description": "The current installed pve-manager package version"
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-vncshell",
              "path": "/nodes/{node}/vncshell",
              "slug": "nodes-node-vncshell",
              "label": "vncshell",
              "endpoints": [
                {
                  "id": "post-nodes-node-vncshell",
                  "operationId": "post-nodes-node-vncshell",
                  "path": "/nodes/{node}/vncshell",
                  "httpMethod": "POST",
                  "name": "vncshell",
                  "description": "Creates a VNC Shell proxy.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "cmd": {
                          "type": "string",
                          "description": "Run specific command or default to login (requires 'root@pam')",
                          "optional": true,
                          "defaultValue": "login",
                          "enum": [
                            "upgrade",
                            "ceph_install",
                            "login"
                          ]
                        },
                        "cmd-opts": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Add parameters to a command. Encoded as null terminated strings.",
                          "optional": true,
                          "defaultValue": "",
                          "constraints": {
                            "requires": [
                              "cmd"
                            ]
                          }
                        },
                        "height": {
                          "type": "integer",
                          "typetext": "<integer> (16 - 2160)",
                          "description": "sets the height of the console in pixels.",
                          "optional": true,
                          "constraints": {
                            "minimum": 16,
                            "maximum": 2160
                          }
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "websocket": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "use websocket instead of standard vnc.",
                          "optional": true
                        },
                        "width": {
                          "type": "integer",
                          "typetext": "<integer> (16 - 4096)",
                          "description": "sets the width of the console in pixels.",
                          "optional": true,
                          "constraints": {
                            "minimum": 16,
                            "maximum": 4096
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "properties": {
                          "cert": {
                            "type": "string"
                          },
                          "port": {
                            "type": "integer"
                          },
                          "ticket": {
                            "type": "string"
                          },
                          "upid": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-vncwebsocket",
              "path": "/nodes/{node}/vncwebsocket",
              "slug": "nodes-node-vncwebsocket",
              "label": "vncwebsocket",
              "endpoints": [
                {
                  "id": "get-nodes-node-vncwebsocket",
                  "operationId": "get-nodes-node-vncwebsocket",
                  "path": "/nodes/{node}/vncwebsocket",
                  "httpMethod": "GET",
                  "name": "vncwebsocket",
                  "description": "Opens a websocket for VNC traffic.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": false,
                    "permissions": {
                      "all": [
                        {
                          "description": "You also need to pass a valid ticket (vncticket).",
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.Console"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The cluster node name.",
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "port": {
                          "type": "integer",
                          "typetext": "<integer> (5900 - 5999)",
                          "description": "Port number returned by previous vncproxy call.",
                          "constraints": {
                            "minimum": 5900,
                            "maximum": 5999
                          }
                        },
                        "vncticket": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Ticket from previous call to vncproxy.",
                          "constraints": {
                            "maxLength": 512
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "port": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            },
            {
              "id": "nodes-node-vzdump",
              "path": "/nodes/{node}/vzdump",
              "slug": "nodes-node-vzdump",
              "label": "vzdump",
              "endpoints": [
                {
                  "id": "post-nodes-node-vzdump",
                  "operationId": "post-nodes-node-vzdump",
                  "path": "/nodes/{node}/vzdump",
                  "httpMethod": "POST",
                  "name": "vzdump",
                  "description": "Create backup.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "description": "The user needs 'VM.Backup' permissions on any VM, and 'Datastore.AllocateSpace' on the backup storage (and fleecing storage when fleecing is used). The 'tmpdir', 'dumpdir', 'script' and 'job-id' parameters are restricted to the 'root@pam' user. The 'prune-backups' setting requires 'Datastore.Allocate' on the backup storage. The 'bwlimit', 'performance' and 'ionice' parameters require 'Sys.Modify' on '/'.",
                          "user": "all"
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Backup all known guest systems on this host.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "bwlimit": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Limit I/O bandwidth (in KiB/s).",
                          "optional": true,
                          "defaultValue": 0,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "compress": {
                          "type": "string",
                          "description": "Compress dump file.",
                          "optional": true,
                          "defaultValue": "0",
                          "enum": [
                            "0",
                            "1",
                            "gzip",
                            "lzo",
                            "zstd"
                          ]
                        },
                        "dumpdir": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Store resulting files to specified directory.",
                          "optional": true
                        },
                        "exclude": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Exclude specified guest systems (assumes --all)",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        },
                        "exclude-path": {
                          "type": "array",
                          "typetext": "<array>",
                          "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                          "optional": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "fleecing": {
                          "type": "string",
                          "typetext": "[[enabled=]<1|0>] [,storage=<storage ID>]",
                          "description": "Options for backup fleecing (VM only).",
                          "optional": true,
                          "constraints": {
                            "format": "backup-fleecing"
                          }
                        },
                        "ionice": {
                          "type": "integer",
                          "typetext": "<integer> (0 - 8)",
                          "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                          "optional": true,
                          "defaultValue": 7,
                          "constraints": {
                            "minimum": 0,
                            "maximum": 8
                          }
                        },
                        "job-id": {
                          "type": "string",
                          "description": "The ID of the backup job. If set, the 'backup-job' metadata field of the backup notification will be set to this value. Only root@pam can set this parameter.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 50,
                            "pattern": "\\S+"
                          }
                        },
                        "lockwait": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Maximal time to wait for the global lock (minutes).",
                          "optional": true,
                          "defaultValue": 180,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "mailnotification": {
                          "type": "string",
                          "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                          "optional": true,
                          "defaultValue": "always",
                          "enum": [
                            "always",
                            "failure"
                          ]
                        },
                        "mailto": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                          "optional": true,
                          "constraints": {
                            "format": "email-or-username-list"
                          }
                        },
                        "maxfiles": {
                          "type": "integer",
                          "typetext": "<integer> (1 - N)",
                          "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                          "optional": true,
                          "constraints": {
                            "minimum": 1
                          }
                        },
                        "mode": {
                          "type": "string",
                          "description": "Backup mode.",
                          "optional": true,
                          "defaultValue": "snapshot",
                          "enum": [
                            "snapshot",
                            "suspend",
                            "stop"
                          ]
                        },
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Only run if executed on this node.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-node"
                          }
                        },
                        "notes-template": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                          "optional": true,
                          "constraints": {
                            "maxLength": 1024,
                            "requires": [
                              "storage"
                            ]
                          }
                        },
                        "notification-mode": {
                          "type": "string",
                          "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                          "optional": true,
                          "defaultValue": "auto",
                          "enum": [
                            "auto",
                            "legacy-sendmail",
                            "notification-system"
                          ]
                        },
                        "pbs-change-detection-mode": {
                          "type": "string",
                          "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                          "optional": true,
                          "enum": [
                            "legacy",
                            "data",
                            "metadata"
                          ]
                        },
                        "performance": {
                          "type": "string",
                          "typetext": "[max-workers=<integer>] [,pbs-entries-max=<integer>]",
                          "description": "Other performance-related settings.",
                          "optional": true,
                          "constraints": {
                            "format": "backup-performance"
                          }
                        },
                        "pigz": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "pool": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Backup all known guest systems included in the specified pool.",
                          "optional": true
                        },
                        "protected": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "If true, mark backup(s) as protected.",
                          "optional": true,
                          "constraints": {
                            "requires": [
                              "storage"
                            ]
                          }
                        },
                        "prune-backups": {
                          "type": "string",
                          "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                          "description": "Use these retention options instead of those from the storage configuration.",
                          "optional": true,
                          "defaultValue": "keep-all=1",
                          "constraints": {
                            "format": "prune-backups"
                          }
                        },
                        "quiet": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Be quiet.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "remove": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Prune older backups according to 'prune-backups'.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "script": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Use specified hook script.",
                          "optional": true
                        },
                        "stdexcludes": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Exclude temporary files and logs.",
                          "optional": true,
                          "defaultValue": 1
                        },
                        "stdout": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Write tar to stdout, not to a file.",
                          "optional": true
                        },
                        "stop": {
                          "type": "boolean",
                          "typetext": "<boolean>",
                          "description": "Stop running backup jobs on this host.",
                          "optional": true,
                          "defaultValue": 0
                        },
                        "stopwait": {
                          "type": "integer",
                          "typetext": "<integer> (0 - N)",
                          "description": "Maximal time to wait until a guest system is stopped (minutes).",
                          "optional": true,
                          "defaultValue": 10,
                          "constraints": {
                            "minimum": 0
                          }
                        },
                        "storage": {
                          "type": "string",
                          "typetext": "<storage ID>",
                          "description": "Store resulting file to this storage.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-storage-id",
                            "formatDescription": "storage ID"
                          }
                        },
                        "tmpdir": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "Store temporary files to specified directory.",
                          "optional": true
                        },
                        "vmid": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "The ID of the guest system you want to backup.",
                          "optional": true,
                          "constraints": {
                            "format": "pve-vmid-list"
                          }
                        },
                        "zstd": {
                          "type": "integer",
                          "typetext": "<integer>",
                          "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                          "optional": true,
                          "defaultValue": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "schema": {
                        "type": "string"
                      }
                    }
                  ]
                }
              ],
              "children": [
                {
                  "id": "nodes-node-vzdump-defaults",
                  "path": "/nodes/{node}/vzdump/defaults",
                  "slug": "nodes-node-vzdump-defaults",
                  "label": "defaults",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-vzdump-defaults",
                      "operationId": "get-nodes-node-vzdump-defaults",
                      "path": "/nodes/{node}/vzdump/defaults",
                      "httpMethod": "GET",
                      "name": "defaults",
                      "description": "Get the currently configured vzdump defaults.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": false,
                        "permissions": {
                          "all": [
                            {
                              "description": "The user needs 'Datastore.Audit' or 'Datastore.AllocateSpace' permissions for the specified storage (or default storage if none specified). Some properties are only returned when the user has 'Sys.Audit' permissions for the node.",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "storage": {
                              "type": "string",
                              "typetext": "<storage ID>",
                              "description": "The storage identifier.",
                              "optional": true,
                              "constraints": {
                                "format": "pve-storage-id",
                                "formatDescription": "storage ID"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "all": {
                                "type": "boolean",
                                "description": "Backup all known guest systems on this host.",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "bwlimit": {
                                "type": "integer",
                                "description": "Limit I/O bandwidth (in KiB/s).",
                                "optional": true,
                                "defaultValue": 0,
                                "constraints": {
                                  "minimum": 0
                                }
                              },
                              "compress": {
                                "type": "string",
                                "description": "Compress dump file.",
                                "optional": true,
                                "defaultValue": "0",
                                "enum": [
                                  "0",
                                  "1",
                                  "gzip",
                                  "lzo",
                                  "zstd"
                                ]
                              },
                              "dumpdir": {
                                "type": "string",
                                "description": "Store resulting files to specified directory.",
                                "optional": true
                              },
                              "exclude": {
                                "type": "string",
                                "description": "Exclude specified guest systems (assumes --all)",
                                "optional": true,
                                "constraints": {
                                  "format": "pve-vmid-list"
                                }
                              },
                              "exclude-path": {
                                "type": "array",
                                "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                                "optional": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fleecing": {
                                "type": "string",
                                "description": "Options for backup fleecing (VM only).",
                                "optional": true,
                                "constraints": {
                                  "format": "backup-fleecing"
                                }
                              },
                              "ionice": {
                                "type": "integer",
                                "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                                "optional": true,
                                "defaultValue": 7,
                                "constraints": {
                                  "minimum": 0,
                                  "maximum": 8
                                }
                              },
                              "lockwait": {
                                "type": "integer",
                                "description": "Maximal time to wait for the global lock (minutes).",
                                "optional": true,
                                "defaultValue": 180,
                                "constraints": {
                                  "minimum": 0
                                }
                              },
                              "mailnotification": {
                                "type": "string",
                                "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                                "optional": true,
                                "defaultValue": "always",
                                "enum": [
                                  "always",
                                  "failure"
                                ]
                              },
                              "mailto": {
                                "type": "string",
                                "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                                "optional": true,
                                "constraints": {
                                  "format": "email-or-username-list"
                                }
                              },
                              "maxfiles": {
                                "type": "integer",
                                "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                                "optional": true,
                                "constraints": {
                                  "minimum": 1
                                }
                              },
                              "mode": {
                                "type": "string",
                                "description": "Backup mode.",
                                "optional": true,
                                "defaultValue": "snapshot",
                                "enum": [
                                  "snapshot",
                                  "suspend",
                                  "stop"
                                ]
                              },
                              "node": {
                                "type": "string",
                                "description": "Only run if executed on this node.",
                                "optional": true,
                                "constraints": {
                                  "format": "pve-node"
                                }
                              },
                              "notes-template": {
                                "type": "string",
                                "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                                "optional": true,
                                "constraints": {
                                  "maxLength": 1024,
                                  "requires": [
                                    "storage"
                                  ]
                                }
                              },
                              "notification-mode": {
                                "type": "string",
                                "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                                "optional": true,
                                "defaultValue": "auto",
                                "enum": [
                                  "auto",
                                  "legacy-sendmail",
                                  "notification-system"
                                ]
                              },
                              "pbs-change-detection-mode": {
                                "type": "string",
                                "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                                "optional": true,
                                "enum": [
                                  "legacy",
                                  "data",
                                  "metadata"
                                ]
                              },
                              "performance": {
                                "type": "string",
                                "description": "Other performance-related settings.",
                                "optional": true,
                                "constraints": {
                                  "format": "backup-performance"
                                }
                              },
                              "pigz": {
                                "type": "integer",
                                "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "pool": {
                                "type": "string",
                                "description": "Backup all known guest systems included in the specified pool.",
                                "optional": true
                              },
                              "protected": {
                                "type": "boolean",
                                "description": "If true, mark backup(s) as protected.",
                                "optional": true,
                                "constraints": {
                                  "requires": [
                                    "storage"
                                  ]
                                }
                              },
                              "prune-backups": {
                                "type": "string",
                                "description": "Use these retention options instead of those from the storage configuration.",
                                "optional": true,
                                "defaultValue": "keep-all=1",
                                "constraints": {
                                  "format": "prune-backups"
                                }
                              },
                              "quiet": {
                                "type": "boolean",
                                "description": "Be quiet.",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "remove": {
                                "type": "boolean",
                                "description": "Prune older backups according to 'prune-backups'.",
                                "optional": true,
                                "defaultValue": 1
                              },
                              "script": {
                                "type": "string",
                                "description": "Use specified hook script.",
                                "optional": true
                              },
                              "stdexcludes": {
                                "type": "boolean",
                                "description": "Exclude temporary files and logs.",
                                "optional": true,
                                "defaultValue": 1
                              },
                              "stop": {
                                "type": "boolean",
                                "description": "Stop running backup jobs on this host.",
                                "optional": true,
                                "defaultValue": 0
                              },
                              "stopwait": {
                                "type": "integer",
                                "description": "Maximal time to wait until a guest system is stopped (minutes).",
                                "optional": true,
                                "defaultValue": 10,
                                "constraints": {
                                  "minimum": 0
                                }
                              },
                              "storage": {
                                "type": "string",
                                "description": "Store resulting file to this storage.",
                                "optional": true,
                                "constraints": {
                                  "format": "pve-storage-id",
                                  "formatDescription": "storage ID"
                                }
                              },
                              "tmpdir": {
                                "type": "string",
                                "description": "Store temporary files to specified directory.",
                                "optional": true
                              },
                              "vmid": {
                                "type": "string",
                                "description": "The ID of the guest system you want to backup.",
                                "optional": true,
                                "constraints": {
                                  "format": "pve-vmid-list"
                                }
                              },
                              "zstd": {
                                "type": "integer",
                                "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                                "optional": true,
                                "defaultValue": 1
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                },
                {
                  "id": "nodes-node-vzdump-extractconfig",
                  "path": "/nodes/{node}/vzdump/extractconfig",
                  "slug": "nodes-node-vzdump-extractconfig",
                  "label": "extractconfig",
                  "endpoints": [
                    {
                      "id": "get-nodes-node-vzdump-extractconfig",
                      "operationId": "get-nodes-node-vzdump-extractconfig",
                      "path": "/nodes/{node}/vzdump/extractconfig",
                      "httpMethod": "GET",
                      "name": "extractconfig",
                      "description": "Extract configuration from vzdump backup archive.",
                      "security": {
                        "allowToken": true,
                        "requiresAuthentication": true,
                        "permissions": {
                          "all": [
                            {
                              "description": "The user needs 'VM.Backup' permissions on the backed up guest ID, and 'Datastore.AllocateSpace' on the backup storage.",
                              "user": "all"
                            }
                          ]
                        }
                      },
                      "features": {
                        "proxy": false,
                        "download": false,
                        "upload": false
                      },
                      "request": {
                        "schema": {
                          "properties": {
                            "node": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "The cluster node name.",
                              "constraints": {
                                "format": "pve-node"
                              }
                            },
                            "volume": {
                              "type": "string",
                              "typetext": "<string>",
                              "description": "Volume identifier"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "responses": [
                        {
                          "schema": {
                            "type": "string"
                          }
                        }
                      ]
                    }
                  ],
                  "children": []
                }
              ]
            },
            {
              "id": "nodes-node-wakeonlan",
              "path": "/nodes/{node}/wakeonlan",
              "slug": "nodes-node-wakeonlan",
              "label": "wakeonlan",
              "endpoints": [
                {
                  "id": "post-nodes-node-wakeonlan",
                  "operationId": "post-nodes-node-wakeonlan",
                  "path": "/nodes/{node}/wakeonlan",
                  "httpMethod": "POST",
                  "name": "wakeonlan",
                  "description": "Try to wake a node via 'wake on LAN' network packet.",
                  "security": {
                    "allowToken": true,
                    "requiresAuthentication": true,
                    "permissions": {
                      "all": [
                        {
                          "check": [
                            "perm",
                            "/nodes/{node}",
                            [
                              "Sys.PowerMgmt"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "features": {
                    "proxy": false,
                    "download": false,
                    "upload": false
                  },
                  "request": {
                    "schema": {
                      "properties": {
                        "node": {
                          "type": "string",
                          "typetext": "<string>",
                          "description": "target node for wake on LAN packet",
                          "constraints": {
                            "format": "pve-node"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "responses": [
                    {
                      "description": "MAC address used to assemble the WoL magic packet.",
                      "schema": {
                        "type": "string",
                        "description": "MAC address used to assemble the WoL magic packet.",
                        "constraints": {
                          "format": "mac-addr"
                        }
                      }
                    }
                  ]
                }
              ],
              "children": []
            }
          ]
        }
      ]
    },
    {
      "id": "pools",
      "path": "/pools",
      "slug": "pools",
      "label": "pools",
      "endpoints": [
        {
          "id": "delete-pools",
          "operationId": "delete-pools",
          "path": "/pools",
          "httpMethod": "DELETE",
          "name": "delete_pool",
          "description": "Delete pool.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": true,
            "permissions": {
              "all": [
                {
                  "description": "You can only delete empty pools (no members).",
                  "check": [
                    "perm",
                    "/pool/{poolid}",
                    [
                      "Pool.Allocate"
                    ]
                  ]
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "properties": {
                "poolid": {
                  "type": "string",
                  "typetext": "<string>",
                  "constraints": {
                    "format": "pve-poolid"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "null"
              }
            }
          ]
        },
        {
          "id": "get-pools",
          "operationId": "get-pools",
          "path": "/pools",
          "httpMethod": "GET",
          "name": "index",
          "description": "List pools or get pool configuration.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": false,
            "permissions": {
              "all": [
                {
                  "description": "List all pools where you have Pool.Audit permissions on /pool/<pool>, or the pool specific with {poolid}",
                  "user": "all"
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "properties": {
                "poolid": {
                  "type": "string",
                  "typetext": "<string>",
                  "optional": true,
                  "constraints": {
                    "format": "pve-poolid"
                  }
                },
                "type": {
                  "type": "string",
                  "optional": true,
                  "enum": [
                    "qemu",
                    "lxc",
                    "storage"
                  ],
                  "constraints": {
                    "requires": [
                      "poolid"
                    ]
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "optional": true
                    },
                    "members": {
                      "type": "array",
                      "optional": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "node": {
                            "type": "string"
                          },
                          "storage": {
                            "type": "string",
                            "optional": true
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "qemu",
                              "lxc",
                              "openvz",
                              "storage"
                            ]
                          },
                          "vmid": {
                            "type": "integer",
                            "optional": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "poolid": {
                      "type": "string"
                    }
                  }
                },
                "metadata": {
                  "links": [
                    {
                      "href": "{poolid}",
                      "rel": "child"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": "post-pools",
          "operationId": "post-pools",
          "path": "/pools",
          "httpMethod": "POST",
          "name": "create_pool",
          "description": "Create new pool.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": true,
            "permissions": {
              "all": [
                {
                  "check": [
                    "perm",
                    "/pool/{poolid}",
                    [
                      "Pool.Allocate"
                    ]
                  ]
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "properties": {
                "comment": {
                  "type": "string",
                  "typetext": "<string>",
                  "optional": true
                },
                "poolid": {
                  "type": "string",
                  "typetext": "<string>",
                  "constraints": {
                    "format": "pve-poolid"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "null"
              }
            }
          ]
        },
        {
          "id": "put-pools",
          "operationId": "put-pools",
          "path": "/pools",
          "httpMethod": "PUT",
          "name": "update_pool",
          "description": "Update pool.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": true,
            "permissions": {
              "all": [
                {
                  "description": "You also need the right to modify permissions on any object you add/delete.",
                  "check": [
                    "perm",
                    "/pool/{poolid}",
                    [
                      "Pool.Allocate"
                    ]
                  ]
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "properties": {
                "allow-move": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Allow adding a guest even if already in another pool. The guest will be removed from its current pool and added to this one.",
                  "optional": true,
                  "defaultValue": 0
                },
                "comment": {
                  "type": "string",
                  "typetext": "<string>",
                  "optional": true
                },
                "delete": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Remove the passed VMIDs and/or storage IDs instead of adding them.",
                  "optional": true,
                  "defaultValue": 0
                },
                "poolid": {
                  "type": "string",
                  "typetext": "<string>",
                  "constraints": {
                    "format": "pve-poolid"
                  }
                },
                "storage": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "List of storage IDs to add or remove from this pool.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-id-list"
                  }
                },
                "vms": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "List of guest VMIDs to add or remove from this pool.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-vmid-list"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "null"
              }
            }
          ]
        }
      ],
      "children": [
        {
          "id": "pools-poolid",
          "path": "/pools/{poolid}",
          "slug": "pools-poolid",
          "label": "{poolid}",
          "endpoints": [
            {
              "id": "delete-pools-poolid",
              "operationId": "delete-pools-poolid",
              "path": "/pools/{poolid}",
              "httpMethod": "DELETE",
              "name": "delete_pool_deprecated",
              "description": "Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "You can only delete empty pools (no members).",
                      "check": [
                        "perm",
                        "/pool/{poolid}",
                        [
                          "Pool.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "poolid": {
                      "type": "string",
                      "typetext": "<string>",
                      "constraints": {
                        "format": "pve-poolid"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            },
            {
              "id": "get-pools-poolid",
              "operationId": "get-pools-poolid",
              "path": "/pools/{poolid}",
              "httpMethod": "GET",
              "name": "read_pool",
              "description": "Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/pool/{poolid}",
                        [
                          "Pool.Audit"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "poolid": {
                      "type": "string",
                      "typetext": "<string>",
                      "constraints": {
                        "format": "pve-poolid"
                      }
                    },
                    "type": {
                      "type": "string",
                      "optional": true,
                      "enum": [
                        "qemu",
                        "lxc",
                        "storage"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "optional": true
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "node": {
                              "type": "string"
                            },
                            "storage": {
                              "type": "string",
                              "optional": true
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "qemu",
                                "lxc",
                                "openvz",
                                "storage"
                              ]
                            },
                            "vmid": {
                              "type": "integer",
                              "optional": true
                            }
                          },
                          "additionalProperties": true
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              ]
            },
            {
              "id": "put-pools-poolid",
              "operationId": "put-pools-poolid",
              "path": "/pools/{poolid}",
              "httpMethod": "PUT",
              "name": "update_pool_deprecated",
              "description": "Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "description": "You also need the right to modify permissions on any object you add/delete.",
                      "check": [
                        "perm",
                        "/pool/{poolid}",
                        [
                          "Pool.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "allow-move": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Allow adding a guest even if already in another pool. The guest will be removed from its current pool and added to this one.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "comment": {
                      "type": "string",
                      "typetext": "<string>",
                      "optional": true
                    },
                    "delete": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Remove the passed VMIDs and/or storage IDs instead of adding them.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "poolid": {
                      "type": "string",
                      "typetext": "<string>",
                      "constraints": {
                        "format": "pve-poolid"
                      }
                    },
                    "storage": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of storage IDs to add or remove from this pool.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-id-list"
                      }
                    },
                    "vms": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of guest VMIDs to add or remove from this pool.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-vmid-list"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            }
          ],
          "children": []
        }
      ]
    },
    {
      "id": "storage",
      "path": "/storage",
      "slug": "storage",
      "label": "storage",
      "endpoints": [
        {
          "id": "get-storage",
          "operationId": "get-storage",
          "path": "/storage",
          "httpMethod": "GET",
          "name": "index",
          "description": "Storage index.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": false,
            "permissions": {
              "all": [
                {
                  "description": "Only list entries where you have 'Datastore.Audit' or 'Datastore.AllocateSpace' permissions on '/storage/<storage>'",
                  "user": "all"
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Only list storage of specific type",
                  "optional": true,
                  "enum": [
                    "btrfs",
                    "cephfs",
                    "cifs",
                    "dir",
                    "esxi",
                    "iscsi",
                    "iscsidirect",
                    "lvm",
                    "lvmthin",
                    "nfs",
                    "pbs",
                    "rbd",
                    "zfs",
                    "zfspool"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "storage": {
                      "type": "string"
                    }
                  }
                },
                "metadata": {
                  "links": [
                    {
                      "href": "{storage}",
                      "rel": "child"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": "post-storage",
          "operationId": "post-storage",
          "path": "/storage",
          "httpMethod": "POST",
          "name": "create",
          "description": "Create a new storage.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": true,
            "permissions": {
              "all": [
                {
                  "check": [
                    "perm",
                    "/storage",
                    [
                      "Datastore.Allocate"
                    ]
                  ]
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "type": "object",
              "properties": {
                "authsupported": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Authsupported.",
                  "optional": true
                },
                "base": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Base volume. This volume is automatically activated.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-volume-id"
                  }
                },
                "blocksize": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "block size",
                  "optional": true
                },
                "bwlimit": {
                  "type": "string",
                  "typetext": "[clone=<LIMIT>] [,default=<LIMIT>] [,migration=<LIMIT>] [,move=<LIMIT>] [,restore=<LIMIT>]",
                  "description": "Set I/O bandwidth limit for various operations (in KiB/s).",
                  "optional": true
                },
                "comstar_hg": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "host group for comstar views",
                  "optional": true
                },
                "comstar_tg": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "target group for comstar views",
                  "optional": true
                },
                "content": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Allowed content types.\n\nNOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs.\n",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-content-list"
                  }
                },
                "content-dirs": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Overrides for default content type directories.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-dir-override-list"
                  }
                },
                "create-base-path": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Create the base directory if it doesn't exist.",
                  "optional": true,
                  "defaultValue": "yes"
                },
                "create-subdirs": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Populate the directory with the default structure.",
                  "optional": true,
                  "defaultValue": "yes"
                },
                "data-pool": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Data Pool (for erasure coding only)",
                  "optional": true
                },
                "datastore": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Proxmox Backup Server datastore name.",
                  "optional": true
                },
                "disable": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Flag to disable the storage.",
                  "optional": true
                },
                "domain": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "CIFS domain.",
                  "optional": true,
                  "constraints": {
                    "maxLength": 256
                  }
                },
                "encryption-key": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Encryption key. Use 'autogen' to generate one automatically without passphrase.",
                  "optional": true
                },
                "export": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "NFS export path.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-path"
                  }
                },
                "fingerprint": {
                  "type": "string",
                  "description": "Certificate SHA 256 fingerprint.",
                  "optional": true,
                  "constraints": {
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  }
                },
                "format": {
                  "type": "string",
                  "description": "Default image format.",
                  "optional": true,
                  "enum": [
                    "raw",
                    "qcow2",
                    "subvol",
                    "vmdk"
                  ]
                },
                "fs-name": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "The Ceph filesystem name.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-configid"
                  }
                },
                "fuse": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Mount CephFS through FUSE.",
                  "optional": true
                },
                "is_mountpoint": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.",
                  "optional": true,
                  "defaultValue": "no"
                },
                "iscsiprovider": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "iscsi provider",
                  "optional": true
                },
                "keyring": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Client keyring contents (for external clusters).",
                  "optional": true
                },
                "krbd": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Always access rbd through krbd kernel module.",
                  "optional": true,
                  "defaultValue": 0
                },
                "lio_tpg": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "target portal group for Linux LIO targets",
                  "optional": true
                },
                "master-pubkey": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup.",
                  "optional": true
                },
                "max-protected-backups": {
                  "type": "integer",
                  "typetext": "<integer> (-1 - N)",
                  "description": "Maximal number of protected backups per guest. Use '-1' for unlimited.",
                  "optional": true,
                  "defaultValue": "Unlimited for users with Datastore.Allocate privilege, 5 for other users",
                  "constraints": {
                    "minimum": -1
                  }
                },
                "mkdir": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.",
                  "optional": true,
                  "defaultValue": "yes"
                },
                "monhost": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "IP addresses of monitors (for external clusters).",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-portal-dns-list"
                  }
                },
                "mountpoint": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "mount point",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-path"
                  }
                },
                "namespace": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Namespace.",
                  "optional": true
                },
                "nocow": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.",
                  "optional": true,
                  "defaultValue": 0
                },
                "nodes": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "List of nodes for which the storage configuration applies.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-node-list"
                  }
                },
                "nowritecache": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "disable write caching on the target",
                  "optional": true
                },
                "options": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-options"
                  }
                },
                "password": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Password for accessing the share/datastore.",
                  "optional": true,
                  "constraints": {
                    "maxLength": 256
                  }
                },
                "path": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "File system path.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-path"
                  }
                },
                "pool": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Pool.",
                  "optional": true
                },
                "port": {
                  "type": "integer",
                  "typetext": "<integer> (1 - 65535)",
                  "description": "Use this port to connect to the storage instead of the default one (for example, with PBS or ESXi). For NFS and CIFS, use the 'options' option to configure the port via the mount options.",
                  "optional": true,
                  "constraints": {
                    "minimum": 1,
                    "maximum": 65535
                  }
                },
                "portal": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "iSCSI portal (IP or DNS name with optional port).",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-portal-dns"
                  }
                },
                "preallocation": {
                  "type": "string",
                  "description": "Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.",
                  "optional": true,
                  "defaultValue": "metadata",
                  "enum": [
                    "off",
                    "metadata",
                    "falloc",
                    "full"
                  ]
                },
                "prune-backups": {
                  "type": "string",
                  "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                  "description": "The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups.",
                  "optional": true,
                  "constraints": {
                    "format": "prune-backups"
                  }
                },
                "saferemove": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Zero-out data when removing LVs.",
                  "optional": true
                },
                "saferemove_throughput": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Wipe throughput (cstream -t parameter value).",
                  "optional": true
                },
                "server": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Server IP or DNS name.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-server"
                  }
                },
                "share": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "CIFS share.",
                  "optional": true
                },
                "shared": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Indicate that this is a single storage with the same contents on all nodes (or all listed in the 'nodes' option). It will not make the contents of a local storage automatically accessible to other nodes, it just marks an already shared storage as such!",
                  "optional": true
                },
                "skip-cert-verification": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Disable TLS certificate verification, only enable on fully trusted networks!",
                  "optional": true,
                  "defaultValue": "false"
                },
                "smbversion": {
                  "type": "string",
                  "description": "SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.",
                  "optional": true,
                  "defaultValue": "default",
                  "enum": [
                    "default",
                    "2.0",
                    "2.1",
                    "3",
                    "3.0",
                    "3.11"
                  ]
                },
                "snapshot-as-volume-chain": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Enable support for creating storage-vendor agnostic snapshot through volume backing-chains.",
                  "optional": true,
                  "defaultValue": 0
                },
                "sparse": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "use sparse volumes",
                  "optional": true
                },
                "storage": {
                  "type": "string",
                  "typetext": "<storage ID>",
                  "description": "The storage identifier.",
                  "constraints": {
                    "format": "pve-storage-id",
                    "formatDescription": "storage ID"
                  }
                },
                "subdir": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Subdir to mount.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-path"
                  }
                },
                "tagged_only": {
                  "type": "boolean",
                  "typetext": "<boolean>",
                  "description": "Only use logical volumes tagged with 'pve-vm-ID'.",
                  "optional": true
                },
                "target": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "iSCSI target.",
                  "optional": true
                },
                "thinpool": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "LVM thin pool LV name.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-vgname"
                  }
                },
                "type": {
                  "type": "string",
                  "description": "Storage type.",
                  "enum": [
                    "btrfs",
                    "cephfs",
                    "cifs",
                    "dir",
                    "esxi",
                    "iscsi",
                    "iscsidirect",
                    "lvm",
                    "lvmthin",
                    "nfs",
                    "pbs",
                    "rbd",
                    "zfs",
                    "zfspool"
                  ]
                },
                "username": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "RBD Id.",
                  "optional": true
                },
                "vgname": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Volume group name.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-vgname"
                  }
                },
                "zfs-base-path": {
                  "type": "string",
                  "typetext": "<string>",
                  "description": "Base path where to look for the created ZFS block devices. Set automatically during creation if not specified. Usually '/dev/zvol'.",
                  "optional": true,
                  "constraints": {
                    "format": "pve-storage-path"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Partial, possible server generated, configuration properties.",
                    "optional": true,
                    "properties": {
                      "encryption-key": {
                        "type": "string",
                        "description": "The, possible auto-generated, encryption-key.",
                        "optional": true
                      }
                    },
                    "additionalProperties": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "The ID of the created storage."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the created storage.",
                    "enum": [
                      "btrfs",
                      "cephfs",
                      "cifs",
                      "dir",
                      "esxi",
                      "iscsi",
                      "iscsidirect",
                      "lvm",
                      "lvmthin",
                      "nfs",
                      "pbs",
                      "rbd",
                      "zfs",
                      "zfspool"
                    ]
                  }
                }
              }
            }
          ]
        }
      ],
      "children": [
        {
          "id": "storage-storage",
          "path": "/storage/{storage}",
          "slug": "storage-storage",
          "label": "{storage}",
          "endpoints": [
            {
              "id": "delete-storage-storage",
              "operationId": "delete-storage-storage",
              "path": "/storage/{storage}",
              "httpMethod": "DELETE",
              "name": "delete",
              "description": "Delete storage configuration.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/storage",
                        [
                          "Datastore.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "storage": {
                      "type": "string",
                      "typetext": "<storage ID>",
                      "description": "The storage identifier.",
                      "constraints": {
                        "format": "pve-storage-id",
                        "formatDescription": "storage ID"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "null"
                  }
                }
              ]
            },
            {
              "id": "get-storage-storage",
              "operationId": "get-storage-storage",
              "path": "/storage/{storage}",
              "httpMethod": "GET",
              "name": "read",
              "description": "Read storage configuration.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": false,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/storage/{storage}",
                        [
                          "Datastore.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "properties": {
                    "storage": {
                      "type": "string",
                      "typetext": "<storage ID>",
                      "description": "The storage identifier.",
                      "constraints": {
                        "format": "pve-storage-id",
                        "formatDescription": "storage ID"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "object"
                  }
                }
              ]
            },
            {
              "id": "put-storage-storage",
              "operationId": "put-storage-storage",
              "path": "/storage/{storage}",
              "httpMethod": "PUT",
              "name": "update",
              "description": "Update storage configuration.",
              "security": {
                "allowToken": true,
                "requiresAuthentication": true,
                "permissions": {
                  "all": [
                    {
                      "check": [
                        "perm",
                        "/storage",
                        [
                          "Datastore.Allocate"
                        ]
                      ]
                    }
                  ]
                }
              },
              "features": {
                "proxy": false,
                "download": false,
                "upload": false
              },
              "request": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocksize": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "block size",
                      "optional": true
                    },
                    "bwlimit": {
                      "type": "string",
                      "typetext": "[clone=<LIMIT>] [,default=<LIMIT>] [,migration=<LIMIT>] [,move=<LIMIT>] [,restore=<LIMIT>]",
                      "description": "Set I/O bandwidth limit for various operations (in KiB/s).",
                      "optional": true
                    },
                    "comstar_hg": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "host group for comstar views",
                      "optional": true
                    },
                    "comstar_tg": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "target group for comstar views",
                      "optional": true
                    },
                    "content": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Allowed content types.\n\nNOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs.\n",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-content-list"
                      }
                    },
                    "content-dirs": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Overrides for default content type directories.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-dir-override-list"
                      }
                    },
                    "create-base-path": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Create the base directory if it doesn't exist.",
                      "optional": true,
                      "defaultValue": "yes"
                    },
                    "create-subdirs": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Populate the directory with the default structure.",
                      "optional": true,
                      "defaultValue": "yes"
                    },
                    "data-pool": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Data Pool (for erasure coding only)",
                      "optional": true
                    },
                    "delete": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "A list of settings you want to delete.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 4096,
                        "format": "pve-configid-list"
                      }
                    },
                    "digest": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 64
                      }
                    },
                    "disable": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Flag to disable the storage.",
                      "optional": true
                    },
                    "domain": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "CIFS domain.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "encryption-key": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Encryption key. Use 'autogen' to generate one automatically without passphrase.",
                      "optional": true
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "Certificate SHA 256 fingerprint.",
                      "optional": true,
                      "constraints": {
                        "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                      }
                    },
                    "format": {
                      "type": "string",
                      "description": "Default image format.",
                      "optional": true,
                      "enum": [
                        "raw",
                        "qcow2",
                        "subvol",
                        "vmdk"
                      ]
                    },
                    "fs-name": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "The Ceph filesystem name.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-configid"
                      }
                    },
                    "fuse": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Mount CephFS through FUSE.",
                      "optional": true
                    },
                    "is_mountpoint": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.",
                      "optional": true,
                      "defaultValue": "no"
                    },
                    "keyring": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Client keyring contents (for external clusters).",
                      "optional": true
                    },
                    "krbd": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Always access rbd through krbd kernel module.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "lio_tpg": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "target portal group for Linux LIO targets",
                      "optional": true
                    },
                    "master-pubkey": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup.",
                      "optional": true
                    },
                    "max-protected-backups": {
                      "type": "integer",
                      "typetext": "<integer> (-1 - N)",
                      "description": "Maximal number of protected backups per guest. Use '-1' for unlimited.",
                      "optional": true,
                      "defaultValue": "Unlimited for users with Datastore.Allocate privilege, 5 for other users",
                      "constraints": {
                        "minimum": -1
                      }
                    },
                    "mkdir": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.",
                      "optional": true,
                      "defaultValue": "yes"
                    },
                    "monhost": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "IP addresses of monitors (for external clusters).",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-portal-dns-list"
                      }
                    },
                    "mountpoint": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "mount point",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-path"
                      }
                    },
                    "namespace": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Namespace.",
                      "optional": true
                    },
                    "nocow": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "nodes": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "List of nodes for which the storage configuration applies.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-node-list"
                      }
                    },
                    "nowritecache": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "disable write caching on the target",
                      "optional": true
                    },
                    "options": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-options"
                      }
                    },
                    "password": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Password for accessing the share/datastore.",
                      "optional": true,
                      "constraints": {
                        "maxLength": 256
                      }
                    },
                    "pool": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Pool.",
                      "optional": true
                    },
                    "port": {
                      "type": "integer",
                      "typetext": "<integer> (1 - 65535)",
                      "description": "Use this port to connect to the storage instead of the default one (for example, with PBS or ESXi). For NFS and CIFS, use the 'options' option to configure the port via the mount options.",
                      "optional": true,
                      "constraints": {
                        "minimum": 1,
                        "maximum": 65535
                      }
                    },
                    "preallocation": {
                      "type": "string",
                      "description": "Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.",
                      "optional": true,
                      "defaultValue": "metadata",
                      "enum": [
                        "off",
                        "metadata",
                        "falloc",
                        "full"
                      ]
                    },
                    "prune-backups": {
                      "type": "string",
                      "typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                      "description": "The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups.",
                      "optional": true,
                      "constraints": {
                        "format": "prune-backups"
                      }
                    },
                    "saferemove": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Zero-out data when removing LVs.",
                      "optional": true
                    },
                    "saferemove_throughput": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Wipe throughput (cstream -t parameter value).",
                      "optional": true
                    },
                    "server": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Server IP or DNS name.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-server"
                      }
                    },
                    "shared": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Indicate that this is a single storage with the same contents on all nodes (or all listed in the 'nodes' option). It will not make the contents of a local storage automatically accessible to other nodes, it just marks an already shared storage as such!",
                      "optional": true
                    },
                    "skip-cert-verification": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Disable TLS certificate verification, only enable on fully trusted networks!",
                      "optional": true,
                      "defaultValue": "false"
                    },
                    "smbversion": {
                      "type": "string",
                      "description": "SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.",
                      "optional": true,
                      "defaultValue": "default",
                      "enum": [
                        "default",
                        "2.0",
                        "2.1",
                        "3",
                        "3.0",
                        "3.11"
                      ]
                    },
                    "snapshot-as-volume-chain": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Enable support for creating storage-vendor agnostic snapshot through volume backing-chains.",
                      "optional": true,
                      "defaultValue": 0
                    },
                    "sparse": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "use sparse volumes",
                      "optional": true
                    },
                    "storage": {
                      "type": "string",
                      "typetext": "<storage ID>",
                      "description": "The storage identifier.",
                      "constraints": {
                        "format": "pve-storage-id",
                        "formatDescription": "storage ID"
                      }
                    },
                    "subdir": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Subdir to mount.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-path"
                      }
                    },
                    "tagged_only": {
                      "type": "boolean",
                      "typetext": "<boolean>",
                      "description": "Only use logical volumes tagged with 'pve-vm-ID'.",
                      "optional": true
                    },
                    "username": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "RBD Id.",
                      "optional": true
                    },
                    "zfs-base-path": {
                      "type": "string",
                      "typetext": "<string>",
                      "description": "Base path where to look for the created ZFS block devices. Set automatically during creation if not specified. Usually '/dev/zvol'.",
                      "optional": true,
                      "constraints": {
                        "format": "pve-storage-path"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "responses": [
                {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "object",
                        "description": "Partial, possible server generated, configuration properties.",
                        "optional": true,
                        "properties": {
                          "encryption-key": {
                            "type": "string",
                            "description": "The, possible auto-generated, encryption-key.",
                            "optional": true
                          }
                        },
                        "additionalProperties": true
                      },
                      "storage": {
                        "type": "string",
                        "description": "The ID of the created storage."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the created storage.",
                        "enum": [
                          "btrfs",
                          "cephfs",
                          "cifs",
                          "dir",
                          "esxi",
                          "iscsi",
                          "iscsidirect",
                          "lvm",
                          "lvmthin",
                          "nfs",
                          "pbs",
                          "rbd",
                          "zfs",
                          "zfspool"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          ],
          "children": []
        }
      ]
    },
    {
      "id": "version",
      "path": "/version",
      "slug": "version",
      "label": "version",
      "endpoints": [
        {
          "id": "get-version",
          "operationId": "get-version",
          "path": "/version",
          "httpMethod": "GET",
          "name": "version",
          "description": "API version details, including some parts of the global datacenter config.",
          "security": {
            "allowToken": true,
            "requiresAuthentication": false,
            "permissions": {
              "all": [
                {
                  "user": "all"
                }
              ]
            }
          },
          "features": {
            "proxy": false,
            "download": false,
            "upload": false
          },
          "request": {
            "schema": {
              "additionalProperties": false
            }
          },
          "responses": [
            {
              "schema": {
                "type": "object",
                "properties": {
                  "console": {
                    "type": "string",
                    "description": "The default console viewer to use.",
                    "optional": true,
                    "enum": [
                      "applet",
                      "vv",
                      "html5",
                      "xtermjs"
                    ]
                  },
                  "release": {
                    "type": "string",
                    "description": "The current Proxmox VE point release in `x.y` format."
                  },
                  "repoid": {
                    "type": "string",
                    "description": "The short git revision from which this version was build.",
                    "constraints": {
                      "pattern": "[0-9a-fA-F]{8,64}"
                    }
                  },
                  "version": {
                    "type": "string",
                    "description": "The full pve-manager package version of this node."
                  }
                }
              }
            }
          ]
        }
      ],
      "children": []
    }
  ]
}
