name: npm-package

on:
  release:
    types:
      - published

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com

      - name: Configure npm authentication
        run: |
          cat <<'RC' >> ~/.npmrc
          //npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}
          RC
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove deprecated npm config flags
        run: npm config delete always-auth --location=user || true

      - name: Align package version with release tag
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          set -euo pipefail
          if [ -z "${RELEASE_TAG}" ]; then
            echo "Missing release tag from event payload" >&2
            exit 1
          fi
          RELEASE_VERSION="$(
            node -e '
const tag = process.env.RELEASE_TAG ?? "";
if (!tag) throw new Error("missing tag");
const stripped = tag.replace(/^v/i, "");
if (!stripped) throw new Error(`unable to derive version from tag "${tag}"`);
const normalized = stripped.replace(/\.([0-9A-Za-z-]+)\./, "-$1.");
if (!/^[0-9]+\.[0-9]+\.[0-9]+(?:-[0-9A-Za-z.-]+)?$/.test(normalized)) {
  throw new Error(`unsupported release tag "${tag}" -> "${normalized}"`);
}
process.stdout.write(normalized);
' 2>/tmp/npm-release-version.err
          )" || {
            cat /tmp/npm-release-version.err >&2
            exit 1
          }
          echo "Resolved npm version: ${RELEASE_VERSION}"
          npm version "${RELEASE_VERSION}" --workspace packages/proxmox-openapi --no-git-tag-version

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run build --workspace packages/proxmox-openapi

      - name: Publish package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --workspace packages/proxmox-openapi --provenance --access public
